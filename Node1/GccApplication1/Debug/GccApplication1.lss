
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000120  00800100  000014c4  00001558  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800220  00800220  00001678  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001678  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000280  00000000  00000000  000016d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002623  00000000  00000000  00001954  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000e98  00000000  00000000  00003f77  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000de6  00000000  00000000  00004e0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000006a0  00000000  00000000  00005bf8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000084c  00000000  00000000  00006298  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000135c  00000000  00000000  00006ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000208  00000000  00000000  00007e40  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <oled_init+0x5c>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	12 e0       	ldi	r17, 0x02	; 2
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e4 ec       	ldi	r30, 0xC4	; 196
     37c:	f4 e1       	ldi	r31, 0x14	; 20
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a0 32       	cpi	r26, 0x20	; 32
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	22 e0       	ldi	r18, 0x02	; 2
     38c:	a0 e2       	ldi	r26, 0x20	; 32
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	aa 32       	cpi	r26, 0x2A	; 42
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 24 03 	call	0x648	; 0x648 <main>
     39e:	0c 94 60 0a 	jmp	0x14c0	; 0x14c0 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <can_init>:

#include <stdlib.h>
#include <avr/io.h>

void can_init(void){
	mcp_init();
     3a6:	0e 94 29 05 	call	0xa52	; 0xa52 <mcp_init>
	mcp_bitModify(MCP_RXB0CTRL, MCP_RXBCTRL_MASK, 0xff);
     3aa:	4f ef       	ldi	r20, 0xFF	; 255
     3ac:	60 e6       	ldi	r22, 0x60	; 96
     3ae:	80 e6       	ldi	r24, 0x60	; 96
     3b0:	0e 94 05 05 	call	0xa0a	; 0xa0a <mcp_bitModify>
	mcp_bitModify(MCP_RXB1CTRL, MCP_RXBCTRL_MASK, 0xff);	
     3b4:	4f ef       	ldi	r20, 0xFF	; 255
     3b6:	60 e6       	ldi	r22, 0x60	; 96
     3b8:	80 e7       	ldi	r24, 0x70	; 112
     3ba:	0e 94 05 05 	call	0xa0a	; 0xa0a <mcp_bitModify>
	
	mcp_bitModify(MCP_CANCTRL, MCP_CANCTRL_MASK, MCP_NORMAL_MODE);
     3be:	40 e0       	ldi	r20, 0x00	; 0
     3c0:	60 ee       	ldi	r22, 0xE0	; 224
     3c2:	8f e0       	ldi	r24, 0x0F	; 15
     3c4:	0c 94 05 05 	jmp	0xa0a	; 0xa0a <mcp_bitModify>

000003c8 <can_write>:
	mcp_bitModify(MCP_CANINTF, MCP_RX0IF, 0);
	return msg;
}

//tx_buffer is the address of the control register
void can_write(can_message *msg, uint8_t tx_buffer){
     3c8:	ef 92       	push	r14
     3ca:	ff 92       	push	r15
     3cc:	0f 93       	push	r16
     3ce:	1f 93       	push	r17
     3d0:	cf 93       	push	r28
     3d2:	df 93       	push	r29
     3d4:	ec 01       	movw	r28, r24
     3d6:	f6 2e       	mov	r15, r22
	while(mcp_read(tx_buffer) & (1 << MCP_TEXREQ));	//wait for previous message to send
     3d8:	8f 2d       	mov	r24, r15
     3da:	0e 94 d7 04 	call	0x9ae	; 0x9ae <mcp_read>
     3de:	83 fd       	sbrc	r24, 3
     3e0:	fb cf       	rjmp	.-10     	; 0x3d8 <can_write+0x10>
	
	mcp_write(tx_buffer + MCP_TXSIDH_OFFSET, (msg->id >> 3) & MCP_SIDH_MASK); //enter higher id
     3e2:	68 81       	ld	r22, Y
     3e4:	79 81       	ldd	r23, Y+1	; 0x01
     3e6:	83 e0       	ldi	r24, 0x03	; 3
     3e8:	76 95       	lsr	r23
     3ea:	67 95       	ror	r22
     3ec:	8a 95       	dec	r24
     3ee:	e1 f7       	brne	.-8      	; 0x3e8 <can_write+0x20>
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	8f 0d       	add	r24, r15
     3f4:	0e 94 e6 04 	call	0x9cc	; 0x9cc <mcp_write>
	mcp_write(tx_buffer + MCP_TXSIDL_OFFSET, (msg->id << 5) & MCP_SIDL_MASK); //enter lower id
     3f8:	68 81       	ld	r22, Y
     3fa:	62 95       	swap	r22
     3fc:	66 0f       	add	r22, r22
     3fe:	60 7e       	andi	r22, 0xE0	; 224
     400:	82 e0       	ldi	r24, 0x02	; 2
     402:	8f 0d       	add	r24, r15
     404:	0e 94 e6 04 	call	0x9cc	; 0x9cc <mcp_write>
	
	mcp_write(tx_buffer + MCP_TXBDLC_OFFSET, msg->length & MCP_BDLC_MASK); //enter length of message
     408:	6a 81       	ldd	r22, Y+2	; 0x02
     40a:	6f 70       	andi	r22, 0x0F	; 15
     40c:	85 e0       	ldi	r24, 0x05	; 5
     40e:	8f 0d       	add	r24, r15
     410:	0e 94 e6 04 	call	0x9cc	; 0x9cc <mcp_write>
	
	for(int i = 0; i < msg->length; i++){
     414:	00 e0       	ldi	r16, 0x00	; 0
     416:	10 e0       	ldi	r17, 0x00	; 0
		mcp_write(tx_buffer + MCP_TXB_OFFSET + i, msg->data[i]);
     418:	96 e0       	ldi	r25, 0x06	; 6
     41a:	e9 2e       	mov	r14, r25
     41c:	ef 0c       	add	r14, r15
	mcp_write(tx_buffer + MCP_TXSIDH_OFFSET, (msg->id >> 3) & MCP_SIDH_MASK); //enter higher id
	mcp_write(tx_buffer + MCP_TXSIDL_OFFSET, (msg->id << 5) & MCP_SIDL_MASK); //enter lower id
	
	mcp_write(tx_buffer + MCP_TXBDLC_OFFSET, msg->length & MCP_BDLC_MASK); //enter length of message
	
	for(int i = 0; i < msg->length; i++){
     41e:	2a 81       	ldd	r18, Y+2	; 0x02
     420:	30 e0       	ldi	r19, 0x00	; 0
     422:	02 17       	cp	r16, r18
     424:	13 07       	cpc	r17, r19
     426:	5c f4       	brge	.+22     	; 0x43e <can_write+0x76>
     428:	fe 01       	movw	r30, r28
     42a:	e0 0f       	add	r30, r16
     42c:	f1 1f       	adc	r31, r17
		mcp_write(tx_buffer + MCP_TXB_OFFSET + i, msg->data[i]);
     42e:	63 81       	ldd	r22, Z+3	; 0x03
     430:	8e 2d       	mov	r24, r14
     432:	80 0f       	add	r24, r16
     434:	0e 94 e6 04 	call	0x9cc	; 0x9cc <mcp_write>
	mcp_write(tx_buffer + MCP_TXSIDH_OFFSET, (msg->id >> 3) & MCP_SIDH_MASK); //enter higher id
	mcp_write(tx_buffer + MCP_TXSIDL_OFFSET, (msg->id << 5) & MCP_SIDL_MASK); //enter lower id
	
	mcp_write(tx_buffer + MCP_TXBDLC_OFFSET, msg->length & MCP_BDLC_MASK); //enter length of message
	
	for(int i = 0; i < msg->length; i++){
     438:	0f 5f       	subi	r16, 0xFF	; 255
     43a:	1f 4f       	sbci	r17, 0xFF	; 255
     43c:	f0 cf       	rjmp	.-32     	; 0x41e <can_write+0x56>
		mcp_write(tx_buffer + MCP_TXB_OFFSET + i, msg->data[i]);
	}
	
	mcp_requestToSend(0x80 + (tx_buffer >> 4) - 0x02); //Convert TXBnCTRL address to RTS-code
     43e:	8f 2d       	mov	r24, r15
     440:	82 95       	swap	r24
     442:	8f 70       	andi	r24, 0x0F	; 15
     444:	82 58       	subi	r24, 0x82	; 130
	
}
     446:	df 91       	pop	r29
     448:	cf 91       	pop	r28
     44a:	1f 91       	pop	r17
     44c:	0f 91       	pop	r16
     44e:	ff 90       	pop	r15
     450:	ef 90       	pop	r14
	
	for(int i = 0; i < msg->length; i++){
		mcp_write(tx_buffer + MCP_TXB_OFFSET + i, msg->data[i]);
	}
	
	mcp_requestToSend(0x80 + (tx_buffer >> 4) - 0x02); //Convert TXBnCTRL address to RTS-code
     452:	0c 94 24 05 	jmp	0xa48	; 0xa48 <mcp_requestToSend>

00000456 <can_pollInterrupt>:
	
}

uint8_t can_pollInterrupt(void){
     456:	cf 93       	push	r28
	if(PIND | (1 << PB3)){ //Check for interrupts
     458:	80 b3       	in	r24, 0x10	; 16
		uint8_t interrupt_register = mcp_read(MCP_CANINTF);
     45a:	8c e2       	ldi	r24, 0x2C	; 44
     45c:	0e 94 d7 04 	call	0x9ae	; 0x9ae <mcp_read>
		//Finds the register that sent an interrupt signal
		if(interrupt_register & MCP_RX0IF){
     460:	80 ff       	sbrs	r24, 0
     462:	07 c0       	rjmp	.+14     	; 0x472 <can_pollInterrupt+0x1c>
			mcp_bitModify(MCP_CANINTF, MCP_RX0IF, 0xFF);
     464:	4f ef       	ldi	r20, 0xFF	; 255
     466:	61 e0       	ldi	r22, 0x01	; 1
     468:	8c e2       	ldi	r24, 0x2C	; 44
     46a:	0e 94 05 05 	call	0xa0a	; 0xa0a <mcp_bitModify>
			return MCP_RXB0CTRL;
     46e:	c0 e6       	ldi	r28, 0x60	; 96
     470:	13 c0       	rjmp	.+38     	; 0x498 <can_pollInterrupt+0x42>
		}
		
		else if(interrupt_register & MCP_RX1IF){
     472:	c8 2f       	mov	r28, r24
     474:	c2 70       	andi	r28, 0x02	; 2
     476:	81 ff       	sbrs	r24, 1
     478:	07 c0       	rjmp	.+14     	; 0x488 <can_pollInterrupt+0x32>
			mcp_bitModify(MCP_CANINTF, MCP_RX1IF, 0xFF);
     47a:	4f ef       	ldi	r20, 0xFF	; 255
     47c:	62 e0       	ldi	r22, 0x02	; 2
     47e:	8c e2       	ldi	r24, 0x2C	; 44
     480:	0e 94 05 05 	call	0xa0a	; 0xa0a <mcp_bitModify>
			return MCP_RXB1CTRL;
     484:	c0 e7       	ldi	r28, 0x70	; 112
     486:	08 c0       	rjmp	.+16     	; 0x498 <can_pollInterrupt+0x42>
		}	
	}
	
	printf("No interrupt detected!");
     488:	26 e0       	ldi	r18, 0x06	; 6
     48a:	31 e0       	ldi	r19, 0x01	; 1
     48c:	3f 93       	push	r19
     48e:	2f 93       	push	r18
     490:	0e 94 4d 07 	call	0xe9a	; 0xe9a <printf>
	return 0x00;
     494:	0f 90       	pop	r0
     496:	0f 90       	pop	r0
	
}
     498:	8c 2f       	mov	r24, r28
     49a:	cf 91       	pop	r28
     49c:	08 95       	ret

0000049e <can_read>:
	mcp_bitModify(MCP_CANCTRL, MCP_CANCTRL_MASK, MCP_NORMAL_MODE);
	
	
}

can_message can_read(void){
     49e:	6f 92       	push	r6
     4a0:	7f 92       	push	r7
     4a2:	8f 92       	push	r8
     4a4:	9f 92       	push	r9
     4a6:	af 92       	push	r10
     4a8:	bf 92       	push	r11
     4aa:	cf 92       	push	r12
     4ac:	df 92       	push	r13
     4ae:	ef 92       	push	r14
     4b0:	ff 92       	push	r15
     4b2:	0f 93       	push	r16
     4b4:	1f 93       	push	r17
     4b6:	cf 93       	push	r28
     4b8:	df 93       	push	r29
     4ba:	cd b7       	in	r28, 0x3d	; 61
     4bc:	de b7       	in	r29, 0x3e	; 62
     4be:	2b 97       	sbiw	r28, 0x0b	; 11
     4c0:	0f b6       	in	r0, 0x3f	; 63
     4c2:	f8 94       	cli
     4c4:	de bf       	out	0x3e, r29	; 62
     4c6:	0f be       	out	0x3f, r0	; 63
     4c8:	cd bf       	out	0x3d, r28	; 61
     4ca:	6c 01       	movw	r12, r24
	can_message msg;
	uint8_t bufferSelect = can_pollInterrupt();
     4cc:	0e 94 2b 02 	call	0x456	; 0x456 <can_pollInterrupt>
     4d0:	78 2e       	mov	r7, r24
	/*
	if(!bufferSelect){
		printf("No interrupt detected!");
	}
	*/
	msg.id = (mcp_read(bufferSelect + MCP_RXSIDH_OFFSET) << 3) | (mcp_read(bufferSelect + MCP_RXSIDL_OFFSET) >> 5);
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	87 0d       	add	r24, r7
     4d6:	0e 94 d7 04 	call	0x9ae	; 0x9ae <mcp_read>
     4da:	e8 2e       	mov	r14, r24
     4dc:	82 e0       	ldi	r24, 0x02	; 2
     4de:	87 0d       	add	r24, r7
     4e0:	0e 94 d7 04 	call	0x9ae	; 0x9ae <mcp_read>
     4e4:	82 95       	swap	r24
     4e6:	86 95       	lsr	r24
     4e8:	87 70       	andi	r24, 0x07	; 7
     4ea:	98 e0       	ldi	r25, 0x08	; 8
     4ec:	e9 9e       	mul	r14, r25
     4ee:	70 01       	movw	r14, r0
     4f0:	11 24       	eor	r1, r1
     4f2:	e8 2a       	or	r14, r24
	msg.length = mcp_read(bufferSelect + MCP_RXBDLC_OFFSET) & MCP_RXBDLC_MASK;
     4f4:	85 e0       	ldi	r24, 0x05	; 5
     4f6:	87 0d       	add	r24, r7
     4f8:	0e 94 d7 04 	call	0x9ae	; 0x9ae <mcp_read>
     4fc:	8f 70       	andi	r24, 0x0F	; 15
     4fe:	68 2e       	mov	r6, r24
     500:	5e 01       	movw	r10, r28
     502:	e4 e0       	ldi	r30, 0x04	; 4
     504:	ae 0e       	add	r10, r30
     506:	b1 1c       	adc	r11, r1
	
	for(int i = 0; i < msg.length; i++){
     508:	00 e0       	ldi	r16, 0x00	; 0
     50a:	10 e0       	ldi	r17, 0x00	; 0
     50c:	88 2e       	mov	r8, r24
     50e:	91 2c       	mov	r9, r1
		msg.data[i] = mcp_read(bufferSelect + MCP_RXB_OFFSET + i);
     510:	f6 e0       	ldi	r31, 0x06	; 6
     512:	7f 0e       	add	r7, r31
	}
	*/
	msg.id = (mcp_read(bufferSelect + MCP_RXSIDH_OFFSET) << 3) | (mcp_read(bufferSelect + MCP_RXSIDL_OFFSET) >> 5);
	msg.length = mcp_read(bufferSelect + MCP_RXBDLC_OFFSET) & MCP_RXBDLC_MASK;
	
	for(int i = 0; i < msg.length; i++){
     514:	08 15       	cp	r16, r8
     516:	19 05       	cpc	r17, r9
     518:	54 f4       	brge	.+20     	; 0x52e <__stack+0x2f>
		msg.data[i] = mcp_read(bufferSelect + MCP_RXB_OFFSET + i);
     51a:	87 2d       	mov	r24, r7
     51c:	80 0f       	add	r24, r16
     51e:	0e 94 d7 04 	call	0x9ae	; 0x9ae <mcp_read>
     522:	f5 01       	movw	r30, r10
     524:	81 93       	st	Z+, r24
     526:	5f 01       	movw	r10, r30
	}
	*/
	msg.id = (mcp_read(bufferSelect + MCP_RXSIDH_OFFSET) << 3) | (mcp_read(bufferSelect + MCP_RXSIDL_OFFSET) >> 5);
	msg.length = mcp_read(bufferSelect + MCP_RXBDLC_OFFSET) & MCP_RXBDLC_MASK;
	
	for(int i = 0; i < msg.length; i++){
     528:	0f 5f       	subi	r16, 0xFF	; 255
     52a:	1f 4f       	sbci	r17, 0xFF	; 255
     52c:	f3 cf       	rjmp	.-26     	; 0x514 <__stack+0x15>
		msg.data[i] = mcp_read(bufferSelect + MCP_RXB_OFFSET + i);
	}
	
	mcp_bitModify(MCP_CANINTF, MCP_RX0IF, 0);
     52e:	40 e0       	ldi	r20, 0x00	; 0
     530:	61 e0       	ldi	r22, 0x01	; 1
     532:	8c e2       	ldi	r24, 0x2C	; 44
     534:	0e 94 05 05 	call	0xa0a	; 0xa0a <mcp_bitModify>
	return msg;
     538:	fa 82       	std	Y+2, r15	; 0x02
     53a:	e9 82       	std	Y+1, r14	; 0x01
     53c:	6b 82       	std	Y+3, r6	; 0x03
     53e:	8b e0       	ldi	r24, 0x0B	; 11
     540:	fe 01       	movw	r30, r28
     542:	31 96       	adiw	r30, 0x01	; 1
     544:	d6 01       	movw	r26, r12
     546:	01 90       	ld	r0, Z+
     548:	0d 92       	st	X+, r0
     54a:	8a 95       	dec	r24
     54c:	e1 f7       	brne	.-8      	; 0x546 <__stack+0x47>
}
     54e:	c6 01       	movw	r24, r12
     550:	2b 96       	adiw	r28, 0x0b	; 11
     552:	0f b6       	in	r0, 0x3f	; 63
     554:	f8 94       	cli
     556:	de bf       	out	0x3e, r29	; 62
     558:	0f be       	out	0x3f, r0	; 63
     55a:	cd bf       	out	0x3d, r28	; 61
     55c:	df 91       	pop	r29
     55e:	cf 91       	pop	r28
     560:	1f 91       	pop	r17
     562:	0f 91       	pop	r16
     564:	ff 90       	pop	r15
     566:	ef 90       	pop	r14
     568:	df 90       	pop	r13
     56a:	cf 90       	pop	r12
     56c:	bf 90       	pop	r11
     56e:	af 90       	pop	r10
     570:	9f 90       	pop	r9
     572:	8f 90       	pop	r8
     574:	7f 90       	pop	r7
     576:	6f 90       	pop	r6
     578:	08 95       	ret

0000057a <new_can_message>:
		printf("%c", msg.data[i]);
	}
	printf("\n");
}

can_message new_can_message(uint16_t id, uint8_t length, uint8_t* data){
     57a:	ef 92       	push	r14
     57c:	ff 92       	push	r15
     57e:	0f 93       	push	r16
     580:	1f 93       	push	r17
     582:	cf 93       	push	r28
     584:	df 93       	push	r29
     586:	cd b7       	in	r28, 0x3d	; 61
     588:	de b7       	in	r29, 0x3e	; 62
     58a:	2b 97       	sbiw	r28, 0x0b	; 11
     58c:	0f b6       	in	r0, 0x3f	; 63
     58e:	f8 94       	cli
     590:	de bf       	out	0x3e, r29	; 62
     592:	0f be       	out	0x3f, r0	; 63
     594:	cd bf       	out	0x3d, r28	; 61
     596:	de 01       	movw	r26, r28
     598:	14 96       	adiw	r26, 0x04	; 4
	can_message m;
	m.id = id;
	m.length = length;
	for(int i = 0; i < length; i++){
     59a:	f9 01       	movw	r30, r18
     59c:	04 2f       	mov	r16, r20
     59e:	10 e0       	ldi	r17, 0x00	; 0
     5a0:	7f 01       	movw	r14, r30
     5a2:	e2 1a       	sub	r14, r18
     5a4:	f3 0a       	sbc	r15, r19
     5a6:	e0 16       	cp	r14, r16
     5a8:	f1 06       	cpc	r15, r17
     5aa:	1c f4       	brge	.+6      	; 0x5b2 <new_can_message+0x38>
		m.data[i] = data[i];	
     5ac:	51 91       	ld	r21, Z+
     5ae:	5d 93       	st	X+, r21
     5b0:	f7 cf       	rjmp	.-18     	; 0x5a0 <new_can_message+0x26>
	}
	
	
	return m;
     5b2:	7a 83       	std	Y+2, r23	; 0x02
     5b4:	69 83       	std	Y+1, r22	; 0x01
     5b6:	4b 83       	std	Y+3, r20	; 0x03
     5b8:	2b e0       	ldi	r18, 0x0B	; 11
     5ba:	fe 01       	movw	r30, r28
     5bc:	31 96       	adiw	r30, 0x01	; 1
     5be:	dc 01       	movw	r26, r24
     5c0:	01 90       	ld	r0, Z+
     5c2:	0d 92       	st	X+, r0
     5c4:	2a 95       	dec	r18
     5c6:	e1 f7       	brne	.-8      	; 0x5c0 <new_can_message+0x46>
}
     5c8:	2b 96       	adiw	r28, 0x0b	; 11
     5ca:	0f b6       	in	r0, 0x3f	; 63
     5cc:	f8 94       	cli
     5ce:	de bf       	out	0x3e, r29	; 62
     5d0:	0f be       	out	0x3f, r0	; 63
     5d2:	cd bf       	out	0x3d, r28	; 61
     5d4:	df 91       	pop	r29
     5d6:	cf 91       	pop	r28
     5d8:	1f 91       	pop	r17
     5da:	0f 91       	pop	r16
     5dc:	ff 90       	pop	r15
     5de:	ef 90       	pop	r14
     5e0:	08 95       	ret

000005e2 <can_send_joystick_message>:

void can_send_joystick_message(Joystick joy_position){
     5e2:	cf 93       	push	r28
     5e4:	df 93       	push	r29
     5e6:	cd b7       	in	r28, 0x3d	; 61
     5e8:	de b7       	in	r29, 0x3e	; 62
     5ea:	67 97       	sbiw	r28, 0x17	; 23
     5ec:	0f b6       	in	r0, 0x3f	; 63
     5ee:	f8 94       	cli
     5f0:	de bf       	out	0x3e, r29	; 62
     5f2:	0f be       	out	0x3f, r0	; 63
     5f4:	cd bf       	out	0x3d, r28	; 61
     5f6:	28 8b       	std	Y+16, r18	; 0x10
     5f8:	39 8b       	std	Y+17, r19	; 0x11
     5fa:	4a 8b       	std	Y+18, r20	; 0x12
     5fc:	5b 8b       	std	Y+19, r21	; 0x13
     5fe:	6c 8b       	std	Y+20, r22	; 0x14
     600:	7d 8b       	std	Y+21, r23	; 0x15
     602:	8e 8b       	std	Y+22, r24	; 0x16
     604:	9f 8b       	std	Y+23, r25	; 0x17
	uint8_t joy_data[4] = {joy_position.x, joy_position.y, joy_position.offset_y, joy_position.offset_y};
     606:	88 89       	ldd	r24, Y+16	; 0x10
     608:	99 89       	ldd	r25, Y+17	; 0x11
     60a:	8c 87       	std	Y+12, r24	; 0x0c
     60c:	8a 89       	ldd	r24, Y+18	; 0x12
     60e:	9b 89       	ldd	r25, Y+19	; 0x13
     610:	8d 87       	std	Y+13, r24	; 0x0d
     612:	8e 89       	ldd	r24, Y+22	; 0x16
     614:	8e 87       	std	Y+14, r24	; 0x0e
     616:	8f 87       	std	Y+15, r24	; 0x0f
	can_message msg = new_can_message(MCP_JOYSTICK_MESSAGE, 4, joy_data);
     618:	9e 01       	movw	r18, r28
     61a:	24 5f       	subi	r18, 0xF4	; 244
     61c:	3f 4f       	sbci	r19, 0xFF	; 255
     61e:	44 e0       	ldi	r20, 0x04	; 4
     620:	65 e5       	ldi	r22, 0x55	; 85
     622:	70 e0       	ldi	r23, 0x00	; 0
     624:	ce 01       	movw	r24, r28
     626:	01 96       	adiw	r24, 0x01	; 1
     628:	0e 94 bd 02 	call	0x57a	; 0x57a <new_can_message>
	can_write(&msg, MCP_TXB0CTRL);
     62c:	60 e3       	ldi	r22, 0x30	; 48
     62e:	ce 01       	movw	r24, r28
     630:	01 96       	adiw	r24, 0x01	; 1
     632:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <can_write>
}
     636:	67 96       	adiw	r28, 0x17	; 23
     638:	0f b6       	in	r0, 0x3f	; 63
     63a:	f8 94       	cli
     63c:	de bf       	out	0x3e, r29	; 62
     63e:	0f be       	out	0x3f, r0	; 63
     640:	cd bf       	out	0x3d, r28	; 61
     642:	df 91       	pop	r29
     644:	cf 91       	pop	r28
     646:	08 95       	ret

00000648 <main>:
#include "can.h"
#include "mcp_defines.h"


int main(void)
{
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
     64c:	cd b7       	in	r28, 0x3d	; 61
     64e:	de b7       	in	r29, 0x3e	; 62
     650:	a0 97       	sbiw	r28, 0x20	; 32
     652:	0f b6       	in	r0, 0x3f	; 63
     654:	f8 94       	cli
     656:	de bf       	out	0x3e, r29	; 62
     658:	0f be       	out	0x3f, r0	; 63
     65a:	cd bf       	out	0x3d, r28	; 61
	Joystick joy_position;
	volatile int select_pos = 1;
     65c:	81 e0       	ldi	r24, 0x01	; 1
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	9d 8b       	std	Y+21, r25	; 0x15
     662:	8c 8b       	std	Y+20, r24	; 0x14
	Menu *current_menu;
	
	USART_Init(MYUBRR);
     664:	8f e1       	ldi	r24, 0x1F	; 31
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	0e 94 ca 05 	call	0xb94	; 0xb94 <USART_Init>
	fdevopen((int (*)(char,  struct __file *))USART_Transmit, (int (*)(struct __file *))USART_Receive);
     66c:	67 ed       	ldi	r22, 0xD7	; 215
     66e:	75 e0       	ldi	r23, 0x05	; 5
     670:	83 ed       	ldi	r24, 0xD3	; 211
     672:	95 e0       	ldi	r25, 0x05	; 5
     674:	0e 94 02 07 	call	0xe04	; 0xe04 <fdevopen>
	printf("UART setup done\n");
     678:	85 e2       	ldi	r24, 0x25	; 37
     67a:	91 e0       	ldi	r25, 0x01	; 1
     67c:	0e 94 61 07 	call	0xec2	; 0xec2 <puts>
	SRAM_init();
     680:	0e 94 c6 05 	call	0xb8c	; 0xb8c <SRAM_init>
	printf("SRAM setup done\n");
     684:	85 e3       	ldi	r24, 0x35	; 53
     686:	91 e0       	ldi	r25, 0x01	; 1
     688:	0e 94 61 07 	call	0xec2	; 0xec2 <puts>
	JOY_init(&joy_position);
     68c:	ce 01       	movw	r24, r28
     68e:	0c 96       	adiw	r24, 0x0c	; 12
     690:	0e 94 b8 04 	call	0x970	; 0x970 <JOY_init>
	printf("JOY setup done\n");
     694:	85 e4       	ldi	r24, 0x45	; 69
     696:	91 e0       	ldi	r25, 0x01	; 1
     698:	0e 94 61 07 	call	0xec2	; 0xec2 <puts>
	oled_init();
     69c:	0e 94 73 05 	call	0xae6	; 0xae6 <oled_init>
	can_init();
     6a0:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_init>
	printf("Initialization done\n");
     6a4:	84 e5       	ldi	r24, 0x54	; 84
     6a6:	91 e0       	ldi	r25, 0x01	; 1
     6a8:	0e 94 61 07 	call	0xec2	; 0xec2 <puts>
	current_menu = interface_init();
     6ac:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <interface_init>

	//putte denne i init
	interface_print(current_menu);
     6b0:	0e 94 30 04 	call	0x860	; 0x860 <interface_print>
    while(1)
        {	
			JOY_read_joystick(&joy_position);
			can_send_joystick_message(joy_position);
			//interface_select(joy_position, &select_pos, &current_menu);
			printf("Joy: %d\n", joy_position.x);
     6b4:	08 e6       	ldi	r16, 0x68	; 104
     6b6:	11 e0       	ldi	r17, 0x01	; 1
			if(can_pollInterrupt()){
				msg = can_read();
     6b8:	8b e0       	ldi	r24, 0x0B	; 11
     6ba:	f8 2e       	mov	r15, r24
	uint8_t score;
	can_message msg;
	//mcp_write(CANSTAT)
    while(1)
        {	
			JOY_read_joystick(&joy_position);
     6bc:	ce 01       	movw	r24, r28
     6be:	0c 96       	adiw	r24, 0x0c	; 12
     6c0:	0e 94 c3 04 	call	0x986	; 0x986 <JOY_read_joystick>
			can_send_joystick_message(joy_position);
     6c4:	2c 85       	ldd	r18, Y+12	; 0x0c
     6c6:	3d 85       	ldd	r19, Y+13	; 0x0d
     6c8:	4e 85       	ldd	r20, Y+14	; 0x0e
     6ca:	5f 85       	ldd	r21, Y+15	; 0x0f
     6cc:	68 89       	ldd	r22, Y+16	; 0x10
     6ce:	79 89       	ldd	r23, Y+17	; 0x11
     6d0:	8a 89       	ldd	r24, Y+18	; 0x12
     6d2:	9b 89       	ldd	r25, Y+19	; 0x13
     6d4:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <can_send_joystick_message>
			//interface_select(joy_position, &select_pos, &current_menu);
			printf("Joy: %d\n", joy_position.x);
     6d8:	8c 85       	ldd	r24, Y+12	; 0x0c
     6da:	9d 85       	ldd	r25, Y+13	; 0x0d
     6dc:	9f 93       	push	r25
     6de:	8f 93       	push	r24
     6e0:	1f 93       	push	r17
     6e2:	0f 93       	push	r16
     6e4:	0e 94 4d 07 	call	0xe9a	; 0xe9a <printf>
			if(can_pollInterrupt()){
     6e8:	0e 94 2b 02 	call	0x456	; 0x456 <can_pollInterrupt>
     6ec:	0f 90       	pop	r0
     6ee:	0f 90       	pop	r0
     6f0:	0f 90       	pop	r0
     6f2:	0f 90       	pop	r0
     6f4:	88 23       	and	r24, r24
     6f6:	69 f0       	breq	.+26     	; 0x712 <main+0xca>
				msg = can_read();
     6f8:	ce 01       	movw	r24, r28
     6fa:	46 96       	adiw	r24, 0x16	; 22
     6fc:	0e 94 4f 02 	call	0x49e	; 0x49e <can_read>
     700:	fe 01       	movw	r30, r28
     702:	76 96       	adiw	r30, 0x16	; 22
     704:	de 01       	movw	r26, r28
     706:	11 96       	adiw	r26, 0x01	; 1
     708:	8f 2d       	mov	r24, r15
     70a:	01 90       	ld	r0, Z+
     70c:	0d 92       	st	X+, r0
     70e:	8a 95       	dec	r24
     710:	e1 f7       	brne	.-8      	; 0x70a <main+0xc2>
			}
			if(msg.id == MCP_GAME_SCORE_MESSAGE){
				score = msg.data[0];
			}
			
			msg = new_can_message(MCP_BUTTON_PRESS, 1, JOY_read_right_button());
     712:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <JOY_read_right_button>
     716:	9c 01       	movw	r18, r24
     718:	41 e0       	ldi	r20, 0x01	; 1
     71a:	67 e7       	ldi	r22, 0x77	; 119
     71c:	70 e0       	ldi	r23, 0x00	; 0
     71e:	ce 01       	movw	r24, r28
     720:	46 96       	adiw	r24, 0x16	; 22
     722:	0e 94 bd 02 	call	0x57a	; 0x57a <new_can_message>
     726:	fe 01       	movw	r30, r28
     728:	76 96       	adiw	r30, 0x16	; 22
     72a:	de 01       	movw	r26, r28
     72c:	11 96       	adiw	r26, 0x01	; 1
     72e:	8f 2d       	mov	r24, r15
     730:	01 90       	ld	r0, Z+
     732:	0d 92       	st	X+, r0
     734:	8a 95       	dec	r24
     736:	e1 f7       	brne	.-8      	; 0x730 <main+0xe8>
			can_write(&msg, MCP_TXB0CTRL);
     738:	60 e3       	ldi	r22, 0x30	; 48
     73a:	ce 01       	movw	r24, r28
     73c:	01 96       	adiw	r24, 0x01	; 1
     73e:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <can_write>
			
			
		}
     742:	bc cf       	rjmp	.-136    	; 0x6bc <main+0x74>

00000744 <new_Menu>:
     744:	cf 92       	push	r12
     746:	df 92       	push	r13
     748:	ef 92       	push	r14
     74a:	ff 92       	push	r15
     74c:	0f 93       	push	r16
     74e:	1f 93       	push	r17
     750:	cf 93       	push	r28
     752:	df 93       	push	r29
     754:	1f 92       	push	r1
     756:	cd b7       	in	r28, 0x3d	; 61
     758:	de b7       	in	r29, 0x3e	; 62
     75a:	8c 01       	movw	r16, r24
     75c:	7b 01       	movw	r14, r22
     75e:	89 e0       	ldi	r24, 0x09	; 9
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	49 83       	std	Y+1, r20	; 0x01
     764:	0e 94 db 05 	call	0xbb6	; 0xbb6 <malloc>
     768:	6c 01       	movw	r12, r24
     76a:	fc 01       	movw	r30, r24
     76c:	16 83       	std	Z+6, r17	; 0x06
     76e:	05 83       	std	Z+5, r16	; 0x05
     770:	49 81       	ldd	r20, Y+1	; 0x01
     772:	40 83       	st	Z, r20
     774:	f0 86       	std	Z+8, r15	; 0x08
     776:	e7 82       	std	Z+7, r14	; 0x07
     778:	f9 e0       	ldi	r31, 0x09	; 9
     77a:	4f 9f       	mul	r20, r31
     77c:	c0 01       	movw	r24, r0
     77e:	11 24       	eor	r1, r1
     780:	0e 94 db 05 	call	0xbb6	; 0xbb6 <malloc>
     784:	f6 01       	movw	r30, r12
     786:	92 83       	std	Z+2, r25	; 0x02
     788:	81 83       	std	Z+1, r24	; 0x01
     78a:	c6 01       	movw	r24, r12
     78c:	0f 90       	pop	r0
     78e:	df 91       	pop	r29
     790:	cf 91       	pop	r28
     792:	1f 91       	pop	r17
     794:	0f 91       	pop	r16
     796:	ff 90       	pop	r15
     798:	ef 90       	pop	r14
     79a:	df 90       	pop	r13
     79c:	cf 90       	pop	r12
     79e:	08 95       	ret

000007a0 <interface_init>:
     7a0:	ef 92       	push	r14
     7a2:	ff 92       	push	r15
     7a4:	0f 93       	push	r16
     7a6:	1f 93       	push	r17
     7a8:	cf 93       	push	r28
     7aa:	df 93       	push	r29
     7ac:	42 e0       	ldi	r20, 0x02	; 2
     7ae:	60 e0       	ldi	r22, 0x00	; 0
     7b0:	70 e0       	ldi	r23, 0x00	; 0
     7b2:	81 e7       	ldi	r24, 0x71	; 113
     7b4:	91 e0       	ldi	r25, 0x01	; 1
     7b6:	0e 94 a2 03 	call	0x744	; 0x744 <new_Menu>
     7ba:	ec 01       	movw	r28, r24
     7bc:	41 e0       	ldi	r20, 0x01	; 1
     7be:	60 e0       	ldi	r22, 0x00	; 0
     7c0:	70 e0       	ldi	r23, 0x00	; 0
     7c2:	8b e7       	ldi	r24, 0x7B	; 123
     7c4:	91 e0       	ldi	r25, 0x01	; 1
     7c6:	0e 94 a2 03 	call	0x744	; 0x744 <new_Menu>
     7ca:	8c 01       	movw	r16, r24
     7cc:	41 e0       	ldi	r20, 0x01	; 1
     7ce:	60 e0       	ldi	r22, 0x00	; 0
     7d0:	70 e0       	ldi	r23, 0x00	; 0
     7d2:	8a e8       	ldi	r24, 0x8A	; 138
     7d4:	91 e0       	ldi	r25, 0x01	; 1
     7d6:	0e 94 a2 03 	call	0x744	; 0x744 <new_Menu>
     7da:	7c 01       	movw	r14, r24
     7dc:	40 e0       	ldi	r20, 0x00	; 0
     7de:	62 ea       	ldi	r22, 0xA2	; 162
     7e0:	75 e0       	ldi	r23, 0x05	; 5
     7e2:	88 e9       	ldi	r24, 0x98	; 152
     7e4:	91 e0       	ldi	r25, 0x01	; 1
     7e6:	0e 94 a2 03 	call	0x744	; 0x744 <new_Menu>
     7ea:	e9 81       	ldd	r30, Y+1	; 0x01
     7ec:	fa 81       	ldd	r31, Y+2	; 0x02
     7ee:	11 83       	std	Z+1, r17	; 0x01
     7f0:	00 83       	st	Z, r16
     7f2:	e9 81       	ldd	r30, Y+1	; 0x01
     7f4:	fa 81       	ldd	r31, Y+2	; 0x02
     7f6:	f3 82       	std	Z+3, r15	; 0x03
     7f8:	e2 82       	std	Z+2, r14	; 0x02
     7fa:	d8 01       	movw	r26, r16
     7fc:	11 96       	adiw	r26, 0x01	; 1
     7fe:	ed 91       	ld	r30, X+
     800:	fc 91       	ld	r31, X
     802:	12 97       	sbiw	r26, 0x02	; 2
     804:	91 83       	std	Z+1, r25	; 0x01
     806:	80 83       	st	Z, r24
     808:	14 96       	adiw	r26, 0x04	; 4
     80a:	dc 93       	st	X, r29
     80c:	ce 93       	st	-X, r28
     80e:	13 97       	sbiw	r26, 0x03	; 3
     810:	f7 01       	movw	r30, r14
     812:	d4 83       	std	Z+4, r29	; 0x04
     814:	c3 83       	std	Z+3, r28	; 0x03
     816:	dc 01       	movw	r26, r24
     818:	12 96       	adiw	r26, 0x02	; 2
     81a:	1c 92       	st	X, r1
     81c:	1e 92       	st	-X, r1
     81e:	11 97       	sbiw	r26, 0x01	; 1
     820:	ce 01       	movw	r24, r28
     822:	df 91       	pop	r29
     824:	cf 91       	pop	r28
     826:	1f 91       	pop	r17
     828:	0f 91       	pop	r16
     82a:	ff 90       	pop	r15
     82c:	ef 90       	pop	r14
     82e:	08 95       	ret

00000830 <draw_selector>:
     830:	cf 93       	push	r28
     832:	c8 2f       	mov	r28, r24
     834:	80 e0       	ldi	r24, 0x00	; 0
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	0e 94 4e 05 	call	0xa9c	; 0xa9c <oled_set_start_col>
     83c:	80 e2       	ldi	r24, 0x20	; 32
     83e:	0e 94 3a 05 	call	0xa74	; 0xa74 <oled_write>
     842:	80 e0       	ldi	r24, 0x00	; 0
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	0e 94 4e 05 	call	0xa9c	; 0xa9c <oled_set_start_col>
     84a:	80 eb       	ldi	r24, 0xB0	; 176
     84c:	8c 0f       	add	r24, r28
     84e:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_control_assign>
     852:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_selector>
     856:	88 e0       	ldi	r24, 0x08	; 8
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	cf 91       	pop	r28
     85c:	0c 94 4e 05 	jmp	0xa9c	; 0xa9c <oled_set_start_col>

00000860 <interface_print>:
     860:	ef 92       	push	r14
     862:	ff 92       	push	r15
     864:	0f 93       	push	r16
     866:	1f 93       	push	r17
     868:	cf 93       	push	r28
     86a:	df 93       	push	r29
     86c:	ec 01       	movw	r28, r24
     86e:	0e 94 65 05 	call	0xaca	; 0xaca <oled_clear_screen>
     872:	80 e0       	ldi	r24, 0x00	; 0
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	0e 94 4e 05 	call	0xa9c	; 0xa9c <oled_set_start_col>
     87a:	8e 81       	ldd	r24, Y+6	; 0x06
     87c:	8f 93       	push	r24
     87e:	8d 81       	ldd	r24, Y+5	; 0x05
     880:	8f 93       	push	r24
     882:	83 ea       	ldi	r24, 0xA3	; 163
     884:	91 e0       	ldi	r25, 0x01	; 1
     886:	9f 93       	push	r25
     888:	8f 93       	push	r24
     88a:	0e 94 4d 07 	call	0xe9a	; 0xe9a <printf>
     88e:	60 e0       	ldi	r22, 0x00	; 0
     890:	70 e0       	ldi	r23, 0x00	; 0
     892:	8d 81       	ldd	r24, Y+5	; 0x05
     894:	9e 81       	ldd	r25, Y+6	; 0x06
     896:	0e 94 56 05 	call	0xaac	; 0xaac <oled_write_string>
     89a:	0f 90       	pop	r0
     89c:	0f 90       	pop	r0
     89e:	0f 90       	pop	r0
     8a0:	0f 90       	pop	r0
     8a2:	e1 2c       	mov	r14, r1
     8a4:	f1 2c       	mov	r15, r1
     8a6:	00 e0       	ldi	r16, 0x00	; 0
     8a8:	10 e0       	ldi	r17, 0x00	; 0
     8aa:	88 81       	ld	r24, Y
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	08 17       	cp	r16, r24
     8b0:	19 07       	cpc	r17, r25
     8b2:	b4 f4       	brge	.+44     	; 0x8e0 <interface_print+0x80>
     8b4:	8a e0       	ldi	r24, 0x0A	; 10
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	0e 94 4e 05 	call	0xa9c	; 0xa9c <oled_set_start_col>
     8bc:	0f 5f       	subi	r16, 0xFF	; 255
     8be:	1f 4f       	sbci	r17, 0xFF	; 255
     8c0:	e9 81       	ldd	r30, Y+1	; 0x01
     8c2:	fa 81       	ldd	r31, Y+2	; 0x02
     8c4:	ee 0d       	add	r30, r14
     8c6:	ff 1d       	adc	r31, r15
     8c8:	01 90       	ld	r0, Z+
     8ca:	f0 81       	ld	r31, Z
     8cc:	e0 2d       	mov	r30, r0
     8ce:	b8 01       	movw	r22, r16
     8d0:	85 81       	ldd	r24, Z+5	; 0x05
     8d2:	96 81       	ldd	r25, Z+6	; 0x06
     8d4:	0e 94 56 05 	call	0xaac	; 0xaac <oled_write_string>
     8d8:	82 e0       	ldi	r24, 0x02	; 2
     8da:	e8 0e       	add	r14, r24
     8dc:	f1 1c       	adc	r15, r1
     8de:	e5 cf       	rjmp	.-54     	; 0x8aa <interface_print+0x4a>
     8e0:	81 e0       	ldi	r24, 0x01	; 1
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	df 91       	pop	r29
     8e6:	cf 91       	pop	r28
     8e8:	1f 91       	pop	r17
     8ea:	0f 91       	pop	r16
     8ec:	ff 90       	pop	r15
     8ee:	ef 90       	pop	r14
     8f0:	0c 94 18 04 	jmp	0x830	; 0x830 <draw_selector>

000008f4 <JOY_read_x>:
     8f4:	84 e0       	ldi	r24, 0x04	; 4
     8f6:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8fa:	82 e6       	ldi	r24, 0x62	; 98
     8fc:	8a 95       	dec	r24
     8fe:	f1 f7       	brne	.-4      	; 0x8fc <JOY_read_x+0x8>
     900:	00 00       	nop
     902:	80 91 00 14 	lds	r24, 0x1400
     906:	08 95       	ret

00000908 <JOY_read_y>:
     908:	85 e0       	ldi	r24, 0x05	; 5
     90a:	80 93 00 14 	sts	0x1400, r24
     90e:	82 e6       	ldi	r24, 0x62	; 98
     910:	8a 95       	dec	r24
     912:	f1 f7       	brne	.-4      	; 0x910 <JOY_read_y+0x8>
     914:	00 00       	nop
     916:	80 91 00 14 	lds	r24, 0x1400
     91a:	08 95       	ret

0000091c <JOY_calibrate>:
     91c:	cf 93       	push	r28
     91e:	df 93       	push	r29
     920:	ec 01       	movw	r28, r24
     922:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <JOY_read_x>
     926:	28 2f       	mov	r18, r24
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	3d 83       	std	Y+5, r19	; 0x05
     92c:	2c 83       	std	Y+4, r18	; 0x04
     92e:	1f 92       	push	r1
     930:	8f 93       	push	r24
     932:	87 e0       	ldi	r24, 0x07	; 7
     934:	92 e0       	ldi	r25, 0x02	; 2
     936:	9f 93       	push	r25
     938:	8f 93       	push	r24
     93a:	0e 94 4d 07 	call	0xe9a	; 0xe9a <printf>
     93e:	0e 94 84 04 	call	0x908	; 0x908 <JOY_read_y>
     942:	28 2f       	mov	r18, r24
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	3f 83       	std	Y+7, r19	; 0x07
     948:	2e 83       	std	Y+6, r18	; 0x06
     94a:	1f 92       	push	r1
     94c:	8f 93       	push	r24
     94e:	83 e1       	ldi	r24, 0x13	; 19
     950:	92 e0       	ldi	r25, 0x02	; 2
     952:	9f 93       	push	r25
     954:	8f 93       	push	r24
     956:	0e 94 4d 07 	call	0xe9a	; 0xe9a <printf>
     95a:	8d b7       	in	r24, 0x3d	; 61
     95c:	9e b7       	in	r25, 0x3e	; 62
     95e:	08 96       	adiw	r24, 0x08	; 8
     960:	0f b6       	in	r0, 0x3f	; 63
     962:	f8 94       	cli
     964:	9e bf       	out	0x3e, r25	; 62
     966:	0f be       	out	0x3f, r0	; 63
     968:	8d bf       	out	0x3d, r24	; 61
     96a:	df 91       	pop	r29
     96c:	cf 91       	pop	r28
     96e:	08 95       	ret

00000970 <JOY_init>:
     970:	0e 94 8e 04 	call	0x91c	; 0x91c <JOY_calibrate>
     974:	87 b3       	in	r24, 0x17	; 23
     976:	88 7f       	andi	r24, 0xF8	; 248
     978:	87 bb       	out	0x17, r24	; 23
     97a:	88 b3       	in	r24, 0x18	; 24
     97c:	87 60       	ori	r24, 0x07	; 7
     97e:	88 bb       	out	0x18, r24	; 24
     980:	8a 98       	cbi	0x11, 2	; 17
     982:	92 9a       	sbi	0x12, 2	; 18
     984:	08 95       	ret

00000986 <JOY_read_joystick>:
     986:	cf 93       	push	r28
     988:	df 93       	push	r29
     98a:	ec 01       	movw	r28, r24
     98c:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <JOY_read_x>
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	99 83       	std	Y+1, r25	; 0x01
     994:	88 83       	st	Y, r24
     996:	0e 94 84 04 	call	0x908	; 0x908 <JOY_read_y>
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	9b 83       	std	Y+3, r25	; 0x03
     99e:	8a 83       	std	Y+2, r24	; 0x02
     9a0:	df 91       	pop	r29
     9a2:	cf 91       	pop	r28
     9a4:	08 95       	ret

000009a6 <JOY_read_right_button>:
     9a6:	86 b3       	in	r24, 0x16	; 22
     9a8:	81 70       	andi	r24, 0x01	; 1
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	08 95       	ret

000009ae <mcp_read>:
#include "mcp.h"
#include "mcp_defines.h"
#include "spi.h"
#include <avr/io.h>

char mcp_read(uint8_t address){
     9ae:	cf 93       	push	r28
     9b0:	c8 2f       	mov	r28, r24
	PORTB &= ~(1 << MCP_CS);
     9b2:	c4 98       	cbi	0x18, 4	; 24
	SPI_transmit(MCP_READ);
     9b4:	83 e0       	ldi	r24, 0x03	; 3
     9b6:	0e 94 c1 05 	call	0xb82	; 0xb82 <SPI_transmit>
	SPI_transmit(address);
     9ba:	8c 2f       	mov	r24, r28
     9bc:	0e 94 c1 05 	call	0xb82	; 0xb82 <SPI_transmit>
	
	char data = SPI_transmit(0x00);
     9c0:	80 e0       	ldi	r24, 0x00	; 0
     9c2:	0e 94 c1 05 	call	0xb82	; 0xb82 <SPI_transmit>
	PORTB |= (1 << MCP_CS);
     9c6:	c4 9a       	sbi	0x18, 4	; 24
	
	return data;
}
     9c8:	cf 91       	pop	r28
     9ca:	08 95       	ret

000009cc <mcp_write>:
void mcp_write(uint8_t address, char data){
     9cc:	1f 93       	push	r17
     9ce:	cf 93       	push	r28
     9d0:	df 93       	push	r29
     9d2:	1f 92       	push	r1
     9d4:	cd b7       	in	r28, 0x3d	; 61
     9d6:	de b7       	in	r29, 0x3e	; 62
     9d8:	18 2f       	mov	r17, r24
	PORTB &= ~(1 << MCP_CS);
     9da:	c4 98       	cbi	0x18, 4	; 24
	
	SPI_transmit(MCP_WRITE);
     9dc:	82 e0       	ldi	r24, 0x02	; 2
     9de:	69 83       	std	Y+1, r22	; 0x01
     9e0:	0e 94 c1 05 	call	0xb82	; 0xb82 <SPI_transmit>
	SPI_transmit(address);
     9e4:	81 2f       	mov	r24, r17
     9e6:	0e 94 c1 05 	call	0xb82	; 0xb82 <SPI_transmit>
	SPI_transmit(data);
     9ea:	69 81       	ldd	r22, Y+1	; 0x01
     9ec:	86 2f       	mov	r24, r22
     9ee:	0e 94 c1 05 	call	0xb82	; 0xb82 <SPI_transmit>
	
	PORTB |= (1<< MCP_CS);
     9f2:	c4 9a       	sbi	0x18, 4	; 24
}	
     9f4:	0f 90       	pop	r0
     9f6:	df 91       	pop	r29
     9f8:	cf 91       	pop	r28
     9fa:	1f 91       	pop	r17
     9fc:	08 95       	ret

000009fe <mcp_reset>:
void mcp_reset(){
	PORTB &= ~(1 << MCP_CS);
     9fe:	c4 98       	cbi	0x18, 4	; 24
	
	SPI_transmit(MCP_RESET);
     a00:	80 ec       	ldi	r24, 0xC0	; 192
     a02:	0e 94 c1 05 	call	0xb82	; 0xb82 <SPI_transmit>
	
	PORTB |= (1<< MCP_CS);
     a06:	c4 9a       	sbi	0x18, 4	; 24
     a08:	08 95       	ret

00000a0a <mcp_bitModify>:
}	
void mcp_bitModify(uint8_t address, uint8_t mask, char data){
     a0a:	1f 93       	push	r17
     a0c:	cf 93       	push	r28
     a0e:	df 93       	push	r29
     a10:	00 d0       	rcall	.+0      	; 0xa12 <mcp_bitModify+0x8>
     a12:	cd b7       	in	r28, 0x3d	; 61
     a14:	de b7       	in	r29, 0x3e	; 62
     a16:	18 2f       	mov	r17, r24
	PORTB &= ~(1 << MCP_CS);
     a18:	c4 98       	cbi	0x18, 4	; 24
	
	SPI_transmit(MCP_BIT_MODIFY);
     a1a:	85 e0       	ldi	r24, 0x05	; 5
     a1c:	4a 83       	std	Y+2, r20	; 0x02
     a1e:	69 83       	std	Y+1, r22	; 0x01
     a20:	0e 94 c1 05 	call	0xb82	; 0xb82 <SPI_transmit>
	SPI_transmit(address);
     a24:	81 2f       	mov	r24, r17
     a26:	0e 94 c1 05 	call	0xb82	; 0xb82 <SPI_transmit>
	SPI_transmit(mask);
     a2a:	69 81       	ldd	r22, Y+1	; 0x01
     a2c:	86 2f       	mov	r24, r22
     a2e:	0e 94 c1 05 	call	0xb82	; 0xb82 <SPI_transmit>
	SPI_transmit(data);
     a32:	4a 81       	ldd	r20, Y+2	; 0x02
     a34:	84 2f       	mov	r24, r20
     a36:	0e 94 c1 05 	call	0xb82	; 0xb82 <SPI_transmit>
	
	PORTB |= (1<< MCP_CS);
     a3a:	c4 9a       	sbi	0x18, 4	; 24
}
     a3c:	0f 90       	pop	r0
     a3e:	0f 90       	pop	r0
     a40:	df 91       	pop	r29
     a42:	cf 91       	pop	r28
     a44:	1f 91       	pop	r17
     a46:	08 95       	ret

00000a48 <mcp_requestToSend>:
void mcp_requestToSend(uint8_t buffer){
	PORTB &= ~(1 << MCP_CS);
     a48:	c4 98       	cbi	0x18, 4	; 24
	SPI_transmit(buffer);
     a4a:	0e 94 c1 05 	call	0xb82	; 0xb82 <SPI_transmit>
	
	PORTB |= (1<< MCP_CS);
     a4e:	c4 9a       	sbi	0x18, 4	; 24
     a50:	08 95       	ret

00000a52 <mcp_init>:
	
	return status;
}

void mcp_init(void){
	SPI_masterInit();
     a52:	0e 94 bb 05 	call	0xb76	; 0xb76 <SPI_masterInit>
	mcp_reset();
     a56:	0c 94 ff 04 	jmp	0x9fe	; 0x9fe <mcp_reset>

00000a5a <oled_control_assign>:
     a5a:	80 93 00 10 	sts	0x1000, r24
     a5e:	08 95       	ret

00000a60 <oled_write_selector>:
     a60:	ed e1       	ldi	r30, 0x1D	; 29
     a62:	f1 e0       	ldi	r31, 0x01	; 1
     a64:	81 91       	ld	r24, Z+
     a66:	80 93 00 12 	sts	0x1200, r24
     a6a:	81 e0       	ldi	r24, 0x01	; 1
     a6c:	e5 32       	cpi	r30, 0x25	; 37
     a6e:	f8 07       	cpc	r31, r24
     a70:	c9 f7       	brne	.-14     	; 0xa64 <oled_write_selector+0x4>
     a72:	08 95       	ret

00000a74 <oled_write>:
     a74:	28 e0       	ldi	r18, 0x08	; 8
     a76:	82 9f       	mul	r24, r18
     a78:	c0 01       	movw	r24, r0
     a7a:	11 24       	eor	r1, r1
     a7c:	20 e0       	ldi	r18, 0x00	; 0
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	80 59       	subi	r24, 0x90	; 144
     a82:	90 40       	sbci	r25, 0x00	; 0
     a84:	fc 01       	movw	r30, r24
     a86:	e2 0f       	add	r30, r18
     a88:	f3 1f       	adc	r31, r19
     a8a:	e4 91       	lpm	r30, Z
     a8c:	e0 93 00 12 	sts	0x1200, r30
     a90:	2f 5f       	subi	r18, 0xFF	; 255
     a92:	3f 4f       	sbci	r19, 0xFF	; 255
     a94:	28 30       	cpi	r18, 0x08	; 8
     a96:	31 05       	cpc	r19, r1
     a98:	a9 f7       	brne	.-22     	; 0xa84 <oled_write+0x10>
     a9a:	08 95       	ret

00000a9c <oled_set_start_col>:
     a9c:	e0 e0       	ldi	r30, 0x00	; 0
     a9e:	f0 e1       	ldi	r31, 0x10	; 16
     aa0:	91 e2       	ldi	r25, 0x21	; 33
     aa2:	90 83       	st	Z, r25
     aa4:	80 83       	st	Z, r24
     aa6:	8f ef       	ldi	r24, 0xFF	; 255
     aa8:	80 83       	st	Z, r24
     aaa:	08 95       	ret

00000aac <oled_write_string>:
     aac:	cf 93       	push	r28
     aae:	df 93       	push	r29
     ab0:	60 55       	subi	r22, 0x50	; 80
     ab2:	60 93 00 10 	sts	0x1000, r22
     ab6:	ec 01       	movw	r28, r24
     ab8:	89 91       	ld	r24, Y+
     aba:	88 23       	and	r24, r24
     abc:	19 f0       	breq	.+6      	; 0xac4 <oled_write_string+0x18>
     abe:	0e 94 3a 05 	call	0xa74	; 0xa74 <oled_write>
     ac2:	fa cf       	rjmp	.-12     	; 0xab8 <oled_write_string+0xc>
     ac4:	df 91       	pop	r29
     ac6:	cf 91       	pop	r28
     ac8:	08 95       	ret

00000aca <oled_clear_screen>:
     aca:	20 eb       	ldi	r18, 0xB0	; 176
     acc:	20 93 00 10 	sts	0x1000, r18
     ad0:	80 e8       	ldi	r24, 0x80	; 128
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	10 92 00 12 	sts	0x1200, r1
     ad8:	01 97       	sbiw	r24, 0x01	; 1
     ada:	00 97       	sbiw	r24, 0x00	; 0
     adc:	d9 f7       	brne	.-10     	; 0xad4 <oled_clear_screen+0xa>
     ade:	2f 5f       	subi	r18, 0xFF	; 255
     ae0:	28 3b       	cpi	r18, 0xB8	; 184
     ae2:	a1 f7       	brne	.-24     	; 0xacc <oled_clear_screen+0x2>
     ae4:	08 95       	ret

00000ae6 <oled_init>:
     ae6:	e0 e0       	ldi	r30, 0x00	; 0
     ae8:	f0 e1       	ldi	r31, 0x10	; 16
     aea:	8e ea       	ldi	r24, 0xAE	; 174
     aec:	80 83       	st	Z, r24
     aee:	81 ea       	ldi	r24, 0xA1	; 161
     af0:	80 83       	st	Z, r24
     af2:	8a ed       	ldi	r24, 0xDA	; 218
     af4:	80 83       	st	Z, r24
     af6:	82 e1       	ldi	r24, 0x12	; 18
     af8:	80 83       	st	Z, r24
     afa:	88 ec       	ldi	r24, 0xC8	; 200
     afc:	80 83       	st	Z, r24
     afe:	88 ea       	ldi	r24, 0xA8	; 168
     b00:	80 83       	st	Z, r24
     b02:	8f e3       	ldi	r24, 0x3F	; 63
     b04:	80 83       	st	Z, r24
     b06:	85 ed       	ldi	r24, 0xD5	; 213
     b08:	80 83       	st	Z, r24
     b0a:	80 e8       	ldi	r24, 0x80	; 128
     b0c:	80 83       	st	Z, r24
     b0e:	81 e8       	ldi	r24, 0x81	; 129
     b10:	80 83       	st	Z, r24
     b12:	80 e5       	ldi	r24, 0x50	; 80
     b14:	80 83       	st	Z, r24
     b16:	89 ed       	ldi	r24, 0xD9	; 217
     b18:	80 83       	st	Z, r24
     b1a:	81 e2       	ldi	r24, 0x21	; 33
     b1c:	80 83       	st	Z, r24
     b1e:	80 e2       	ldi	r24, 0x20	; 32
     b20:	80 83       	st	Z, r24
     b22:	82 e0       	ldi	r24, 0x02	; 2
     b24:	80 83       	st	Z, r24
     b26:	8b ed       	ldi	r24, 0xDB	; 219
     b28:	80 83       	st	Z, r24
     b2a:	80 e3       	ldi	r24, 0x30	; 48
     b2c:	80 83       	st	Z, r24
     b2e:	8d ea       	ldi	r24, 0xAD	; 173
     b30:	80 83       	st	Z, r24
     b32:	10 82       	st	Z, r1
     b34:	84 ea       	ldi	r24, 0xA4	; 164
     b36:	80 83       	st	Z, r24
     b38:	86 ea       	ldi	r24, 0xA6	; 166
     b3a:	80 83       	st	Z, r24
     b3c:	8f ea       	ldi	r24, 0xAF	; 175
     b3e:	80 83       	st	Z, r24
     b40:	0c 94 65 05 	jmp	0xaca	; 0xaca <oled_clear_screen>

00000b44 <oled_initiate_party_mode>:
     b44:	86 ea       	ldi	r24, 0xA6	; 166
     b46:	80 93 00 10 	sts	0x1000, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b4a:	2f ef       	ldi	r18, 0xFF	; 255
     b4c:	8f e7       	ldi	r24, 0x7F	; 127
     b4e:	91 e0       	ldi	r25, 0x01	; 1
     b50:	21 50       	subi	r18, 0x01	; 1
     b52:	80 40       	sbci	r24, 0x00	; 0
     b54:	90 40       	sbci	r25, 0x00	; 0
     b56:	e1 f7       	brne	.-8      	; 0xb50 <oled_initiate_party_mode+0xc>
     b58:	00 c0       	rjmp	.+0      	; 0xb5a <oled_initiate_party_mode+0x16>
     b5a:	00 c0       	rjmp	.+0      	; 0xb5c <oled_initiate_party_mode+0x18>
     b5c:	87 ea       	ldi	r24, 0xA7	; 167
     b5e:	80 93 00 10 	sts	0x1000, r24
     b62:	2f ef       	ldi	r18, 0xFF	; 255
     b64:	8f e7       	ldi	r24, 0x7F	; 127
     b66:	91 e0       	ldi	r25, 0x01	; 1
     b68:	21 50       	subi	r18, 0x01	; 1
     b6a:	80 40       	sbci	r24, 0x00	; 0
     b6c:	90 40       	sbci	r25, 0x00	; 0
     b6e:	e1 f7       	brne	.-8      	; 0xb68 <oled_initiate_party_mode+0x24>
     b70:	00 c0       	rjmp	.+0      	; 0xb72 <oled_initiate_party_mode+0x2e>
     b72:	00 c0       	rjmp	.+0      	; 0xb74 <oled_initiate_party_mode+0x30>
     b74:	08 95       	ret

00000b76 <SPI_masterInit>:
     b76:	80 eb       	ldi	r24, 0xB0	; 176
     b78:	87 bb       	out	0x17, r24	; 23
     b7a:	be 98       	cbi	0x17, 6	; 23
     b7c:	81 e5       	ldi	r24, 0x51	; 81
     b7e:	8d b9       	out	0x0d, r24	; 13
     b80:	08 95       	ret

00000b82 <SPI_transmit>:
     b82:	8f b9       	out	0x0f, r24	; 15
     b84:	77 9b       	sbis	0x0e, 7	; 14
     b86:	fe cf       	rjmp	.-4      	; 0xb84 <SPI_transmit+0x2>
     b88:	8f b1       	in	r24, 0x0f	; 15
     b8a:	08 95       	ret

00000b8c <SRAM_init>:
     b8c:	85 b7       	in	r24, 0x35	; 53
     b8e:	80 68       	ori	r24, 0x80	; 128
     b90:	85 bf       	out	0x35, r24	; 53
     b92:	08 95       	ret

00000b94 <USART_Init>:
     b94:	90 bd       	out	0x20, r25	; 32
     b96:	89 b9       	out	0x09, r24	; 9
     b98:	8a b1       	in	r24, 0x0a	; 10
     b9a:	88 61       	ori	r24, 0x18	; 24
     b9c:	8a b9       	out	0x0a, r24	; 10
     b9e:	80 b5       	in	r24, 0x20	; 32
     ba0:	86 68       	ori	r24, 0x86	; 134
     ba2:	80 bd       	out	0x20, r24	; 32
     ba4:	08 95       	ret

00000ba6 <USART_Transmit>:
     ba6:	5d 9b       	sbis	0x0b, 5	; 11
     ba8:	fe cf       	rjmp	.-4      	; 0xba6 <USART_Transmit>
     baa:	8c b9       	out	0x0c, r24	; 12
     bac:	08 95       	ret

00000bae <USART_Receive>:
     bae:	5f 9b       	sbis	0x0b, 7	; 11
     bb0:	fe cf       	rjmp	.-4      	; 0xbae <USART_Receive>
     bb2:	8c b1       	in	r24, 0x0c	; 12
     bb4:	08 95       	ret

00000bb6 <malloc>:
     bb6:	cf 93       	push	r28
     bb8:	df 93       	push	r29
     bba:	82 30       	cpi	r24, 0x02	; 2
     bbc:	91 05       	cpc	r25, r1
     bbe:	10 f4       	brcc	.+4      	; 0xbc4 <malloc+0xe>
     bc0:	82 e0       	ldi	r24, 0x02	; 2
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	e0 91 22 02 	lds	r30, 0x0222
     bc8:	f0 91 23 02 	lds	r31, 0x0223
     bcc:	20 e0       	ldi	r18, 0x00	; 0
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	a0 e0       	ldi	r26, 0x00	; 0
     bd2:	b0 e0       	ldi	r27, 0x00	; 0
     bd4:	30 97       	sbiw	r30, 0x00	; 0
     bd6:	39 f1       	breq	.+78     	; 0xc26 <malloc+0x70>
     bd8:	40 81       	ld	r20, Z
     bda:	51 81       	ldd	r21, Z+1	; 0x01
     bdc:	48 17       	cp	r20, r24
     bde:	59 07       	cpc	r21, r25
     be0:	b8 f0       	brcs	.+46     	; 0xc10 <malloc+0x5a>
     be2:	48 17       	cp	r20, r24
     be4:	59 07       	cpc	r21, r25
     be6:	71 f4       	brne	.+28     	; 0xc04 <malloc+0x4e>
     be8:	82 81       	ldd	r24, Z+2	; 0x02
     bea:	93 81       	ldd	r25, Z+3	; 0x03
     bec:	10 97       	sbiw	r26, 0x00	; 0
     bee:	29 f0       	breq	.+10     	; 0xbfa <malloc+0x44>
     bf0:	13 96       	adiw	r26, 0x03	; 3
     bf2:	9c 93       	st	X, r25
     bf4:	8e 93       	st	-X, r24
     bf6:	12 97       	sbiw	r26, 0x02	; 2
     bf8:	2c c0       	rjmp	.+88     	; 0xc52 <malloc+0x9c>
     bfa:	90 93 23 02 	sts	0x0223, r25
     bfe:	80 93 22 02 	sts	0x0222, r24
     c02:	27 c0       	rjmp	.+78     	; 0xc52 <malloc+0x9c>
     c04:	21 15       	cp	r18, r1
     c06:	31 05       	cpc	r19, r1
     c08:	31 f0       	breq	.+12     	; 0xc16 <malloc+0x60>
     c0a:	42 17       	cp	r20, r18
     c0c:	53 07       	cpc	r21, r19
     c0e:	18 f0       	brcs	.+6      	; 0xc16 <malloc+0x60>
     c10:	a9 01       	movw	r20, r18
     c12:	db 01       	movw	r26, r22
     c14:	01 c0       	rjmp	.+2      	; 0xc18 <malloc+0x62>
     c16:	ef 01       	movw	r28, r30
     c18:	9a 01       	movw	r18, r20
     c1a:	bd 01       	movw	r22, r26
     c1c:	df 01       	movw	r26, r30
     c1e:	02 80       	ldd	r0, Z+2	; 0x02
     c20:	f3 81       	ldd	r31, Z+3	; 0x03
     c22:	e0 2d       	mov	r30, r0
     c24:	d7 cf       	rjmp	.-82     	; 0xbd4 <malloc+0x1e>
     c26:	21 15       	cp	r18, r1
     c28:	31 05       	cpc	r19, r1
     c2a:	f9 f0       	breq	.+62     	; 0xc6a <malloc+0xb4>
     c2c:	28 1b       	sub	r18, r24
     c2e:	39 0b       	sbc	r19, r25
     c30:	24 30       	cpi	r18, 0x04	; 4
     c32:	31 05       	cpc	r19, r1
     c34:	80 f4       	brcc	.+32     	; 0xc56 <malloc+0xa0>
     c36:	8a 81       	ldd	r24, Y+2	; 0x02
     c38:	9b 81       	ldd	r25, Y+3	; 0x03
     c3a:	61 15       	cp	r22, r1
     c3c:	71 05       	cpc	r23, r1
     c3e:	21 f0       	breq	.+8      	; 0xc48 <malloc+0x92>
     c40:	fb 01       	movw	r30, r22
     c42:	93 83       	std	Z+3, r25	; 0x03
     c44:	82 83       	std	Z+2, r24	; 0x02
     c46:	04 c0       	rjmp	.+8      	; 0xc50 <malloc+0x9a>
     c48:	90 93 23 02 	sts	0x0223, r25
     c4c:	80 93 22 02 	sts	0x0222, r24
     c50:	fe 01       	movw	r30, r28
     c52:	32 96       	adiw	r30, 0x02	; 2
     c54:	44 c0       	rjmp	.+136    	; 0xcde <malloc+0x128>
     c56:	fe 01       	movw	r30, r28
     c58:	e2 0f       	add	r30, r18
     c5a:	f3 1f       	adc	r31, r19
     c5c:	81 93       	st	Z+, r24
     c5e:	91 93       	st	Z+, r25
     c60:	22 50       	subi	r18, 0x02	; 2
     c62:	31 09       	sbc	r19, r1
     c64:	39 83       	std	Y+1, r19	; 0x01
     c66:	28 83       	st	Y, r18
     c68:	3a c0       	rjmp	.+116    	; 0xcde <malloc+0x128>
     c6a:	20 91 20 02 	lds	r18, 0x0220
     c6e:	30 91 21 02 	lds	r19, 0x0221
     c72:	23 2b       	or	r18, r19
     c74:	41 f4       	brne	.+16     	; 0xc86 <malloc+0xd0>
     c76:	20 91 02 01 	lds	r18, 0x0102
     c7a:	30 91 03 01 	lds	r19, 0x0103
     c7e:	30 93 21 02 	sts	0x0221, r19
     c82:	20 93 20 02 	sts	0x0220, r18
     c86:	20 91 00 01 	lds	r18, 0x0100
     c8a:	30 91 01 01 	lds	r19, 0x0101
     c8e:	21 15       	cp	r18, r1
     c90:	31 05       	cpc	r19, r1
     c92:	41 f4       	brne	.+16     	; 0xca4 <malloc+0xee>
     c94:	2d b7       	in	r18, 0x3d	; 61
     c96:	3e b7       	in	r19, 0x3e	; 62
     c98:	40 91 04 01 	lds	r20, 0x0104
     c9c:	50 91 05 01 	lds	r21, 0x0105
     ca0:	24 1b       	sub	r18, r20
     ca2:	35 0b       	sbc	r19, r21
     ca4:	e0 91 20 02 	lds	r30, 0x0220
     ca8:	f0 91 21 02 	lds	r31, 0x0221
     cac:	e2 17       	cp	r30, r18
     cae:	f3 07       	cpc	r31, r19
     cb0:	a0 f4       	brcc	.+40     	; 0xcda <malloc+0x124>
     cb2:	2e 1b       	sub	r18, r30
     cb4:	3f 0b       	sbc	r19, r31
     cb6:	28 17       	cp	r18, r24
     cb8:	39 07       	cpc	r19, r25
     cba:	78 f0       	brcs	.+30     	; 0xcda <malloc+0x124>
     cbc:	ac 01       	movw	r20, r24
     cbe:	4e 5f       	subi	r20, 0xFE	; 254
     cc0:	5f 4f       	sbci	r21, 0xFF	; 255
     cc2:	24 17       	cp	r18, r20
     cc4:	35 07       	cpc	r19, r21
     cc6:	48 f0       	brcs	.+18     	; 0xcda <malloc+0x124>
     cc8:	4e 0f       	add	r20, r30
     cca:	5f 1f       	adc	r21, r31
     ccc:	50 93 21 02 	sts	0x0221, r21
     cd0:	40 93 20 02 	sts	0x0220, r20
     cd4:	81 93       	st	Z+, r24
     cd6:	91 93       	st	Z+, r25
     cd8:	02 c0       	rjmp	.+4      	; 0xcde <malloc+0x128>
     cda:	e0 e0       	ldi	r30, 0x00	; 0
     cdc:	f0 e0       	ldi	r31, 0x00	; 0
     cde:	cf 01       	movw	r24, r30
     ce0:	df 91       	pop	r29
     ce2:	cf 91       	pop	r28
     ce4:	08 95       	ret

00000ce6 <free>:
     ce6:	cf 93       	push	r28
     ce8:	df 93       	push	r29
     cea:	00 97       	sbiw	r24, 0x00	; 0
     cec:	09 f4       	brne	.+2      	; 0xcf0 <free+0xa>
     cee:	87 c0       	rjmp	.+270    	; 0xdfe <free+0x118>
     cf0:	fc 01       	movw	r30, r24
     cf2:	32 97       	sbiw	r30, 0x02	; 2
     cf4:	13 82       	std	Z+3, r1	; 0x03
     cf6:	12 82       	std	Z+2, r1	; 0x02
     cf8:	c0 91 22 02 	lds	r28, 0x0222
     cfc:	d0 91 23 02 	lds	r29, 0x0223
     d00:	20 97       	sbiw	r28, 0x00	; 0
     d02:	81 f4       	brne	.+32     	; 0xd24 <free+0x3e>
     d04:	20 81       	ld	r18, Z
     d06:	31 81       	ldd	r19, Z+1	; 0x01
     d08:	28 0f       	add	r18, r24
     d0a:	39 1f       	adc	r19, r25
     d0c:	80 91 20 02 	lds	r24, 0x0220
     d10:	90 91 21 02 	lds	r25, 0x0221
     d14:	82 17       	cp	r24, r18
     d16:	93 07       	cpc	r25, r19
     d18:	79 f5       	brne	.+94     	; 0xd78 <free+0x92>
     d1a:	f0 93 21 02 	sts	0x0221, r31
     d1e:	e0 93 20 02 	sts	0x0220, r30
     d22:	6d c0       	rjmp	.+218    	; 0xdfe <free+0x118>
     d24:	de 01       	movw	r26, r28
     d26:	20 e0       	ldi	r18, 0x00	; 0
     d28:	30 e0       	ldi	r19, 0x00	; 0
     d2a:	ae 17       	cp	r26, r30
     d2c:	bf 07       	cpc	r27, r31
     d2e:	50 f4       	brcc	.+20     	; 0xd44 <free+0x5e>
     d30:	12 96       	adiw	r26, 0x02	; 2
     d32:	4d 91       	ld	r20, X+
     d34:	5c 91       	ld	r21, X
     d36:	13 97       	sbiw	r26, 0x03	; 3
     d38:	9d 01       	movw	r18, r26
     d3a:	41 15       	cp	r20, r1
     d3c:	51 05       	cpc	r21, r1
     d3e:	09 f1       	breq	.+66     	; 0xd82 <free+0x9c>
     d40:	da 01       	movw	r26, r20
     d42:	f3 cf       	rjmp	.-26     	; 0xd2a <free+0x44>
     d44:	b3 83       	std	Z+3, r27	; 0x03
     d46:	a2 83       	std	Z+2, r26	; 0x02
     d48:	40 81       	ld	r20, Z
     d4a:	51 81       	ldd	r21, Z+1	; 0x01
     d4c:	84 0f       	add	r24, r20
     d4e:	95 1f       	adc	r25, r21
     d50:	8a 17       	cp	r24, r26
     d52:	9b 07       	cpc	r25, r27
     d54:	71 f4       	brne	.+28     	; 0xd72 <free+0x8c>
     d56:	8d 91       	ld	r24, X+
     d58:	9c 91       	ld	r25, X
     d5a:	11 97       	sbiw	r26, 0x01	; 1
     d5c:	84 0f       	add	r24, r20
     d5e:	95 1f       	adc	r25, r21
     d60:	02 96       	adiw	r24, 0x02	; 2
     d62:	91 83       	std	Z+1, r25	; 0x01
     d64:	80 83       	st	Z, r24
     d66:	12 96       	adiw	r26, 0x02	; 2
     d68:	8d 91       	ld	r24, X+
     d6a:	9c 91       	ld	r25, X
     d6c:	13 97       	sbiw	r26, 0x03	; 3
     d6e:	93 83       	std	Z+3, r25	; 0x03
     d70:	82 83       	std	Z+2, r24	; 0x02
     d72:	21 15       	cp	r18, r1
     d74:	31 05       	cpc	r19, r1
     d76:	29 f4       	brne	.+10     	; 0xd82 <free+0x9c>
     d78:	f0 93 23 02 	sts	0x0223, r31
     d7c:	e0 93 22 02 	sts	0x0222, r30
     d80:	3e c0       	rjmp	.+124    	; 0xdfe <free+0x118>
     d82:	d9 01       	movw	r26, r18
     d84:	13 96       	adiw	r26, 0x03	; 3
     d86:	fc 93       	st	X, r31
     d88:	ee 93       	st	-X, r30
     d8a:	12 97       	sbiw	r26, 0x02	; 2
     d8c:	4d 91       	ld	r20, X+
     d8e:	5d 91       	ld	r21, X+
     d90:	a4 0f       	add	r26, r20
     d92:	b5 1f       	adc	r27, r21
     d94:	ea 17       	cp	r30, r26
     d96:	fb 07       	cpc	r31, r27
     d98:	79 f4       	brne	.+30     	; 0xdb8 <free+0xd2>
     d9a:	80 81       	ld	r24, Z
     d9c:	91 81       	ldd	r25, Z+1	; 0x01
     d9e:	84 0f       	add	r24, r20
     da0:	95 1f       	adc	r25, r21
     da2:	02 96       	adiw	r24, 0x02	; 2
     da4:	d9 01       	movw	r26, r18
     da6:	11 96       	adiw	r26, 0x01	; 1
     da8:	9c 93       	st	X, r25
     daa:	8e 93       	st	-X, r24
     dac:	82 81       	ldd	r24, Z+2	; 0x02
     dae:	93 81       	ldd	r25, Z+3	; 0x03
     db0:	13 96       	adiw	r26, 0x03	; 3
     db2:	9c 93       	st	X, r25
     db4:	8e 93       	st	-X, r24
     db6:	12 97       	sbiw	r26, 0x02	; 2
     db8:	e0 e0       	ldi	r30, 0x00	; 0
     dba:	f0 e0       	ldi	r31, 0x00	; 0
     dbc:	8a 81       	ldd	r24, Y+2	; 0x02
     dbe:	9b 81       	ldd	r25, Y+3	; 0x03
     dc0:	00 97       	sbiw	r24, 0x00	; 0
     dc2:	19 f0       	breq	.+6      	; 0xdca <free+0xe4>
     dc4:	fe 01       	movw	r30, r28
     dc6:	ec 01       	movw	r28, r24
     dc8:	f9 cf       	rjmp	.-14     	; 0xdbc <free+0xd6>
     dca:	ce 01       	movw	r24, r28
     dcc:	02 96       	adiw	r24, 0x02	; 2
     dce:	28 81       	ld	r18, Y
     dd0:	39 81       	ldd	r19, Y+1	; 0x01
     dd2:	82 0f       	add	r24, r18
     dd4:	93 1f       	adc	r25, r19
     dd6:	20 91 20 02 	lds	r18, 0x0220
     dda:	30 91 21 02 	lds	r19, 0x0221
     dde:	28 17       	cp	r18, r24
     de0:	39 07       	cpc	r19, r25
     de2:	69 f4       	brne	.+26     	; 0xdfe <free+0x118>
     de4:	30 97       	sbiw	r30, 0x00	; 0
     de6:	29 f4       	brne	.+10     	; 0xdf2 <free+0x10c>
     de8:	10 92 23 02 	sts	0x0223, r1
     dec:	10 92 22 02 	sts	0x0222, r1
     df0:	02 c0       	rjmp	.+4      	; 0xdf6 <free+0x110>
     df2:	13 82       	std	Z+3, r1	; 0x03
     df4:	12 82       	std	Z+2, r1	; 0x02
     df6:	d0 93 21 02 	sts	0x0221, r29
     dfa:	c0 93 20 02 	sts	0x0220, r28
     dfe:	df 91       	pop	r29
     e00:	cf 91       	pop	r28
     e02:	08 95       	ret

00000e04 <fdevopen>:
     e04:	0f 93       	push	r16
     e06:	1f 93       	push	r17
     e08:	cf 93       	push	r28
     e0a:	df 93       	push	r29
     e0c:	ec 01       	movw	r28, r24
     e0e:	8b 01       	movw	r16, r22
     e10:	00 97       	sbiw	r24, 0x00	; 0
     e12:	31 f4       	brne	.+12     	; 0xe20 <fdevopen+0x1c>
     e14:	61 15       	cp	r22, r1
     e16:	71 05       	cpc	r23, r1
     e18:	19 f4       	brne	.+6      	; 0xe20 <fdevopen+0x1c>
     e1a:	80 e0       	ldi	r24, 0x00	; 0
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	38 c0       	rjmp	.+112    	; 0xe90 <fdevopen+0x8c>
     e20:	6e e0       	ldi	r22, 0x0E	; 14
     e22:	70 e0       	ldi	r23, 0x00	; 0
     e24:	81 e0       	ldi	r24, 0x01	; 1
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	0e 94 60 09 	call	0x12c0	; 0x12c0 <calloc>
     e2c:	fc 01       	movw	r30, r24
     e2e:	00 97       	sbiw	r24, 0x00	; 0
     e30:	a1 f3       	breq	.-24     	; 0xe1a <fdevopen+0x16>
     e32:	80 e8       	ldi	r24, 0x80	; 128
     e34:	83 83       	std	Z+3, r24	; 0x03
     e36:	01 15       	cp	r16, r1
     e38:	11 05       	cpc	r17, r1
     e3a:	71 f0       	breq	.+28     	; 0xe58 <fdevopen+0x54>
     e3c:	13 87       	std	Z+11, r17	; 0x0b
     e3e:	02 87       	std	Z+10, r16	; 0x0a
     e40:	81 e8       	ldi	r24, 0x81	; 129
     e42:	83 83       	std	Z+3, r24	; 0x03
     e44:	80 91 24 02 	lds	r24, 0x0224
     e48:	90 91 25 02 	lds	r25, 0x0225
     e4c:	89 2b       	or	r24, r25
     e4e:	21 f4       	brne	.+8      	; 0xe58 <fdevopen+0x54>
     e50:	f0 93 25 02 	sts	0x0225, r31
     e54:	e0 93 24 02 	sts	0x0224, r30
     e58:	20 97       	sbiw	r28, 0x00	; 0
     e5a:	c9 f0       	breq	.+50     	; 0xe8e <fdevopen+0x8a>
     e5c:	d1 87       	std	Z+9, r29	; 0x09
     e5e:	c0 87       	std	Z+8, r28	; 0x08
     e60:	83 81       	ldd	r24, Z+3	; 0x03
     e62:	82 60       	ori	r24, 0x02	; 2
     e64:	83 83       	std	Z+3, r24	; 0x03
     e66:	80 91 26 02 	lds	r24, 0x0226
     e6a:	90 91 27 02 	lds	r25, 0x0227
     e6e:	89 2b       	or	r24, r25
     e70:	71 f4       	brne	.+28     	; 0xe8e <fdevopen+0x8a>
     e72:	f0 93 27 02 	sts	0x0227, r31
     e76:	e0 93 26 02 	sts	0x0226, r30
     e7a:	80 91 28 02 	lds	r24, 0x0228
     e7e:	90 91 29 02 	lds	r25, 0x0229
     e82:	89 2b       	or	r24, r25
     e84:	21 f4       	brne	.+8      	; 0xe8e <fdevopen+0x8a>
     e86:	f0 93 29 02 	sts	0x0229, r31
     e8a:	e0 93 28 02 	sts	0x0228, r30
     e8e:	cf 01       	movw	r24, r30
     e90:	df 91       	pop	r29
     e92:	cf 91       	pop	r28
     e94:	1f 91       	pop	r17
     e96:	0f 91       	pop	r16
     e98:	08 95       	ret

00000e9a <printf>:
     e9a:	a0 e0       	ldi	r26, 0x00	; 0
     e9c:	b0 e0       	ldi	r27, 0x00	; 0
     e9e:	e3 e5       	ldi	r30, 0x53	; 83
     ea0:	f7 e0       	ldi	r31, 0x07	; 7
     ea2:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__prologue_saves__+0x20>
     ea6:	fe 01       	movw	r30, r28
     ea8:	35 96       	adiw	r30, 0x05	; 5
     eaa:	61 91       	ld	r22, Z+
     eac:	71 91       	ld	r23, Z+
     eae:	af 01       	movw	r20, r30
     eb0:	80 91 26 02 	lds	r24, 0x0226
     eb4:	90 91 27 02 	lds	r25, 0x0227
     eb8:	0e 94 8e 07 	call	0xf1c	; 0xf1c <vfprintf>
     ebc:	e2 e0       	ldi	r30, 0x02	; 2
     ebe:	0c 94 55 0a 	jmp	0x14aa	; 0x14aa <__epilogue_restores__+0x20>

00000ec2 <puts>:
     ec2:	0f 93       	push	r16
     ec4:	1f 93       	push	r17
     ec6:	cf 93       	push	r28
     ec8:	df 93       	push	r29
     eca:	e0 91 26 02 	lds	r30, 0x0226
     ece:	f0 91 27 02 	lds	r31, 0x0227
     ed2:	23 81       	ldd	r18, Z+3	; 0x03
     ed4:	21 ff       	sbrs	r18, 1
     ed6:	1b c0       	rjmp	.+54     	; 0xf0e <puts+0x4c>
     ed8:	ec 01       	movw	r28, r24
     eda:	00 e0       	ldi	r16, 0x00	; 0
     edc:	10 e0       	ldi	r17, 0x00	; 0
     ede:	89 91       	ld	r24, Y+
     ee0:	60 91 26 02 	lds	r22, 0x0226
     ee4:	70 91 27 02 	lds	r23, 0x0227
     ee8:	db 01       	movw	r26, r22
     eea:	18 96       	adiw	r26, 0x08	; 8
     eec:	ed 91       	ld	r30, X+
     eee:	fc 91       	ld	r31, X
     ef0:	19 97       	sbiw	r26, 0x09	; 9
     ef2:	88 23       	and	r24, r24
     ef4:	31 f0       	breq	.+12     	; 0xf02 <puts+0x40>
     ef6:	09 95       	icall
     ef8:	89 2b       	or	r24, r25
     efa:	89 f3       	breq	.-30     	; 0xede <puts+0x1c>
     efc:	0f ef       	ldi	r16, 0xFF	; 255
     efe:	1f ef       	ldi	r17, 0xFF	; 255
     f00:	ee cf       	rjmp	.-36     	; 0xede <puts+0x1c>
     f02:	8a e0       	ldi	r24, 0x0A	; 10
     f04:	09 95       	icall
     f06:	89 2b       	or	r24, r25
     f08:	11 f4       	brne	.+4      	; 0xf0e <puts+0x4c>
     f0a:	c8 01       	movw	r24, r16
     f0c:	02 c0       	rjmp	.+4      	; 0xf12 <puts+0x50>
     f0e:	8f ef       	ldi	r24, 0xFF	; 255
     f10:	9f ef       	ldi	r25, 0xFF	; 255
     f12:	df 91       	pop	r29
     f14:	cf 91       	pop	r28
     f16:	1f 91       	pop	r17
     f18:	0f 91       	pop	r16
     f1a:	08 95       	ret

00000f1c <vfprintf>:
     f1c:	ac e0       	ldi	r26, 0x0C	; 12
     f1e:	b0 e0       	ldi	r27, 0x00	; 0
     f20:	e4 e9       	ldi	r30, 0x94	; 148
     f22:	f7 e0       	ldi	r31, 0x07	; 7
     f24:	0c 94 29 0a 	jmp	0x1452	; 0x1452 <__prologue_saves__>
     f28:	7c 01       	movw	r14, r24
     f2a:	6b 01       	movw	r12, r22
     f2c:	8a 01       	movw	r16, r20
     f2e:	fc 01       	movw	r30, r24
     f30:	17 82       	std	Z+7, r1	; 0x07
     f32:	16 82       	std	Z+6, r1	; 0x06
     f34:	83 81       	ldd	r24, Z+3	; 0x03
     f36:	81 ff       	sbrs	r24, 1
     f38:	bd c1       	rjmp	.+890    	; 0x12b4 <vfprintf+0x398>
     f3a:	ce 01       	movw	r24, r28
     f3c:	01 96       	adiw	r24, 0x01	; 1
     f3e:	4c 01       	movw	r8, r24
     f40:	f7 01       	movw	r30, r14
     f42:	93 81       	ldd	r25, Z+3	; 0x03
     f44:	f6 01       	movw	r30, r12
     f46:	93 fd       	sbrc	r25, 3
     f48:	85 91       	lpm	r24, Z+
     f4a:	93 ff       	sbrs	r25, 3
     f4c:	81 91       	ld	r24, Z+
     f4e:	6f 01       	movw	r12, r30
     f50:	88 23       	and	r24, r24
     f52:	09 f4       	brne	.+2      	; 0xf56 <vfprintf+0x3a>
     f54:	ab c1       	rjmp	.+854    	; 0x12ac <vfprintf+0x390>
     f56:	85 32       	cpi	r24, 0x25	; 37
     f58:	39 f4       	brne	.+14     	; 0xf68 <vfprintf+0x4c>
     f5a:	93 fd       	sbrc	r25, 3
     f5c:	85 91       	lpm	r24, Z+
     f5e:	93 ff       	sbrs	r25, 3
     f60:	81 91       	ld	r24, Z+
     f62:	6f 01       	movw	r12, r30
     f64:	85 32       	cpi	r24, 0x25	; 37
     f66:	29 f4       	brne	.+10     	; 0xf72 <vfprintf+0x56>
     f68:	b7 01       	movw	r22, r14
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	0e 94 99 09 	call	0x1332	; 0x1332 <fputc>
     f70:	e7 cf       	rjmp	.-50     	; 0xf40 <vfprintf+0x24>
     f72:	51 2c       	mov	r5, r1
     f74:	31 2c       	mov	r3, r1
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	20 32       	cpi	r18, 0x20	; 32
     f7a:	a0 f4       	brcc	.+40     	; 0xfa4 <vfprintf+0x88>
     f7c:	8b 32       	cpi	r24, 0x2B	; 43
     f7e:	69 f0       	breq	.+26     	; 0xf9a <vfprintf+0x7e>
     f80:	30 f4       	brcc	.+12     	; 0xf8e <vfprintf+0x72>
     f82:	80 32       	cpi	r24, 0x20	; 32
     f84:	59 f0       	breq	.+22     	; 0xf9c <vfprintf+0x80>
     f86:	83 32       	cpi	r24, 0x23	; 35
     f88:	69 f4       	brne	.+26     	; 0xfa4 <vfprintf+0x88>
     f8a:	20 61       	ori	r18, 0x10	; 16
     f8c:	2c c0       	rjmp	.+88     	; 0xfe6 <vfprintf+0xca>
     f8e:	8d 32       	cpi	r24, 0x2D	; 45
     f90:	39 f0       	breq	.+14     	; 0xfa0 <vfprintf+0x84>
     f92:	80 33       	cpi	r24, 0x30	; 48
     f94:	39 f4       	brne	.+14     	; 0xfa4 <vfprintf+0x88>
     f96:	21 60       	ori	r18, 0x01	; 1
     f98:	26 c0       	rjmp	.+76     	; 0xfe6 <vfprintf+0xca>
     f9a:	22 60       	ori	r18, 0x02	; 2
     f9c:	24 60       	ori	r18, 0x04	; 4
     f9e:	23 c0       	rjmp	.+70     	; 0xfe6 <vfprintf+0xca>
     fa0:	28 60       	ori	r18, 0x08	; 8
     fa2:	21 c0       	rjmp	.+66     	; 0xfe6 <vfprintf+0xca>
     fa4:	27 fd       	sbrc	r18, 7
     fa6:	27 c0       	rjmp	.+78     	; 0xff6 <vfprintf+0xda>
     fa8:	30 ed       	ldi	r19, 0xD0	; 208
     faa:	38 0f       	add	r19, r24
     fac:	3a 30       	cpi	r19, 0x0A	; 10
     fae:	78 f4       	brcc	.+30     	; 0xfce <vfprintf+0xb2>
     fb0:	26 ff       	sbrs	r18, 6
     fb2:	06 c0       	rjmp	.+12     	; 0xfc0 <vfprintf+0xa4>
     fb4:	fa e0       	ldi	r31, 0x0A	; 10
     fb6:	5f 9e       	mul	r5, r31
     fb8:	30 0d       	add	r19, r0
     fba:	11 24       	eor	r1, r1
     fbc:	53 2e       	mov	r5, r19
     fbe:	13 c0       	rjmp	.+38     	; 0xfe6 <vfprintf+0xca>
     fc0:	8a e0       	ldi	r24, 0x0A	; 10
     fc2:	38 9e       	mul	r3, r24
     fc4:	30 0d       	add	r19, r0
     fc6:	11 24       	eor	r1, r1
     fc8:	33 2e       	mov	r3, r19
     fca:	20 62       	ori	r18, 0x20	; 32
     fcc:	0c c0       	rjmp	.+24     	; 0xfe6 <vfprintf+0xca>
     fce:	8e 32       	cpi	r24, 0x2E	; 46
     fd0:	21 f4       	brne	.+8      	; 0xfda <vfprintf+0xbe>
     fd2:	26 fd       	sbrc	r18, 6
     fd4:	6b c1       	rjmp	.+726    	; 0x12ac <vfprintf+0x390>
     fd6:	20 64       	ori	r18, 0x40	; 64
     fd8:	06 c0       	rjmp	.+12     	; 0xfe6 <vfprintf+0xca>
     fda:	8c 36       	cpi	r24, 0x6C	; 108
     fdc:	11 f4       	brne	.+4      	; 0xfe2 <vfprintf+0xc6>
     fde:	20 68       	ori	r18, 0x80	; 128
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <vfprintf+0xca>
     fe2:	88 36       	cpi	r24, 0x68	; 104
     fe4:	41 f4       	brne	.+16     	; 0xff6 <vfprintf+0xda>
     fe6:	f6 01       	movw	r30, r12
     fe8:	93 fd       	sbrc	r25, 3
     fea:	85 91       	lpm	r24, Z+
     fec:	93 ff       	sbrs	r25, 3
     fee:	81 91       	ld	r24, Z+
     ff0:	6f 01       	movw	r12, r30
     ff2:	81 11       	cpse	r24, r1
     ff4:	c1 cf       	rjmp	.-126    	; 0xf78 <vfprintf+0x5c>
     ff6:	98 2f       	mov	r25, r24
     ff8:	9f 7d       	andi	r25, 0xDF	; 223
     ffa:	95 54       	subi	r25, 0x45	; 69
     ffc:	93 30       	cpi	r25, 0x03	; 3
     ffe:	28 f4       	brcc	.+10     	; 0x100a <vfprintf+0xee>
    1000:	0c 5f       	subi	r16, 0xFC	; 252
    1002:	1f 4f       	sbci	r17, 0xFF	; 255
    1004:	ff e3       	ldi	r31, 0x3F	; 63
    1006:	f9 83       	std	Y+1, r31	; 0x01
    1008:	0d c0       	rjmp	.+26     	; 0x1024 <vfprintf+0x108>
    100a:	83 36       	cpi	r24, 0x63	; 99
    100c:	31 f0       	breq	.+12     	; 0x101a <vfprintf+0xfe>
    100e:	83 37       	cpi	r24, 0x73	; 115
    1010:	71 f0       	breq	.+28     	; 0x102e <vfprintf+0x112>
    1012:	83 35       	cpi	r24, 0x53	; 83
    1014:	09 f0       	breq	.+2      	; 0x1018 <vfprintf+0xfc>
    1016:	5b c0       	rjmp	.+182    	; 0x10ce <vfprintf+0x1b2>
    1018:	22 c0       	rjmp	.+68     	; 0x105e <vfprintf+0x142>
    101a:	f8 01       	movw	r30, r16
    101c:	80 81       	ld	r24, Z
    101e:	89 83       	std	Y+1, r24	; 0x01
    1020:	0e 5f       	subi	r16, 0xFE	; 254
    1022:	1f 4f       	sbci	r17, 0xFF	; 255
    1024:	44 24       	eor	r4, r4
    1026:	43 94       	inc	r4
    1028:	51 2c       	mov	r5, r1
    102a:	54 01       	movw	r10, r8
    102c:	15 c0       	rjmp	.+42     	; 0x1058 <vfprintf+0x13c>
    102e:	38 01       	movw	r6, r16
    1030:	f2 e0       	ldi	r31, 0x02	; 2
    1032:	6f 0e       	add	r6, r31
    1034:	71 1c       	adc	r7, r1
    1036:	f8 01       	movw	r30, r16
    1038:	a0 80       	ld	r10, Z
    103a:	b1 80       	ldd	r11, Z+1	; 0x01
    103c:	26 ff       	sbrs	r18, 6
    103e:	03 c0       	rjmp	.+6      	; 0x1046 <vfprintf+0x12a>
    1040:	65 2d       	mov	r22, r5
    1042:	70 e0       	ldi	r23, 0x00	; 0
    1044:	02 c0       	rjmp	.+4      	; 0x104a <vfprintf+0x12e>
    1046:	6f ef       	ldi	r22, 0xFF	; 255
    1048:	7f ef       	ldi	r23, 0xFF	; 255
    104a:	c5 01       	movw	r24, r10
    104c:	2c 87       	std	Y+12, r18	; 0x0c
    104e:	0e 94 8e 09 	call	0x131c	; 0x131c <strnlen>
    1052:	2c 01       	movw	r4, r24
    1054:	83 01       	movw	r16, r6
    1056:	2c 85       	ldd	r18, Y+12	; 0x0c
    1058:	2f 77       	andi	r18, 0x7F	; 127
    105a:	22 2e       	mov	r2, r18
    105c:	17 c0       	rjmp	.+46     	; 0x108c <vfprintf+0x170>
    105e:	38 01       	movw	r6, r16
    1060:	f2 e0       	ldi	r31, 0x02	; 2
    1062:	6f 0e       	add	r6, r31
    1064:	71 1c       	adc	r7, r1
    1066:	f8 01       	movw	r30, r16
    1068:	a0 80       	ld	r10, Z
    106a:	b1 80       	ldd	r11, Z+1	; 0x01
    106c:	26 ff       	sbrs	r18, 6
    106e:	03 c0       	rjmp	.+6      	; 0x1076 <vfprintf+0x15a>
    1070:	65 2d       	mov	r22, r5
    1072:	70 e0       	ldi	r23, 0x00	; 0
    1074:	02 c0       	rjmp	.+4      	; 0x107a <vfprintf+0x15e>
    1076:	6f ef       	ldi	r22, 0xFF	; 255
    1078:	7f ef       	ldi	r23, 0xFF	; 255
    107a:	c5 01       	movw	r24, r10
    107c:	2c 87       	std	Y+12, r18	; 0x0c
    107e:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <strnlen_P>
    1082:	2c 01       	movw	r4, r24
    1084:	2c 85       	ldd	r18, Y+12	; 0x0c
    1086:	20 68       	ori	r18, 0x80	; 128
    1088:	22 2e       	mov	r2, r18
    108a:	83 01       	movw	r16, r6
    108c:	23 fc       	sbrc	r2, 3
    108e:	1b c0       	rjmp	.+54     	; 0x10c6 <vfprintf+0x1aa>
    1090:	83 2d       	mov	r24, r3
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	48 16       	cp	r4, r24
    1096:	59 06       	cpc	r5, r25
    1098:	b0 f4       	brcc	.+44     	; 0x10c6 <vfprintf+0x1aa>
    109a:	b7 01       	movw	r22, r14
    109c:	80 e2       	ldi	r24, 0x20	; 32
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	0e 94 99 09 	call	0x1332	; 0x1332 <fputc>
    10a4:	3a 94       	dec	r3
    10a6:	f4 cf       	rjmp	.-24     	; 0x1090 <vfprintf+0x174>
    10a8:	f5 01       	movw	r30, r10
    10aa:	27 fc       	sbrc	r2, 7
    10ac:	85 91       	lpm	r24, Z+
    10ae:	27 fe       	sbrs	r2, 7
    10b0:	81 91       	ld	r24, Z+
    10b2:	5f 01       	movw	r10, r30
    10b4:	b7 01       	movw	r22, r14
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	0e 94 99 09 	call	0x1332	; 0x1332 <fputc>
    10bc:	31 10       	cpse	r3, r1
    10be:	3a 94       	dec	r3
    10c0:	f1 e0       	ldi	r31, 0x01	; 1
    10c2:	4f 1a       	sub	r4, r31
    10c4:	51 08       	sbc	r5, r1
    10c6:	41 14       	cp	r4, r1
    10c8:	51 04       	cpc	r5, r1
    10ca:	71 f7       	brne	.-36     	; 0x10a8 <vfprintf+0x18c>
    10cc:	e5 c0       	rjmp	.+458    	; 0x1298 <vfprintf+0x37c>
    10ce:	84 36       	cpi	r24, 0x64	; 100
    10d0:	11 f0       	breq	.+4      	; 0x10d6 <vfprintf+0x1ba>
    10d2:	89 36       	cpi	r24, 0x69	; 105
    10d4:	39 f5       	brne	.+78     	; 0x1124 <vfprintf+0x208>
    10d6:	f8 01       	movw	r30, r16
    10d8:	27 ff       	sbrs	r18, 7
    10da:	07 c0       	rjmp	.+14     	; 0x10ea <vfprintf+0x1ce>
    10dc:	60 81       	ld	r22, Z
    10de:	71 81       	ldd	r23, Z+1	; 0x01
    10e0:	82 81       	ldd	r24, Z+2	; 0x02
    10e2:	93 81       	ldd	r25, Z+3	; 0x03
    10e4:	0c 5f       	subi	r16, 0xFC	; 252
    10e6:	1f 4f       	sbci	r17, 0xFF	; 255
    10e8:	08 c0       	rjmp	.+16     	; 0x10fa <vfprintf+0x1de>
    10ea:	60 81       	ld	r22, Z
    10ec:	71 81       	ldd	r23, Z+1	; 0x01
    10ee:	88 27       	eor	r24, r24
    10f0:	77 fd       	sbrc	r23, 7
    10f2:	80 95       	com	r24
    10f4:	98 2f       	mov	r25, r24
    10f6:	0e 5f       	subi	r16, 0xFE	; 254
    10f8:	1f 4f       	sbci	r17, 0xFF	; 255
    10fa:	2f 76       	andi	r18, 0x6F	; 111
    10fc:	b2 2e       	mov	r11, r18
    10fe:	97 ff       	sbrs	r25, 7
    1100:	09 c0       	rjmp	.+18     	; 0x1114 <vfprintf+0x1f8>
    1102:	90 95       	com	r25
    1104:	80 95       	com	r24
    1106:	70 95       	com	r23
    1108:	61 95       	neg	r22
    110a:	7f 4f       	sbci	r23, 0xFF	; 255
    110c:	8f 4f       	sbci	r24, 0xFF	; 255
    110e:	9f 4f       	sbci	r25, 0xFF	; 255
    1110:	20 68       	ori	r18, 0x80	; 128
    1112:	b2 2e       	mov	r11, r18
    1114:	2a e0       	ldi	r18, 0x0A	; 10
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	a4 01       	movw	r20, r8
    111a:	0e 94 cb 09 	call	0x1396	; 0x1396 <__ultoa_invert>
    111e:	a8 2e       	mov	r10, r24
    1120:	a8 18       	sub	r10, r8
    1122:	44 c0       	rjmp	.+136    	; 0x11ac <vfprintf+0x290>
    1124:	85 37       	cpi	r24, 0x75	; 117
    1126:	29 f4       	brne	.+10     	; 0x1132 <vfprintf+0x216>
    1128:	2f 7e       	andi	r18, 0xEF	; 239
    112a:	b2 2e       	mov	r11, r18
    112c:	2a e0       	ldi	r18, 0x0A	; 10
    112e:	30 e0       	ldi	r19, 0x00	; 0
    1130:	25 c0       	rjmp	.+74     	; 0x117c <vfprintf+0x260>
    1132:	f2 2f       	mov	r31, r18
    1134:	f9 7f       	andi	r31, 0xF9	; 249
    1136:	bf 2e       	mov	r11, r31
    1138:	8f 36       	cpi	r24, 0x6F	; 111
    113a:	c1 f0       	breq	.+48     	; 0x116c <vfprintf+0x250>
    113c:	18 f4       	brcc	.+6      	; 0x1144 <vfprintf+0x228>
    113e:	88 35       	cpi	r24, 0x58	; 88
    1140:	79 f0       	breq	.+30     	; 0x1160 <vfprintf+0x244>
    1142:	b4 c0       	rjmp	.+360    	; 0x12ac <vfprintf+0x390>
    1144:	80 37       	cpi	r24, 0x70	; 112
    1146:	19 f0       	breq	.+6      	; 0x114e <vfprintf+0x232>
    1148:	88 37       	cpi	r24, 0x78	; 120
    114a:	21 f0       	breq	.+8      	; 0x1154 <vfprintf+0x238>
    114c:	af c0       	rjmp	.+350    	; 0x12ac <vfprintf+0x390>
    114e:	2f 2f       	mov	r18, r31
    1150:	20 61       	ori	r18, 0x10	; 16
    1152:	b2 2e       	mov	r11, r18
    1154:	b4 fe       	sbrs	r11, 4
    1156:	0d c0       	rjmp	.+26     	; 0x1172 <vfprintf+0x256>
    1158:	8b 2d       	mov	r24, r11
    115a:	84 60       	ori	r24, 0x04	; 4
    115c:	b8 2e       	mov	r11, r24
    115e:	09 c0       	rjmp	.+18     	; 0x1172 <vfprintf+0x256>
    1160:	24 ff       	sbrs	r18, 4
    1162:	0a c0       	rjmp	.+20     	; 0x1178 <vfprintf+0x25c>
    1164:	9f 2f       	mov	r25, r31
    1166:	96 60       	ori	r25, 0x06	; 6
    1168:	b9 2e       	mov	r11, r25
    116a:	06 c0       	rjmp	.+12     	; 0x1178 <vfprintf+0x25c>
    116c:	28 e0       	ldi	r18, 0x08	; 8
    116e:	30 e0       	ldi	r19, 0x00	; 0
    1170:	05 c0       	rjmp	.+10     	; 0x117c <vfprintf+0x260>
    1172:	20 e1       	ldi	r18, 0x10	; 16
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	02 c0       	rjmp	.+4      	; 0x117c <vfprintf+0x260>
    1178:	20 e1       	ldi	r18, 0x10	; 16
    117a:	32 e0       	ldi	r19, 0x02	; 2
    117c:	f8 01       	movw	r30, r16
    117e:	b7 fe       	sbrs	r11, 7
    1180:	07 c0       	rjmp	.+14     	; 0x1190 <vfprintf+0x274>
    1182:	60 81       	ld	r22, Z
    1184:	71 81       	ldd	r23, Z+1	; 0x01
    1186:	82 81       	ldd	r24, Z+2	; 0x02
    1188:	93 81       	ldd	r25, Z+3	; 0x03
    118a:	0c 5f       	subi	r16, 0xFC	; 252
    118c:	1f 4f       	sbci	r17, 0xFF	; 255
    118e:	06 c0       	rjmp	.+12     	; 0x119c <vfprintf+0x280>
    1190:	60 81       	ld	r22, Z
    1192:	71 81       	ldd	r23, Z+1	; 0x01
    1194:	80 e0       	ldi	r24, 0x00	; 0
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	0e 5f       	subi	r16, 0xFE	; 254
    119a:	1f 4f       	sbci	r17, 0xFF	; 255
    119c:	a4 01       	movw	r20, r8
    119e:	0e 94 cb 09 	call	0x1396	; 0x1396 <__ultoa_invert>
    11a2:	a8 2e       	mov	r10, r24
    11a4:	a8 18       	sub	r10, r8
    11a6:	fb 2d       	mov	r31, r11
    11a8:	ff 77       	andi	r31, 0x7F	; 127
    11aa:	bf 2e       	mov	r11, r31
    11ac:	b6 fe       	sbrs	r11, 6
    11ae:	0b c0       	rjmp	.+22     	; 0x11c6 <vfprintf+0x2aa>
    11b0:	2b 2d       	mov	r18, r11
    11b2:	2e 7f       	andi	r18, 0xFE	; 254
    11b4:	a5 14       	cp	r10, r5
    11b6:	50 f4       	brcc	.+20     	; 0x11cc <vfprintf+0x2b0>
    11b8:	b4 fe       	sbrs	r11, 4
    11ba:	0a c0       	rjmp	.+20     	; 0x11d0 <vfprintf+0x2b4>
    11bc:	b2 fc       	sbrc	r11, 2
    11be:	08 c0       	rjmp	.+16     	; 0x11d0 <vfprintf+0x2b4>
    11c0:	2b 2d       	mov	r18, r11
    11c2:	2e 7e       	andi	r18, 0xEE	; 238
    11c4:	05 c0       	rjmp	.+10     	; 0x11d0 <vfprintf+0x2b4>
    11c6:	7a 2c       	mov	r7, r10
    11c8:	2b 2d       	mov	r18, r11
    11ca:	03 c0       	rjmp	.+6      	; 0x11d2 <vfprintf+0x2b6>
    11cc:	7a 2c       	mov	r7, r10
    11ce:	01 c0       	rjmp	.+2      	; 0x11d2 <vfprintf+0x2b6>
    11d0:	75 2c       	mov	r7, r5
    11d2:	24 ff       	sbrs	r18, 4
    11d4:	0d c0       	rjmp	.+26     	; 0x11f0 <vfprintf+0x2d4>
    11d6:	fe 01       	movw	r30, r28
    11d8:	ea 0d       	add	r30, r10
    11da:	f1 1d       	adc	r31, r1
    11dc:	80 81       	ld	r24, Z
    11de:	80 33       	cpi	r24, 0x30	; 48
    11e0:	11 f4       	brne	.+4      	; 0x11e6 <vfprintf+0x2ca>
    11e2:	29 7e       	andi	r18, 0xE9	; 233
    11e4:	09 c0       	rjmp	.+18     	; 0x11f8 <vfprintf+0x2dc>
    11e6:	22 ff       	sbrs	r18, 2
    11e8:	06 c0       	rjmp	.+12     	; 0x11f6 <vfprintf+0x2da>
    11ea:	73 94       	inc	r7
    11ec:	73 94       	inc	r7
    11ee:	04 c0       	rjmp	.+8      	; 0x11f8 <vfprintf+0x2dc>
    11f0:	82 2f       	mov	r24, r18
    11f2:	86 78       	andi	r24, 0x86	; 134
    11f4:	09 f0       	breq	.+2      	; 0x11f8 <vfprintf+0x2dc>
    11f6:	73 94       	inc	r7
    11f8:	23 fd       	sbrc	r18, 3
    11fa:	13 c0       	rjmp	.+38     	; 0x1222 <vfprintf+0x306>
    11fc:	20 ff       	sbrs	r18, 0
    11fe:	06 c0       	rjmp	.+12     	; 0x120c <vfprintf+0x2f0>
    1200:	5a 2c       	mov	r5, r10
    1202:	73 14       	cp	r7, r3
    1204:	18 f4       	brcc	.+6      	; 0x120c <vfprintf+0x2f0>
    1206:	53 0c       	add	r5, r3
    1208:	57 18       	sub	r5, r7
    120a:	73 2c       	mov	r7, r3
    120c:	73 14       	cp	r7, r3
    120e:	68 f4       	brcc	.+26     	; 0x122a <vfprintf+0x30e>
    1210:	b7 01       	movw	r22, r14
    1212:	80 e2       	ldi	r24, 0x20	; 32
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	2c 87       	std	Y+12, r18	; 0x0c
    1218:	0e 94 99 09 	call	0x1332	; 0x1332 <fputc>
    121c:	73 94       	inc	r7
    121e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1220:	f5 cf       	rjmp	.-22     	; 0x120c <vfprintf+0x2f0>
    1222:	73 14       	cp	r7, r3
    1224:	10 f4       	brcc	.+4      	; 0x122a <vfprintf+0x30e>
    1226:	37 18       	sub	r3, r7
    1228:	01 c0       	rjmp	.+2      	; 0x122c <vfprintf+0x310>
    122a:	31 2c       	mov	r3, r1
    122c:	24 ff       	sbrs	r18, 4
    122e:	12 c0       	rjmp	.+36     	; 0x1254 <vfprintf+0x338>
    1230:	b7 01       	movw	r22, r14
    1232:	80 e3       	ldi	r24, 0x30	; 48
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	2c 87       	std	Y+12, r18	; 0x0c
    1238:	0e 94 99 09 	call	0x1332	; 0x1332 <fputc>
    123c:	2c 85       	ldd	r18, Y+12	; 0x0c
    123e:	22 ff       	sbrs	r18, 2
    1240:	17 c0       	rjmp	.+46     	; 0x1270 <vfprintf+0x354>
    1242:	21 ff       	sbrs	r18, 1
    1244:	03 c0       	rjmp	.+6      	; 0x124c <vfprintf+0x330>
    1246:	88 e5       	ldi	r24, 0x58	; 88
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	02 c0       	rjmp	.+4      	; 0x1250 <vfprintf+0x334>
    124c:	88 e7       	ldi	r24, 0x78	; 120
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	b7 01       	movw	r22, r14
    1252:	0c c0       	rjmp	.+24     	; 0x126c <vfprintf+0x350>
    1254:	82 2f       	mov	r24, r18
    1256:	86 78       	andi	r24, 0x86	; 134
    1258:	59 f0       	breq	.+22     	; 0x1270 <vfprintf+0x354>
    125a:	21 fd       	sbrc	r18, 1
    125c:	02 c0       	rjmp	.+4      	; 0x1262 <vfprintf+0x346>
    125e:	80 e2       	ldi	r24, 0x20	; 32
    1260:	01 c0       	rjmp	.+2      	; 0x1264 <vfprintf+0x348>
    1262:	8b e2       	ldi	r24, 0x2B	; 43
    1264:	27 fd       	sbrc	r18, 7
    1266:	8d e2       	ldi	r24, 0x2D	; 45
    1268:	b7 01       	movw	r22, r14
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	0e 94 99 09 	call	0x1332	; 0x1332 <fputc>
    1270:	a5 14       	cp	r10, r5
    1272:	38 f4       	brcc	.+14     	; 0x1282 <vfprintf+0x366>
    1274:	b7 01       	movw	r22, r14
    1276:	80 e3       	ldi	r24, 0x30	; 48
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	0e 94 99 09 	call	0x1332	; 0x1332 <fputc>
    127e:	5a 94       	dec	r5
    1280:	f7 cf       	rjmp	.-18     	; 0x1270 <vfprintf+0x354>
    1282:	aa 94       	dec	r10
    1284:	f4 01       	movw	r30, r8
    1286:	ea 0d       	add	r30, r10
    1288:	f1 1d       	adc	r31, r1
    128a:	80 81       	ld	r24, Z
    128c:	b7 01       	movw	r22, r14
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	0e 94 99 09 	call	0x1332	; 0x1332 <fputc>
    1294:	a1 10       	cpse	r10, r1
    1296:	f5 cf       	rjmp	.-22     	; 0x1282 <vfprintf+0x366>
    1298:	33 20       	and	r3, r3
    129a:	09 f4       	brne	.+2      	; 0x129e <vfprintf+0x382>
    129c:	51 ce       	rjmp	.-862    	; 0xf40 <vfprintf+0x24>
    129e:	b7 01       	movw	r22, r14
    12a0:	80 e2       	ldi	r24, 0x20	; 32
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	0e 94 99 09 	call	0x1332	; 0x1332 <fputc>
    12a8:	3a 94       	dec	r3
    12aa:	f6 cf       	rjmp	.-20     	; 0x1298 <vfprintf+0x37c>
    12ac:	f7 01       	movw	r30, r14
    12ae:	86 81       	ldd	r24, Z+6	; 0x06
    12b0:	97 81       	ldd	r25, Z+7	; 0x07
    12b2:	02 c0       	rjmp	.+4      	; 0x12b8 <vfprintf+0x39c>
    12b4:	8f ef       	ldi	r24, 0xFF	; 255
    12b6:	9f ef       	ldi	r25, 0xFF	; 255
    12b8:	2c 96       	adiw	r28, 0x0c	; 12
    12ba:	e2 e1       	ldi	r30, 0x12	; 18
    12bc:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__epilogue_restores__>

000012c0 <calloc>:
    12c0:	0f 93       	push	r16
    12c2:	1f 93       	push	r17
    12c4:	cf 93       	push	r28
    12c6:	df 93       	push	r29
    12c8:	86 9f       	mul	r24, r22
    12ca:	80 01       	movw	r16, r0
    12cc:	87 9f       	mul	r24, r23
    12ce:	10 0d       	add	r17, r0
    12d0:	96 9f       	mul	r25, r22
    12d2:	10 0d       	add	r17, r0
    12d4:	11 24       	eor	r1, r1
    12d6:	c8 01       	movw	r24, r16
    12d8:	0e 94 db 05 	call	0xbb6	; 0xbb6 <malloc>
    12dc:	ec 01       	movw	r28, r24
    12de:	00 97       	sbiw	r24, 0x00	; 0
    12e0:	29 f0       	breq	.+10     	; 0x12ec <calloc+0x2c>
    12e2:	a8 01       	movw	r20, r16
    12e4:	60 e0       	ldi	r22, 0x00	; 0
    12e6:	70 e0       	ldi	r23, 0x00	; 0
    12e8:	0e 94 87 09 	call	0x130e	; 0x130e <memset>
    12ec:	ce 01       	movw	r24, r28
    12ee:	df 91       	pop	r29
    12f0:	cf 91       	pop	r28
    12f2:	1f 91       	pop	r17
    12f4:	0f 91       	pop	r16
    12f6:	08 95       	ret

000012f8 <strnlen_P>:
    12f8:	fc 01       	movw	r30, r24
    12fa:	05 90       	lpm	r0, Z+
    12fc:	61 50       	subi	r22, 0x01	; 1
    12fe:	70 40       	sbci	r23, 0x00	; 0
    1300:	01 10       	cpse	r0, r1
    1302:	d8 f7       	brcc	.-10     	; 0x12fa <strnlen_P+0x2>
    1304:	80 95       	com	r24
    1306:	90 95       	com	r25
    1308:	8e 0f       	add	r24, r30
    130a:	9f 1f       	adc	r25, r31
    130c:	08 95       	ret

0000130e <memset>:
    130e:	dc 01       	movw	r26, r24
    1310:	01 c0       	rjmp	.+2      	; 0x1314 <memset+0x6>
    1312:	6d 93       	st	X+, r22
    1314:	41 50       	subi	r20, 0x01	; 1
    1316:	50 40       	sbci	r21, 0x00	; 0
    1318:	e0 f7       	brcc	.-8      	; 0x1312 <memset+0x4>
    131a:	08 95       	ret

0000131c <strnlen>:
    131c:	fc 01       	movw	r30, r24
    131e:	61 50       	subi	r22, 0x01	; 1
    1320:	70 40       	sbci	r23, 0x00	; 0
    1322:	01 90       	ld	r0, Z+
    1324:	01 10       	cpse	r0, r1
    1326:	d8 f7       	brcc	.-10     	; 0x131e <strnlen+0x2>
    1328:	80 95       	com	r24
    132a:	90 95       	com	r25
    132c:	8e 0f       	add	r24, r30
    132e:	9f 1f       	adc	r25, r31
    1330:	08 95       	ret

00001332 <fputc>:
    1332:	0f 93       	push	r16
    1334:	1f 93       	push	r17
    1336:	cf 93       	push	r28
    1338:	df 93       	push	r29
    133a:	18 2f       	mov	r17, r24
    133c:	09 2f       	mov	r16, r25
    133e:	eb 01       	movw	r28, r22
    1340:	8b 81       	ldd	r24, Y+3	; 0x03
    1342:	81 fd       	sbrc	r24, 1
    1344:	03 c0       	rjmp	.+6      	; 0x134c <fputc+0x1a>
    1346:	8f ef       	ldi	r24, 0xFF	; 255
    1348:	9f ef       	ldi	r25, 0xFF	; 255
    134a:	20 c0       	rjmp	.+64     	; 0x138c <fputc+0x5a>
    134c:	82 ff       	sbrs	r24, 2
    134e:	10 c0       	rjmp	.+32     	; 0x1370 <fputc+0x3e>
    1350:	4e 81       	ldd	r20, Y+6	; 0x06
    1352:	5f 81       	ldd	r21, Y+7	; 0x07
    1354:	2c 81       	ldd	r18, Y+4	; 0x04
    1356:	3d 81       	ldd	r19, Y+5	; 0x05
    1358:	42 17       	cp	r20, r18
    135a:	53 07       	cpc	r21, r19
    135c:	7c f4       	brge	.+30     	; 0x137c <fputc+0x4a>
    135e:	e8 81       	ld	r30, Y
    1360:	f9 81       	ldd	r31, Y+1	; 0x01
    1362:	9f 01       	movw	r18, r30
    1364:	2f 5f       	subi	r18, 0xFF	; 255
    1366:	3f 4f       	sbci	r19, 0xFF	; 255
    1368:	39 83       	std	Y+1, r19	; 0x01
    136a:	28 83       	st	Y, r18
    136c:	10 83       	st	Z, r17
    136e:	06 c0       	rjmp	.+12     	; 0x137c <fputc+0x4a>
    1370:	e8 85       	ldd	r30, Y+8	; 0x08
    1372:	f9 85       	ldd	r31, Y+9	; 0x09
    1374:	81 2f       	mov	r24, r17
    1376:	09 95       	icall
    1378:	89 2b       	or	r24, r25
    137a:	29 f7       	brne	.-54     	; 0x1346 <fputc+0x14>
    137c:	2e 81       	ldd	r18, Y+6	; 0x06
    137e:	3f 81       	ldd	r19, Y+7	; 0x07
    1380:	2f 5f       	subi	r18, 0xFF	; 255
    1382:	3f 4f       	sbci	r19, 0xFF	; 255
    1384:	3f 83       	std	Y+7, r19	; 0x07
    1386:	2e 83       	std	Y+6, r18	; 0x06
    1388:	81 2f       	mov	r24, r17
    138a:	90 2f       	mov	r25, r16
    138c:	df 91       	pop	r29
    138e:	cf 91       	pop	r28
    1390:	1f 91       	pop	r17
    1392:	0f 91       	pop	r16
    1394:	08 95       	ret

00001396 <__ultoa_invert>:
    1396:	fa 01       	movw	r30, r20
    1398:	aa 27       	eor	r26, r26
    139a:	28 30       	cpi	r18, 0x08	; 8
    139c:	51 f1       	breq	.+84     	; 0x13f2 <__ultoa_invert+0x5c>
    139e:	20 31       	cpi	r18, 0x10	; 16
    13a0:	81 f1       	breq	.+96     	; 0x1402 <__ultoa_invert+0x6c>
    13a2:	e8 94       	clt
    13a4:	6f 93       	push	r22
    13a6:	6e 7f       	andi	r22, 0xFE	; 254
    13a8:	6e 5f       	subi	r22, 0xFE	; 254
    13aa:	7f 4f       	sbci	r23, 0xFF	; 255
    13ac:	8f 4f       	sbci	r24, 0xFF	; 255
    13ae:	9f 4f       	sbci	r25, 0xFF	; 255
    13b0:	af 4f       	sbci	r26, 0xFF	; 255
    13b2:	b1 e0       	ldi	r27, 0x01	; 1
    13b4:	3e d0       	rcall	.+124    	; 0x1432 <__ultoa_invert+0x9c>
    13b6:	b4 e0       	ldi	r27, 0x04	; 4
    13b8:	3c d0       	rcall	.+120    	; 0x1432 <__ultoa_invert+0x9c>
    13ba:	67 0f       	add	r22, r23
    13bc:	78 1f       	adc	r23, r24
    13be:	89 1f       	adc	r24, r25
    13c0:	9a 1f       	adc	r25, r26
    13c2:	a1 1d       	adc	r26, r1
    13c4:	68 0f       	add	r22, r24
    13c6:	79 1f       	adc	r23, r25
    13c8:	8a 1f       	adc	r24, r26
    13ca:	91 1d       	adc	r25, r1
    13cc:	a1 1d       	adc	r26, r1
    13ce:	6a 0f       	add	r22, r26
    13d0:	71 1d       	adc	r23, r1
    13d2:	81 1d       	adc	r24, r1
    13d4:	91 1d       	adc	r25, r1
    13d6:	a1 1d       	adc	r26, r1
    13d8:	20 d0       	rcall	.+64     	; 0x141a <__ultoa_invert+0x84>
    13da:	09 f4       	brne	.+2      	; 0x13de <__ultoa_invert+0x48>
    13dc:	68 94       	set
    13de:	3f 91       	pop	r19
    13e0:	2a e0       	ldi	r18, 0x0A	; 10
    13e2:	26 9f       	mul	r18, r22
    13e4:	11 24       	eor	r1, r1
    13e6:	30 19       	sub	r19, r0
    13e8:	30 5d       	subi	r19, 0xD0	; 208
    13ea:	31 93       	st	Z+, r19
    13ec:	de f6       	brtc	.-74     	; 0x13a4 <__ultoa_invert+0xe>
    13ee:	cf 01       	movw	r24, r30
    13f0:	08 95       	ret
    13f2:	46 2f       	mov	r20, r22
    13f4:	47 70       	andi	r20, 0x07	; 7
    13f6:	40 5d       	subi	r20, 0xD0	; 208
    13f8:	41 93       	st	Z+, r20
    13fa:	b3 e0       	ldi	r27, 0x03	; 3
    13fc:	0f d0       	rcall	.+30     	; 0x141c <__ultoa_invert+0x86>
    13fe:	c9 f7       	brne	.-14     	; 0x13f2 <__ultoa_invert+0x5c>
    1400:	f6 cf       	rjmp	.-20     	; 0x13ee <__ultoa_invert+0x58>
    1402:	46 2f       	mov	r20, r22
    1404:	4f 70       	andi	r20, 0x0F	; 15
    1406:	40 5d       	subi	r20, 0xD0	; 208
    1408:	4a 33       	cpi	r20, 0x3A	; 58
    140a:	18 f0       	brcs	.+6      	; 0x1412 <__ultoa_invert+0x7c>
    140c:	49 5d       	subi	r20, 0xD9	; 217
    140e:	31 fd       	sbrc	r19, 1
    1410:	40 52       	subi	r20, 0x20	; 32
    1412:	41 93       	st	Z+, r20
    1414:	02 d0       	rcall	.+4      	; 0x141a <__ultoa_invert+0x84>
    1416:	a9 f7       	brne	.-22     	; 0x1402 <__ultoa_invert+0x6c>
    1418:	ea cf       	rjmp	.-44     	; 0x13ee <__ultoa_invert+0x58>
    141a:	b4 e0       	ldi	r27, 0x04	; 4
    141c:	a6 95       	lsr	r26
    141e:	97 95       	ror	r25
    1420:	87 95       	ror	r24
    1422:	77 95       	ror	r23
    1424:	67 95       	ror	r22
    1426:	ba 95       	dec	r27
    1428:	c9 f7       	brne	.-14     	; 0x141c <__ultoa_invert+0x86>
    142a:	00 97       	sbiw	r24, 0x00	; 0
    142c:	61 05       	cpc	r22, r1
    142e:	71 05       	cpc	r23, r1
    1430:	08 95       	ret
    1432:	9b 01       	movw	r18, r22
    1434:	ac 01       	movw	r20, r24
    1436:	0a 2e       	mov	r0, r26
    1438:	06 94       	lsr	r0
    143a:	57 95       	ror	r21
    143c:	47 95       	ror	r20
    143e:	37 95       	ror	r19
    1440:	27 95       	ror	r18
    1442:	ba 95       	dec	r27
    1444:	c9 f7       	brne	.-14     	; 0x1438 <__ultoa_invert+0xa2>
    1446:	62 0f       	add	r22, r18
    1448:	73 1f       	adc	r23, r19
    144a:	84 1f       	adc	r24, r20
    144c:	95 1f       	adc	r25, r21
    144e:	a0 1d       	adc	r26, r0
    1450:	08 95       	ret

00001452 <__prologue_saves__>:
    1452:	2f 92       	push	r2
    1454:	3f 92       	push	r3
    1456:	4f 92       	push	r4
    1458:	5f 92       	push	r5
    145a:	6f 92       	push	r6
    145c:	7f 92       	push	r7
    145e:	8f 92       	push	r8
    1460:	9f 92       	push	r9
    1462:	af 92       	push	r10
    1464:	bf 92       	push	r11
    1466:	cf 92       	push	r12
    1468:	df 92       	push	r13
    146a:	ef 92       	push	r14
    146c:	ff 92       	push	r15
    146e:	0f 93       	push	r16
    1470:	1f 93       	push	r17
    1472:	cf 93       	push	r28
    1474:	df 93       	push	r29
    1476:	cd b7       	in	r28, 0x3d	; 61
    1478:	de b7       	in	r29, 0x3e	; 62
    147a:	ca 1b       	sub	r28, r26
    147c:	db 0b       	sbc	r29, r27
    147e:	0f b6       	in	r0, 0x3f	; 63
    1480:	f8 94       	cli
    1482:	de bf       	out	0x3e, r29	; 62
    1484:	0f be       	out	0x3f, r0	; 63
    1486:	cd bf       	out	0x3d, r28	; 61
    1488:	09 94       	ijmp

0000148a <__epilogue_restores__>:
    148a:	2a 88       	ldd	r2, Y+18	; 0x12
    148c:	39 88       	ldd	r3, Y+17	; 0x11
    148e:	48 88       	ldd	r4, Y+16	; 0x10
    1490:	5f 84       	ldd	r5, Y+15	; 0x0f
    1492:	6e 84       	ldd	r6, Y+14	; 0x0e
    1494:	7d 84       	ldd	r7, Y+13	; 0x0d
    1496:	8c 84       	ldd	r8, Y+12	; 0x0c
    1498:	9b 84       	ldd	r9, Y+11	; 0x0b
    149a:	aa 84       	ldd	r10, Y+10	; 0x0a
    149c:	b9 84       	ldd	r11, Y+9	; 0x09
    149e:	c8 84       	ldd	r12, Y+8	; 0x08
    14a0:	df 80       	ldd	r13, Y+7	; 0x07
    14a2:	ee 80       	ldd	r14, Y+6	; 0x06
    14a4:	fd 80       	ldd	r15, Y+5	; 0x05
    14a6:	0c 81       	ldd	r16, Y+4	; 0x04
    14a8:	1b 81       	ldd	r17, Y+3	; 0x03
    14aa:	aa 81       	ldd	r26, Y+2	; 0x02
    14ac:	b9 81       	ldd	r27, Y+1	; 0x01
    14ae:	ce 0f       	add	r28, r30
    14b0:	d1 1d       	adc	r29, r1
    14b2:	0f b6       	in	r0, 0x3f	; 63
    14b4:	f8 94       	cli
    14b6:	de bf       	out	0x3e, r29	; 62
    14b8:	0f be       	out	0x3f, r0	; 63
    14ba:	cd bf       	out	0x3d, r28	; 61
    14bc:	ed 01       	movw	r28, r26
    14be:	08 95       	ret

000014c0 <_exit>:
    14c0:	f8 94       	cli

000014c2 <__stop_program>:
    14c2:	ff cf       	rjmp	.-2      	; 0x14c2 <__stop_program>
