
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008e  00800200  00001e40  00001ed4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001e40  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002a  0080028e  0080028e  00001f62  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f62  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002b8  00000000  00000000  00001fbe  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000023cf  00000000  00000000  00002276  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001125  00000000  00000000  00004645  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000015ca  00000000  00000000  0000576a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000006b8  00000000  00000000  00006d34  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000069e  00000000  00000000  000073ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000134e  00000000  00000000  00007a8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001f8  00000000  00000000  00008dd8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	43 c1       	rjmp	.+646    	; 0x288 <__ctors_end>
       2:	00 00       	nop
       4:	61 c1       	rjmp	.+706    	; 0x2c8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c1       	rjmp	.+702    	; 0x2c8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c1       	rjmp	.+698    	; 0x2c8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c1       	rjmp	.+694    	; 0x2c8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c1       	rjmp	.+690    	; 0x2c8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c1       	rjmp	.+686    	; 0x2c8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c1       	rjmp	.+682    	; 0x2c8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c1       	rjmp	.+678    	; 0x2c8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c1       	rjmp	.+674    	; 0x2c8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c1       	rjmp	.+670    	; 0x2c8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c1       	rjmp	.+666    	; 0x2c8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c1       	rjmp	.+662    	; 0x2c8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c1       	rjmp	.+658    	; 0x2c8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c1       	rjmp	.+654    	; 0x2c8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c1       	rjmp	.+650    	; 0x2c8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c1       	rjmp	.+646    	; 0x2c8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c1       	rjmp	.+642    	; 0x2c8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c1       	rjmp	.+638    	; 0x2c8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c1       	rjmp	.+634    	; 0x2c8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c1       	rjmp	.+630    	; 0x2c8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c1       	rjmp	.+626    	; 0x2c8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c1       	rjmp	.+622    	; 0x2c8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c1       	rjmp	.+618    	; 0x2c8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c1       	rjmp	.+614    	; 0x2c8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c1       	rjmp	.+610    	; 0x2c8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c1       	rjmp	.+606    	; 0x2c8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c1       	rjmp	.+602    	; 0x2c8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c1       	rjmp	.+598    	; 0x2c8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c1       	rjmp	.+594    	; 0x2c8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c1       	rjmp	.+590    	; 0x2c8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c1       	rjmp	.+586    	; 0x2c8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c1       	rjmp	.+582    	; 0x2c8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c1       	rjmp	.+578    	; 0x2c8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c1       	rjmp	.+574    	; 0x2c8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	1d c1       	rjmp	.+570    	; 0x2c8 <__bad_interrupt>
      8e:	00 00       	nop
      90:	1b c1       	rjmp	.+566    	; 0x2c8 <__bad_interrupt>
      92:	00 00       	nop
      94:	19 c1       	rjmp	.+562    	; 0x2c8 <__bad_interrupt>
      96:	00 00       	nop
      98:	17 c1       	rjmp	.+558    	; 0x2c8 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	3e c5       	rjmp	.+2684   	; 0xb1a <__vector_39>
      9e:	00 00       	nop
      a0:	13 c1       	rjmp	.+550    	; 0x2c8 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	11 c1       	rjmp	.+546    	; 0x2c8 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0f c1       	rjmp	.+542    	; 0x2c8 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	0d c1       	rjmp	.+538    	; 0x2c8 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	0b c1       	rjmp	.+534    	; 0x2c8 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	09 c1       	rjmp	.+530    	; 0x2c8 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	07 c1       	rjmp	.+526    	; 0x2c8 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	05 c1       	rjmp	.+522    	; 0x2c8 <__bad_interrupt>
      be:	00 00       	nop
      c0:	03 c1       	rjmp	.+518    	; 0x2c8 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	01 c1       	rjmp	.+514    	; 0x2c8 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ff c0       	rjmp	.+510    	; 0x2c8 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	fd c0       	rjmp	.+506    	; 0x2c8 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	fb c0       	rjmp	.+502    	; 0x2c8 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	f9 c0       	rjmp	.+498    	; 0x2c8 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	f7 c0       	rjmp	.+494    	; 0x2c8 <__bad_interrupt>
      da:	00 00       	nop
      dc:	f5 c0       	rjmp	.+490    	; 0x2c8 <__bad_interrupt>
      de:	00 00       	nop
      e0:	f3 c0       	rjmp	.+486    	; 0x2c8 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	a8 05       	cpc	r26, r8
      e6:	fa 05       	cpc	r31, r10
      e8:	fa 05       	cpc	r31, r10
      ea:	fa 05       	cpc	r31, r10
      ec:	fa 05       	cpc	r31, r10
      ee:	fa 05       	cpc	r31, r10
      f0:	fa 05       	cpc	r31, r10
      f2:	fa 05       	cpc	r31, r10
      f4:	a8 05       	cpc	r26, r8
      f6:	fa 05       	cpc	r31, r10
      f8:	fa 05       	cpc	r31, r10
      fa:	fa 05       	cpc	r31, r10
      fc:	fa 05       	cpc	r31, r10
      fe:	fa 05       	cpc	r31, r10
     100:	fa 05       	cpc	r31, r10
     102:	fa 05       	cpc	r31, r10
     104:	aa 05       	cpc	r26, r10
     106:	fa 05       	cpc	r31, r10
     108:	fa 05       	cpc	r31, r10
     10a:	fa 05       	cpc	r31, r10
     10c:	fa 05       	cpc	r31, r10
     10e:	fa 05       	cpc	r31, r10
     110:	fa 05       	cpc	r31, r10
     112:	fa 05       	cpc	r31, r10
     114:	fa 05       	cpc	r31, r10
     116:	fa 05       	cpc	r31, r10
     118:	fa 05       	cpc	r31, r10
     11a:	fa 05       	cpc	r31, r10
     11c:	fa 05       	cpc	r31, r10
     11e:	fa 05       	cpc	r31, r10
     120:	fa 05       	cpc	r31, r10
     122:	fa 05       	cpc	r31, r10
     124:	aa 05       	cpc	r26, r10
     126:	fa 05       	cpc	r31, r10
     128:	fa 05       	cpc	r31, r10
     12a:	fa 05       	cpc	r31, r10
     12c:	fa 05       	cpc	r31, r10
     12e:	fa 05       	cpc	r31, r10
     130:	fa 05       	cpc	r31, r10
     132:	fa 05       	cpc	r31, r10
     134:	fa 05       	cpc	r31, r10
     136:	fa 05       	cpc	r31, r10
     138:	fa 05       	cpc	r31, r10
     13a:	fa 05       	cpc	r31, r10
     13c:	fa 05       	cpc	r31, r10
     13e:	fa 05       	cpc	r31, r10
     140:	fa 05       	cpc	r31, r10
     142:	fa 05       	cpc	r31, r10
     144:	f6 05       	cpc	r31, r6
     146:	fa 05       	cpc	r31, r10
     148:	fa 05       	cpc	r31, r10
     14a:	fa 05       	cpc	r31, r10
     14c:	fa 05       	cpc	r31, r10
     14e:	fa 05       	cpc	r31, r10
     150:	fa 05       	cpc	r31, r10
     152:	fa 05       	cpc	r31, r10
     154:	d3 05       	cpc	r29, r3
     156:	fa 05       	cpc	r31, r10
     158:	fa 05       	cpc	r31, r10
     15a:	fa 05       	cpc	r31, r10
     15c:	fa 05       	cpc	r31, r10
     15e:	fa 05       	cpc	r31, r10
     160:	fa 05       	cpc	r31, r10
     162:	fa 05       	cpc	r31, r10
     164:	fa 05       	cpc	r31, r10
     166:	fa 05       	cpc	r31, r10
     168:	fa 05       	cpc	r31, r10
     16a:	fa 05       	cpc	r31, r10
     16c:	fa 05       	cpc	r31, r10
     16e:	fa 05       	cpc	r31, r10
     170:	fa 05       	cpc	r31, r10
     172:	fa 05       	cpc	r31, r10
     174:	c7 05       	cpc	r28, r7
     176:	fa 05       	cpc	r31, r10
     178:	fa 05       	cpc	r31, r10
     17a:	fa 05       	cpc	r31, r10
     17c:	fa 05       	cpc	r31, r10
     17e:	fa 05       	cpc	r31, r10
     180:	fa 05       	cpc	r31, r10
     182:	fa 05       	cpc	r31, r10
     184:	e5 05       	cpc	r30, r5

00000186 <__trampolines_end>:
     186:	6e 61       	ori	r22, 0x1E	; 30
     188:	6e 00       	.word	0x006e	; ????

0000018a <__c.2159>:
     18a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     19a:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     1aa:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     1ba:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     1ca:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     1da:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     1ea:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     1fa:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     20a:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     21a:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     22a:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     23a:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     24a:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     25a:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     26a:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     27a:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000288 <__ctors_end>:
     288:	11 24       	eor	r1, r1
     28a:	1f be       	out	0x3f, r1	; 63
     28c:	cf ef       	ldi	r28, 0xFF	; 255
     28e:	d1 e2       	ldi	r29, 0x21	; 33
     290:	de bf       	out	0x3e, r29	; 62
     292:	cd bf       	out	0x3d, r28	; 61
     294:	00 e0       	ldi	r16, 0x00	; 0
     296:	0c bf       	out	0x3c, r16	; 60

00000298 <__do_copy_data>:
     298:	12 e0       	ldi	r17, 0x02	; 2
     29a:	a0 e0       	ldi	r26, 0x00	; 0
     29c:	b2 e0       	ldi	r27, 0x02	; 2
     29e:	e0 e4       	ldi	r30, 0x40	; 64
     2a0:	fe e1       	ldi	r31, 0x1E	; 30
     2a2:	00 e0       	ldi	r16, 0x00	; 0
     2a4:	0b bf       	out	0x3b, r16	; 59
     2a6:	02 c0       	rjmp	.+4      	; 0x2ac <__do_copy_data+0x14>
     2a8:	07 90       	elpm	r0, Z+
     2aa:	0d 92       	st	X+, r0
     2ac:	ae 38       	cpi	r26, 0x8E	; 142
     2ae:	b1 07       	cpc	r27, r17
     2b0:	d9 f7       	brne	.-10     	; 0x2a8 <__do_copy_data+0x10>

000002b2 <__do_clear_bss>:
     2b2:	22 e0       	ldi	r18, 0x02	; 2
     2b4:	ae e8       	ldi	r26, 0x8E	; 142
     2b6:	b2 e0       	ldi	r27, 0x02	; 2
     2b8:	01 c0       	rjmp	.+2      	; 0x2bc <.do_clear_bss_start>

000002ba <.do_clear_bss_loop>:
     2ba:	1d 92       	st	X+, r1

000002bc <.do_clear_bss_start>:
     2bc:	a8 3b       	cpi	r26, 0xB8	; 184
     2be:	b2 07       	cpc	r27, r18
     2c0:	e1 f7       	brne	.-8      	; 0x2ba <.do_clear_bss_loop>
     2c2:	50 d2       	rcall	.+1184   	; 0x764 <main>
     2c4:	0c 94 1e 0f 	jmp	0x1e3c	; 0x1e3c <_exit>

000002c8 <__bad_interrupt>:
     2c8:	9b ce       	rjmp	.-714    	; 0x0 <__vectors>

000002ca <adc_init>:
#include <avr/io.h>
#include <stdint.h>
void adc_init(void){
	ADCSRA	|= (1 << ADEN) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2);
     2ca:	ea e7       	ldi	r30, 0x7A	; 122
     2cc:	f0 e0       	ldi	r31, 0x00	; 0
     2ce:	80 81       	ld	r24, Z
     2d0:	87 68       	ori	r24, 0x87	; 135
     2d2:	80 83       	st	Z, r24
	ADMUX	|= (1<<REFS0);
     2d4:	ec e7       	ldi	r30, 0x7C	; 124
     2d6:	f0 e0       	ldi	r31, 0x00	; 0
     2d8:	80 81       	ld	r24, Z
     2da:	80 64       	ori	r24, 0x40	; 64
     2dc:	80 83       	st	Z, r24
	ADMUX	&= ~(1<<REFS1);
     2de:	80 81       	ld	r24, Z
     2e0:	8f 77       	andi	r24, 0x7F	; 127
     2e2:	80 83       	st	Z, r24
     2e4:	08 95       	ret

000002e6 <can_init>:
	printf("\n");
}

void can_handle_joystick_message(can_message msg){
	pwm_set_servo(msg.data[0]);
}
     2e6:	d6 d1       	rcall	.+940    	; 0x694 <mcp_init>
     2e8:	4f ef       	ldi	r20, 0xFF	; 255
     2ea:	60 e6       	ldi	r22, 0x60	; 96
     2ec:	80 e6       	ldi	r24, 0x60	; 96
     2ee:	be d1       	rcall	.+892    	; 0x66c <mcp_bitModify>
     2f0:	4f ef       	ldi	r20, 0xFF	; 255
     2f2:	60 e6       	ldi	r22, 0x60	; 96
     2f4:	80 e7       	ldi	r24, 0x70	; 112
     2f6:	ba d1       	rcall	.+884    	; 0x66c <mcp_bitModify>
     2f8:	43 e0       	ldi	r20, 0x03	; 3
     2fa:	63 e0       	ldi	r22, 0x03	; 3
     2fc:	8e e2       	ldi	r24, 0x2E	; 46
     2fe:	b6 d1       	rcall	.+876    	; 0x66c <mcp_bitModify>
     300:	40 e0       	ldi	r20, 0x00	; 0
     302:	60 ee       	ldi	r22, 0xE0	; 224
     304:	8f e0       	ldi	r24, 0x0F	; 15
     306:	b2 c1       	rjmp	.+868    	; 0x66c <mcp_bitModify>
     308:	08 95       	ret

0000030a <can_pollInterrupt>:
     30a:	80 b1       	in	r24, 0x00	; 0
     30c:	8c e2       	ldi	r24, 0x2C	; 44
     30e:	9d d1       	rcall	.+826    	; 0x64a <mcp_read>
     310:	80 ff       	sbrs	r24, 0
     312:	06 c0       	rjmp	.+12     	; 0x320 <can_pollInterrupt+0x16>
     314:	4f ef       	ldi	r20, 0xFF	; 255
     316:	61 e0       	ldi	r22, 0x01	; 1
     318:	8c e2       	ldi	r24, 0x2C	; 44
     31a:	a8 d1       	rcall	.+848    	; 0x66c <mcp_bitModify>
     31c:	90 e6       	ldi	r25, 0x60	; 96
     31e:	09 c0       	rjmp	.+18     	; 0x332 <can_pollInterrupt+0x28>
     320:	98 2f       	mov	r25, r24
     322:	92 70       	andi	r25, 0x02	; 2
     324:	81 ff       	sbrs	r24, 1
     326:	05 c0       	rjmp	.+10     	; 0x332 <can_pollInterrupt+0x28>
     328:	4f ef       	ldi	r20, 0xFF	; 255
     32a:	62 e0       	ldi	r22, 0x02	; 2
     32c:	8c e2       	ldi	r24, 0x2C	; 44
     32e:	9e d1       	rcall	.+828    	; 0x66c <mcp_bitModify>
     330:	90 e7       	ldi	r25, 0x70	; 112
     332:	89 2f       	mov	r24, r25
     334:	08 95       	ret

00000336 <can_read>:
     336:	8f 92       	push	r8
     338:	9f 92       	push	r9
     33a:	af 92       	push	r10
     33c:	bf 92       	push	r11
     33e:	cf 92       	push	r12
     340:	df 92       	push	r13
     342:	ef 92       	push	r14
     344:	ff 92       	push	r15
     346:	0f 93       	push	r16
     348:	1f 93       	push	r17
     34a:	cf 93       	push	r28
     34c:	df 93       	push	r29
     34e:	cd b7       	in	r28, 0x3d	; 61
     350:	de b7       	in	r29, 0x3e	; 62
     352:	2b 97       	sbiw	r28, 0x0b	; 11
     354:	0f b6       	in	r0, 0x3f	; 63
     356:	f8 94       	cli
     358:	de bf       	out	0x3e, r29	; 62
     35a:	0f be       	out	0x3f, r0	; 63
     35c:	cd bf       	out	0x3d, r28	; 61
     35e:	6c 01       	movw	r12, r24
     360:	d4 df       	rcall	.-88     	; 0x30a <can_pollInterrupt>
     362:	18 2f       	mov	r17, r24
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	81 0f       	add	r24, r17
     368:	70 d1       	rcall	.+736    	; 0x64a <mcp_read>
     36a:	a8 2e       	mov	r10, r24
     36c:	82 e0       	ldi	r24, 0x02	; 2
     36e:	81 0f       	add	r24, r17
     370:	6c d1       	rcall	.+728    	; 0x64a <mcp_read>
     372:	82 95       	swap	r24
     374:	86 95       	lsr	r24
     376:	87 70       	andi	r24, 0x07	; 7
     378:	b1 2c       	mov	r11, r1
     37a:	aa 0c       	add	r10, r10
     37c:	bb 1c       	adc	r11, r11
     37e:	aa 0c       	add	r10, r10
     380:	bb 1c       	adc	r11, r11
     382:	aa 0c       	add	r10, r10
     384:	bb 1c       	adc	r11, r11
     386:	a8 2a       	or	r10, r24
     388:	85 e0       	ldi	r24, 0x05	; 5
     38a:	81 0f       	add	r24, r17
     38c:	5e d1       	rcall	.+700    	; 0x64a <mcp_read>
     38e:	8f 70       	andi	r24, 0x0F	; 15
     390:	88 2e       	mov	r8, r24
     392:	a1 f0       	breq	.+40     	; 0x3bc <can_read+0x86>
     394:	0f 2e       	mov	r0, r31
     396:	f6 e0       	ldi	r31, 0x06	; 6
     398:	9f 2e       	mov	r9, r31
     39a:	f0 2d       	mov	r31, r0
     39c:	91 0e       	add	r9, r17
     39e:	8e 01       	movw	r16, r28
     3a0:	0c 5f       	subi	r16, 0xFC	; 252
     3a2:	1f 4f       	sbci	r17, 0xFF	; 255
     3a4:	78 01       	movw	r14, r16
     3a6:	e8 0e       	add	r14, r24
     3a8:	f1 1c       	adc	r15, r1
     3aa:	89 2d       	mov	r24, r9
     3ac:	4e d1       	rcall	.+668    	; 0x64a <mcp_read>
     3ae:	f8 01       	movw	r30, r16
     3b0:	81 93       	st	Z+, r24
     3b2:	8f 01       	movw	r16, r30
     3b4:	93 94       	inc	r9
     3b6:	ee 15       	cp	r30, r14
     3b8:	ff 05       	cpc	r31, r15
     3ba:	b9 f7       	brne	.-18     	; 0x3aa <can_read+0x74>
     3bc:	40 e0       	ldi	r20, 0x00	; 0
     3be:	61 e0       	ldi	r22, 0x01	; 1
     3c0:	8c e2       	ldi	r24, 0x2C	; 44
     3c2:	54 d1       	rcall	.+680    	; 0x66c <mcp_bitModify>
     3c4:	ba 82       	std	Y+2, r11	; 0x02
     3c6:	a9 82       	std	Y+1, r10	; 0x01
     3c8:	8b 82       	std	Y+3, r8	; 0x03
     3ca:	8b e0       	ldi	r24, 0x0B	; 11
     3cc:	fe 01       	movw	r30, r28
     3ce:	31 96       	adiw	r30, 0x01	; 1
     3d0:	d6 01       	movw	r26, r12
     3d2:	01 90       	ld	r0, Z+
     3d4:	0d 92       	st	X+, r0
     3d6:	8a 95       	dec	r24
     3d8:	e1 f7       	brne	.-8      	; 0x3d2 <can_read+0x9c>
     3da:	c6 01       	movw	r24, r12
     3dc:	2b 96       	adiw	r28, 0x0b	; 11
     3de:	0f b6       	in	r0, 0x3f	; 63
     3e0:	f8 94       	cli
     3e2:	de bf       	out	0x3e, r29	; 62
     3e4:	0f be       	out	0x3f, r0	; 63
     3e6:	cd bf       	out	0x3d, r28	; 61
     3e8:	df 91       	pop	r29
     3ea:	cf 91       	pop	r28
     3ec:	1f 91       	pop	r17
     3ee:	0f 91       	pop	r16
     3f0:	ff 90       	pop	r15
     3f2:	ef 90       	pop	r14
     3f4:	df 90       	pop	r13
     3f6:	cf 90       	pop	r12
     3f8:	bf 90       	pop	r11
     3fa:	af 90       	pop	r10
     3fc:	9f 90       	pop	r9
     3fe:	8f 90       	pop	r8
     400:	08 95       	ret

00000402 <can_handle_solenoid_message>:
void can_handle_solenoid_message(can_message msg){
     402:	ef 92       	push	r14
     404:	ff 92       	push	r15
     406:	0f 93       	push	r16
     408:	1f 93       	push	r17
     40a:	cf 93       	push	r28
     40c:	df 93       	push	r29
     40e:	cd b7       	in	r28, 0x3d	; 61
     410:	de b7       	in	r29, 0x3e	; 62
     412:	2b 97       	sbiw	r28, 0x0b	; 11
     414:	0f b6       	in	r0, 0x3f	; 63
     416:	f8 94       	cli
     418:	de bf       	out	0x3e, r29	; 62
     41a:	0f be       	out	0x3f, r0	; 63
     41c:	cd bf       	out	0x3d, r28	; 61
     41e:	e9 82       	std	Y+1, r14	; 0x01
     420:	fa 82       	std	Y+2, r15	; 0x02
     422:	0b 83       	std	Y+3, r16	; 0x03
     424:	1c 83       	std	Y+4, r17	; 0x04
     426:	2d 83       	std	Y+5, r18	; 0x05
     428:	3e 83       	std	Y+6, r19	; 0x06
     42a:	4f 83       	std	Y+7, r20	; 0x07
     42c:	58 87       	std	Y+8, r21	; 0x08
     42e:	69 87       	std	Y+9, r22	; 0x09
     430:	7a 87       	std	Y+10, r23	; 0x0a
     432:	8b 87       	std	Y+11, r24	; 0x0b
	if(msg.data[0]){
     434:	11 23       	and	r17, r17
     436:	11 f0       	breq	.+4      	; 0x43c <can_handle_solenoid_message+0x3a>
		PORTA |= (1<<PA2); //stop relay
     438:	12 9a       	sbi	0x02, 2	; 2
     43a:	01 c0       	rjmp	.+2      	; 0x43e <can_handle_solenoid_message+0x3c>
	}
	else{
		PORTA &= ~(1<<PA2); //activate relay
     43c:	12 98       	cbi	0x02, 2	; 2
	}
}
     43e:	2b 96       	adiw	r28, 0x0b	; 11
     440:	0f b6       	in	r0, 0x3f	; 63
     442:	f8 94       	cli
     444:	de bf       	out	0x3e, r29	; 62
     446:	0f be       	out	0x3f, r0	; 63
     448:	cd bf       	out	0x3d, r28	; 61
     44a:	df 91       	pop	r29
     44c:	cf 91       	pop	r28
     44e:	1f 91       	pop	r17
     450:	0f 91       	pop	r16
     452:	ff 90       	pop	r15
     454:	ef 90       	pop	r14
     456:	08 95       	ret

00000458 <can_handle_slider_message>:

void can_handle_slider_message(can_message msg, int max_encoder_value){
     458:	4f 92       	push	r4
     45a:	5f 92       	push	r5
     45c:	6f 92       	push	r6
     45e:	7f 92       	push	r7
     460:	af 92       	push	r10
     462:	bf 92       	push	r11
     464:	cf 92       	push	r12
     466:	df 92       	push	r13
     468:	ef 92       	push	r14
     46a:	ff 92       	push	r15
     46c:	0f 93       	push	r16
     46e:	1f 93       	push	r17
     470:	cf 93       	push	r28
     472:	df 93       	push	r29
     474:	cd b7       	in	r28, 0x3d	; 61
     476:	de b7       	in	r29, 0x3e	; 62
     478:	2b 97       	sbiw	r28, 0x0b	; 11
     47a:	0f b6       	in	r0, 0x3f	; 63
     47c:	f8 94       	cli
     47e:	de bf       	out	0x3e, r29	; 62
     480:	0f be       	out	0x3f, r0	; 63
     482:	cd bf       	out	0x3d, r28	; 61
	uint8_t slider_value = msg.data[0];
		
	float r = (255 - slider_value)*(max_encoder_value/255.0);
     484:	aa 24       	eor	r10, r10
     486:	aa 94       	dec	r10
     488:	b1 2c       	mov	r11, r1
     48a:	b5 01       	movw	r22, r10
     48c:	61 1b       	sub	r22, r17
     48e:	71 09       	sbc	r23, r1
     490:	88 27       	eor	r24, r24
     492:	77 fd       	sbrc	r23, 7
     494:	80 95       	com	r24
     496:	98 2f       	mov	r25, r24
     498:	e2 d4       	rcall	.+2500   	; 0xe5e <__floatsisf>
     49a:	2b 01       	movw	r4, r22
     49c:	3c 01       	movw	r6, r24
     49e:	b6 01       	movw	r22, r12
     4a0:	88 27       	eor	r24, r24
     4a2:	77 fd       	sbrc	r23, 7
     4a4:	80 95       	com	r24
     4a6:	98 2f       	mov	r25, r24
     4a8:	da d4       	rcall	.+2484   	; 0xe5e <__floatsisf>
     4aa:	20 e0       	ldi	r18, 0x00	; 0
     4ac:	30 e0       	ldi	r19, 0x00	; 0
     4ae:	4f e7       	ldi	r20, 0x7F	; 127
     4b0:	53 e4       	ldi	r21, 0x43	; 67
     4b2:	3a d4       	rcall	.+2164   	; 0xd28 <__divsf3>
     4b4:	9b 01       	movw	r18, r22
     4b6:	ac 01       	movw	r20, r24
     4b8:	c3 01       	movw	r24, r6
     4ba:	b2 01       	movw	r22, r4
     4bc:	5c d5       	rcall	.+2744   	; 0xf76 <__mulsf3>
     4be:	2b 01       	movw	r4, r22
     4c0:	3c 01       	movw	r6, r24
	float y = motor_encoder_read();
     4c2:	30 d1       	rcall	.+608    	; 0x724 <motor_encoder_read>
     4c4:	bc 01       	movw	r22, r24
     4c6:	88 27       	eor	r24, r24
     4c8:	77 fd       	sbrc	r23, 7
     4ca:	80 95       	com	r24
     4cc:	98 2f       	mov	r25, r24
     4ce:	c7 d4       	rcall	.+2446   	; 0xe5e <__floatsisf>
     4d0:	9b 01       	movw	r18, r22
     4d2:	ac 01       	movw	r20, r24
	float u = pid_generate(r, y, 0.01) / ((max_encoder_value+1)/255);
     4d4:	1a e0       	ldi	r17, 0x0A	; 10
     4d6:	e1 2e       	mov	r14, r17
     4d8:	17 ed       	ldi	r17, 0xD7	; 215
     4da:	f1 2e       	mov	r15, r17
     4dc:	03 e2       	ldi	r16, 0x23	; 35
     4de:	1c e3       	ldi	r17, 0x3C	; 60
     4e0:	c3 01       	movw	r24, r6
     4e2:	b2 01       	movw	r22, r4
     4e4:	ed d1       	rcall	.+986    	; 0x8c0 <pid_generate>
     4e6:	2b 01       	movw	r4, r22
     4e8:	3c 01       	movw	r6, r24
     4ea:	c6 01       	movw	r24, r12
     4ec:	01 96       	adiw	r24, 0x01	; 1
     4ee:	b5 01       	movw	r22, r10
     4f0:	0e 94 a5 0b 	call	0x174a	; 0x174a <__divmodhi4>
     4f4:	88 27       	eor	r24, r24
     4f6:	77 fd       	sbrc	r23, 7
     4f8:	80 95       	com	r24
     4fa:	98 2f       	mov	r25, r24
     4fc:	b0 d4       	rcall	.+2400   	; 0xe5e <__floatsisf>
     4fe:	9b 01       	movw	r18, r22
     500:	ac 01       	movw	r20, r24
     502:	c3 01       	movw	r24, r6
     504:	b2 01       	movw	r22, r4
     506:	10 d4       	rcall	.+2080   	; 0xd28 <__divsf3>
				
	motor_speed(u);
     508:	77 d4       	rcall	.+2286   	; 0xdf8 <__fixsfsi>
     50a:	cb 01       	movw	r24, r22
     50c:	db d0       	rcall	.+438    	; 0x6c4 <motor_speed>
}
     50e:	2b 96       	adiw	r28, 0x0b	; 11
     510:	0f b6       	in	r0, 0x3f	; 63
     512:	f8 94       	cli
     514:	de bf       	out	0x3e, r29	; 62
     516:	0f be       	out	0x3f, r0	; 63
     518:	cd bf       	out	0x3d, r28	; 61
     51a:	df 91       	pop	r29
     51c:	cf 91       	pop	r28
     51e:	1f 91       	pop	r17
     520:	0f 91       	pop	r16
     522:	ff 90       	pop	r15
     524:	ef 90       	pop	r14
     526:	df 90       	pop	r13
     528:	cf 90       	pop	r12
     52a:	bf 90       	pop	r11
     52c:	af 90       	pop	r10
     52e:	7f 90       	pop	r7
     530:	6f 90       	pop	r6
     532:	5f 90       	pop	r5
     534:	4f 90       	pop	r4
     536:	08 95       	ret

00000538 <can_handle_message>:

void can_handle_message(can_message msg, int max_encoder_value){
     538:	cf 92       	push	r12
     53a:	df 92       	push	r13
     53c:	ef 92       	push	r14
     53e:	ff 92       	push	r15
     540:	0f 93       	push	r16
     542:	1f 93       	push	r17
     544:	cf 93       	push	r28
     546:	df 93       	push	r29
     548:	cd b7       	in	r28, 0x3d	; 61
     54a:	de b7       	in	r29, 0x3e	; 62
     54c:	2b 97       	sbiw	r28, 0x0b	; 11
     54e:	0f b6       	in	r0, 0x3f	; 63
     550:	f8 94       	cli
     552:	de bf       	out	0x3e, r29	; 62
     554:	0f be       	out	0x3f, r0	; 63
     556:	cd bf       	out	0x3d, r28	; 61
     558:	e9 82       	std	Y+1, r14	; 0x01
     55a:	fa 82       	std	Y+2, r15	; 0x02
     55c:	0b 83       	std	Y+3, r16	; 0x03
     55e:	1c 83       	std	Y+4, r17	; 0x04
     560:	2d 83       	std	Y+5, r18	; 0x05
     562:	3e 83       	std	Y+6, r19	; 0x06
     564:	4f 83       	std	Y+7, r20	; 0x07
     566:	58 87       	std	Y+8, r21	; 0x08
     568:	69 87       	std	Y+9, r22	; 0x09
     56a:	7a 87       	std	Y+10, r23	; 0x0a
     56c:	8b 87       	std	Y+11, r24	; 0x0b
	switch(msg.id){
     56e:	89 81       	ldd	r24, Y+1	; 0x01
     570:	9a 81       	ldd	r25, Y+2	; 0x02
     572:	87 37       	cpi	r24, 0x77	; 119
     574:	91 05       	cpc	r25, r1
     576:	51 f0       	breq	.+20     	; 0x58c <can_handle_message+0x54>
     578:	88 38       	cpi	r24, 0x88	; 136
     57a:	91 05       	cpc	r25, r1
     57c:	a1 f0       	breq	.+40     	; 0x5a6 <can_handle_message+0x6e>
     57e:	85 35       	cpi	r24, 0x55	; 85
     580:	91 05       	cpc	r25, r1
     582:	e9 f4       	brne	.+58     	; 0x5be <can_handle_message+0x86>
	}
	printf("\n");
}

void can_handle_joystick_message(can_message msg){
	pwm_set_servo(msg.data[0]);
     584:	81 2f       	mov	r24, r17
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	65 d2       	rcall	.+1226   	; 0xa54 <pwm_set_servo>
     58a:	19 c0       	rjmp	.+50     	; 0x5be <can_handle_message+0x86>
		case MCP_JOYSTICK_MESSAGE:
			can_handle_joystick_message(msg);
			break;
		
		case MCP_SOLENOID_MESSAGE:
			can_handle_solenoid_message(msg);
     58c:	e9 80       	ldd	r14, Y+1	; 0x01
     58e:	fa 80       	ldd	r15, Y+2	; 0x02
     590:	0b 81       	ldd	r16, Y+3	; 0x03
     592:	1c 81       	ldd	r17, Y+4	; 0x04
     594:	2d 81       	ldd	r18, Y+5	; 0x05
     596:	3e 81       	ldd	r19, Y+6	; 0x06
     598:	4f 81       	ldd	r20, Y+7	; 0x07
     59a:	58 85       	ldd	r21, Y+8	; 0x08
     59c:	69 85       	ldd	r22, Y+9	; 0x09
     59e:	7a 85       	ldd	r23, Y+10	; 0x0a
     5a0:	8b 85       	ldd	r24, Y+11	; 0x0b
     5a2:	2f df       	rcall	.-418    	; 0x402 <can_handle_solenoid_message>
			break;
     5a4:	0c c0       	rjmp	.+24     	; 0x5be <can_handle_message+0x86>
			
		case MCP_SLIDER_MESSAGE:
			can_handle_slider_message(msg, max_encoder_value);
     5a6:	e9 80       	ldd	r14, Y+1	; 0x01
     5a8:	fa 80       	ldd	r15, Y+2	; 0x02
     5aa:	0b 81       	ldd	r16, Y+3	; 0x03
     5ac:	1c 81       	ldd	r17, Y+4	; 0x04
     5ae:	2d 81       	ldd	r18, Y+5	; 0x05
     5b0:	3e 81       	ldd	r19, Y+6	; 0x06
     5b2:	4f 81       	ldd	r20, Y+7	; 0x07
     5b4:	58 85       	ldd	r21, Y+8	; 0x08
     5b6:	69 85       	ldd	r22, Y+9	; 0x09
     5b8:	7a 85       	ldd	r23, Y+10	; 0x0a
     5ba:	8b 85       	ldd	r24, Y+11	; 0x0b
     5bc:	4d df       	rcall	.-358    	; 0x458 <can_handle_slider_message>
			break;

	}
}
     5be:	2b 96       	adiw	r28, 0x0b	; 11
     5c0:	0f b6       	in	r0, 0x3f	; 63
     5c2:	f8 94       	cli
     5c4:	de bf       	out	0x3e, r29	; 62
     5c6:	0f be       	out	0x3f, r0	; 63
     5c8:	cd bf       	out	0x3d, r28	; 61
     5ca:	df 91       	pop	r29
     5cc:	cf 91       	pop	r28
     5ce:	1f 91       	pop	r17
     5d0:	0f 91       	pop	r16
     5d2:	ff 90       	pop	r15
     5d4:	ef 90       	pop	r14
     5d6:	df 90       	pop	r13
     5d8:	cf 90       	pop	r12
     5da:	08 95       	ret

000005dc <dac_initialize>:
#include <stdint.h>

#define MAX520_TWI_ADDR_BASE 0b01010000
static uint8_t twi_address = 0x00;

void dac_initialize(uint8_t MAX520_addr){
     5dc:	cf 93       	push	r28
     5de:	c8 2f       	mov	r28, r24
	TWI_Master_Initialise();
     5e0:	70 d2       	rcall	.+1248   	; 0xac2 <TWI_Master_Initialise>
	sei();
     5e2:	78 94       	sei
	
	twi_address = MAX520_addr;
     5e4:	c0 93 8e 02 	sts	0x028E, r28
}	
     5e8:	cf 91       	pop	r28
     5ea:	08 95       	ret

000005ec <dac_write>:


void dac_write(uint8_t channel, uint8_t val){
     5ec:	cf 93       	push	r28
     5ee:	df 93       	push	r29
     5f0:	00 d0       	rcall	.+0      	; 0x5f2 <dac_write+0x6>
     5f2:	cd b7       	in	r28, 0x3d	; 61
     5f4:	de b7       	in	r29, 0x3e	; 62
	uint8_t message[3] = {	MAX520_TWI_ADDR_BASE | ((twi_address & 0x07) << 1), //Set address
     5f6:	90 91 8e 02 	lds	r25, 0x028E
     5fa:	97 70       	andi	r25, 0x07	; 7
     5fc:	99 0f       	add	r25, r25
     5fe:	90 65       	ori	r25, 0x50	; 80
     600:	99 83       	std	Y+1, r25	; 0x01
     602:	87 70       	andi	r24, 0x07	; 7
     604:	8a 83       	std	Y+2, r24	; 0x02
     606:	6b 83       	std	Y+3, r22	; 0x03
							channel & 0x07, //Channel no higher than 0x07
							val		};
							
	TWI_Start_Transceiver_With_Data(message, 3);
     608:	63 e0       	ldi	r22, 0x03	; 3
     60a:	ce 01       	movw	r24, r28
     60c:	01 96       	adiw	r24, 0x01	; 1
     60e:	63 d2       	rcall	.+1222   	; 0xad6 <TWI_Start_Transceiver_With_Data>
     610:	0f 90       	pop	r0
     612:	0f 90       	pop	r0
     614:	0f 90       	pop	r0
     616:	df 91       	pop	r29
     618:	cf 91       	pop	r28
     61a:	08 95       	ret

0000061c <new_score>:
	can_message msg;
	msg = new_can_message(MCP_GAME_SCORE_MESSAGE, 1, &score->score);
	can_write(&msg, MCP_TXB0CTRL);
}

game_score new_score(uint8_t antallMaalinger, uint16_t sum, uint8_t boolState, uint8_t val){
     61c:	cf 93       	push	r28
     61e:	df 93       	push	r29
     620:	00 d0       	rcall	.+0      	; 0x622 <new_score+0x6>
     622:	1f 92       	push	r1
     624:	1f 92       	push	r1
     626:	cd b7       	in	r28, 0x3d	; 61
     628:	de b7       	in	r29, 0x3e	; 62
     62a:	36 2f       	mov	r19, r22
     62c:	54 2f       	mov	r21, r20
     62e:	62 2f       	mov	r22, r18
	score.antallMaalinger = antallMaalinger;
	score.sum = sum;
	score.boolState = boolState;
	score.score = val;
	
	return score;
     630:	47 2f       	mov	r20, r23
     632:	28 2f       	mov	r18, r24
     634:	70 e0       	ldi	r23, 0x00	; 0
     636:	80 e0       	ldi	r24, 0x00	; 0
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	0f 90       	pop	r0
     63c:	0f 90       	pop	r0
     63e:	0f 90       	pop	r0
     640:	0f 90       	pop	r0
     642:	0f 90       	pop	r0
     644:	df 91       	pop	r29
     646:	cf 91       	pop	r28
     648:	08 95       	ret

0000064a <mcp_read>:
	SPI_transmit(MCP_READ_STATUS);
	uint8_t status = SPI_transmit(0x00);
	PORTB |= (1<< MCP_CS);
	
	return status;
}
     64a:	cf 93       	push	r28
     64c:	c8 2f       	mov	r28, r24
     64e:	28 98       	cbi	0x05, 0	; 5
     650:	83 e0       	ldi	r24, 0x03	; 3
     652:	31 d2       	rcall	.+1122   	; 0xab6 <SPI_transmit>
     654:	8c 2f       	mov	r24, r28
     656:	2f d2       	rcall	.+1118   	; 0xab6 <SPI_transmit>
     658:	80 e0       	ldi	r24, 0x00	; 0
     65a:	2d d2       	rcall	.+1114   	; 0xab6 <SPI_transmit>
     65c:	28 9a       	sbi	0x05, 0	; 5
     65e:	cf 91       	pop	r28
     660:	08 95       	ret

00000662 <mcp_reset>:
     662:	28 98       	cbi	0x05, 0	; 5
     664:	80 ec       	ldi	r24, 0xC0	; 192
     666:	27 d2       	rcall	.+1102   	; 0xab6 <SPI_transmit>
     668:	28 9a       	sbi	0x05, 0	; 5
     66a:	08 95       	ret

0000066c <mcp_bitModify>:
     66c:	1f 93       	push	r17
     66e:	cf 93       	push	r28
     670:	df 93       	push	r29
     672:	18 2f       	mov	r17, r24
     674:	d6 2f       	mov	r29, r22
     676:	c4 2f       	mov	r28, r20
     678:	28 98       	cbi	0x05, 0	; 5
     67a:	85 e0       	ldi	r24, 0x05	; 5
     67c:	1c d2       	rcall	.+1080   	; 0xab6 <SPI_transmit>
     67e:	81 2f       	mov	r24, r17
     680:	1a d2       	rcall	.+1076   	; 0xab6 <SPI_transmit>
     682:	8d 2f       	mov	r24, r29
     684:	18 d2       	rcall	.+1072   	; 0xab6 <SPI_transmit>
     686:	8c 2f       	mov	r24, r28
     688:	16 d2       	rcall	.+1068   	; 0xab6 <SPI_transmit>
     68a:	28 9a       	sbi	0x05, 0	; 5
     68c:	df 91       	pop	r29
     68e:	cf 91       	pop	r28
     690:	1f 91       	pop	r17
     692:	08 95       	ret

00000694 <mcp_init>:

void mcp_init(void){
	SPI_masterInit();
     694:	0a d2       	rcall	.+1044   	; 0xaaa <SPI_masterInit>
	mcp_reset();
     696:	e5 cf       	rjmp	.-54     	; 0x662 <mcp_reset>
     698:	08 95       	ret

0000069a <motor_encoder_reset>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     69a:	8e 98       	cbi	0x11, 6	; 17
     69c:	8a e6       	ldi	r24, 0x6A	; 106
     69e:	8a 95       	dec	r24
     6a0:	f1 f7       	brne	.-4      	; 0x69e <motor_encoder_reset+0x4>
     6a2:	00 c0       	rjmp	.+0      	; 0x6a4 <motor_encoder_reset+0xa>
     6a4:	8e 9a       	sbi	0x11, 6	; 17
     6a6:	08 95       	ret

000006a8 <motor_init>:
     6a8:	80 b3       	in	r24, 0x10	; 16
     6aa:	88 6f       	ori	r24, 0xF8	; 248
     6ac:	80 bb       	out	0x10, r24	; 16
     6ae:	10 92 07 01 	sts	0x0107, r1
     6b2:	8c 9a       	sbi	0x11, 4	; 17
     6b4:	f2 cf       	rjmp	.-28     	; 0x69a <motor_encoder_reset>
     6b6:	08 95       	ret

000006b8 <motor_direction>:
     6b8:	89 2b       	or	r24, r25
     6ba:	11 f0       	breq	.+4      	; 0x6c0 <motor_direction+0x8>
     6bc:	8b 98       	cbi	0x11, 3	; 17
     6be:	08 95       	ret
     6c0:	8b 9a       	sbi	0x11, 3	; 17
     6c2:	08 95       	ret

000006c4 <motor_speed>:
     6c4:	cf 93       	push	r28
     6c6:	df 93       	push	r29
     6c8:	ec 01       	movw	r28, r24
     6ca:	18 16       	cp	r1, r24
     6cc:	19 06       	cpc	r1, r25
     6ce:	24 f4       	brge	.+8      	; 0x6d8 <motor_speed+0x14>
     6d0:	80 e0       	ldi	r24, 0x00	; 0
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	f1 df       	rcall	.-30     	; 0x6b8 <motor_direction>
     6d6:	08 c0       	rjmp	.+16     	; 0x6e8 <motor_speed+0x24>
     6d8:	81 e0       	ldi	r24, 0x01	; 1
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	ed df       	rcall	.-38     	; 0x6b8 <motor_direction>
     6de:	dd 23       	and	r29, r29
     6e0:	1c f4       	brge	.+6      	; 0x6e8 <motor_speed+0x24>
     6e2:	d1 95       	neg	r29
     6e4:	c1 95       	neg	r28
     6e6:	d1 09       	sbc	r29, r1
     6e8:	be 01       	movw	r22, r28
     6ea:	cf 3f       	cpi	r28, 0xFF	; 255
     6ec:	d1 05       	cpc	r29, r1
     6ee:	19 f0       	breq	.+6      	; 0x6f6 <motor_speed+0x32>
     6f0:	14 f0       	brlt	.+4      	; 0x6f6 <motor_speed+0x32>
     6f2:	6f ef       	ldi	r22, 0xFF	; 255
     6f4:	70 e0       	ldi	r23, 0x00	; 0
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	79 df       	rcall	.-270    	; 0x5ec <dac_write>
     6fa:	df 91       	pop	r29
     6fc:	cf 91       	pop	r28
     6fe:	08 95       	ret

00000700 <reverse>:
	_delay_ms(500);

}

uint8_t reverse(uint8_t x){
	x = (((x & 0xaa) >> 1) | ((x & 0x55) << 1));
     700:	28 2f       	mov	r18, r24
     702:	25 75       	andi	r18, 0x55	; 85
     704:	22 0f       	add	r18, r18
     706:	98 2f       	mov	r25, r24
     708:	9a 7a       	andi	r25, 0xAA	; 170
     70a:	96 95       	lsr	r25
     70c:	92 2b       	or	r25, r18
	x = (((x & 0xcc) >> 2) | ((x & 0x33) << 2));
     70e:	29 2f       	mov	r18, r25
     710:	23 73       	andi	r18, 0x33	; 51
     712:	22 0f       	add	r18, r18
     714:	22 0f       	add	r18, r18
     716:	89 2f       	mov	r24, r25
     718:	8c 7c       	andi	r24, 0xCC	; 204
     71a:	86 95       	lsr	r24
     71c:	86 95       	lsr	r24
     71e:	82 2b       	or	r24, r18
	x = (((x & 0xf0) >> 4) | ((x & 0x0f) << 4));
	return x;
}
     720:	82 95       	swap	r24
     722:	08 95       	ret

00000724 <motor_encoder_read>:
	PORTF |= (1 << MOTOR_EN);
	motor_encoder_reset();
	
}

int16_t motor_encoder_read(void){
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
	uint16_t data;
	
	//Enable output and send high byte on PORT K
	PORTF &=	~((1 << MOTOR_OE) |
     728:	81 b3       	in	r24, 0x11	; 17
     72a:	8f 75       	andi	r24, 0x5F	; 95
     72c:	81 bb       	out	0x11, r24	; 17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     72e:	2a e6       	ldi	r18, 0x6A	; 106
     730:	2a 95       	dec	r18
     732:	f1 f7       	brne	.-4      	; 0x730 <motor_encoder_read+0xc>
     734:	00 c0       	rjmp	.+0      	; 0x736 <motor_encoder_read+0x12>
			(1 << MOTOR_SEL));
	_delay_us(20);
	data = (reverse(PINK) << 8);
     736:	80 91 06 01 	lds	r24, 0x0106
     73a:	e2 df       	rcall	.-60     	; 0x700 <reverse>
     73c:	c8 2f       	mov	r28, r24
     73e:	d0 e0       	ldi	r29, 0x00	; 0
     740:	dc 2f       	mov	r29, r28
     742:	cc 27       	eor	r28, r28
	
	//Send low byte on PORT K
	PORTF |= (1 << MOTOR_SEL);
     744:	8d 9a       	sbi	0x11, 5	; 17
     746:	3a e6       	ldi	r19, 0x6A	; 106
     748:	3a 95       	dec	r19
     74a:	f1 f7       	brne	.-4      	; 0x748 <motor_encoder_read+0x24>
     74c:	00 c0       	rjmp	.+0      	; 0x74e <motor_encoder_read+0x2a>
	_delay_us(20);
	data += reverse(PINK);
     74e:	80 91 06 01 	lds	r24, 0x0106
     752:	d6 df       	rcall	.-84     	; 0x700 <reverse>
	
	//Toggle reset and disable output
	PORTF |= (1 << MOTOR_OE);
     754:	8f 9a       	sbi	0x11, 7	; 17
	
	return data;
}
     756:	9e 01       	movw	r18, r28
     758:	28 0f       	add	r18, r24
     75a:	31 1d       	adc	r19, r1
     75c:	c9 01       	movw	r24, r18
     75e:	df 91       	pop	r29
     760:	cf 91       	pop	r28
     762:	08 95       	ret

00000764 <main>:
#include "pid.h"

float max_encoder_value;

int main(void)
{
     764:	cf 93       	push	r28
     766:	df 93       	push	r29
     768:	cd b7       	in	r28, 0x3d	; 61
     76a:	de b7       	in	r29, 0x3e	; 62
     76c:	60 97       	sbiw	r28, 0x10	; 16
     76e:	0f b6       	in	r0, 0x3f	; 63
     770:	f8 94       	cli
     772:	de bf       	out	0x3e, r29	; 62
     774:	0f be       	out	0x3f, r0	; 63
     776:	cd bf       	out	0x3d, r28	; 61
	sei();
     778:	78 94       	sei
	USART_Init(MYUBRR);
     77a:	87 e6       	ldi	r24, 0x67	; 103
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	50 d2       	rcall	.+1184   	; 0xc20 <USART_Init>
	fdevopen((int (*)(char,  struct __file *))USART_Transmit, (int (*)(struct __file *))USART_Receive);
     780:	67 e2       	ldi	r22, 0x27	; 39
     782:	76 e0       	ldi	r23, 0x06	; 6
     784:	8f e1       	ldi	r24, 0x1F	; 31
     786:	96 e0       	ldi	r25, 0x06	; 6
     788:	0e 94 cf 0c 	call	0x199e	; 0x199e <fdevopen>
	printf("UART setup done\n");
     78c:	87 e0       	ldi	r24, 0x07	; 7
     78e:	92 e0       	ldi	r25, 0x02	; 2
     790:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <puts>
	can_init();
     794:	a8 dd       	rcall	.-1200   	; 0x2e6 <can_init>
	printf("CAN setup done\n");
     796:	87 e1       	ldi	r24, 0x17	; 23
     798:	92 e0       	ldi	r25, 0x02	; 2
     79a:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <puts>
	pwm_init();
     79e:	42 d1       	rcall	.+644    	; 0xa24 <pwm_init>
	printf("PWM setup done\n");
     7a0:	86 e2       	ldi	r24, 0x26	; 38
     7a2:	92 e0       	ldi	r25, 0x02	; 2
     7a4:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <puts>
	adc_init();
     7a8:	90 dd       	rcall	.-1248   	; 0x2ca <adc_init>
	printf("ADC setup done\n");
     7aa:	85 e3       	ldi	r24, 0x35	; 53
     7ac:	92 e0       	ldi	r25, 0x02	; 2
     7ae:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <puts>
	motor_init();
     7b2:	7a df       	rcall	.-268    	; 0x6a8 <motor_init>
	printf("Motor setup done\n");
     7b4:	84 e4       	ldi	r24, 0x44	; 68
     7b6:	92 e0       	ldi	r25, 0x02	; 2
     7b8:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <puts>
	dac_initialize(0b111);
     7bc:	87 e0       	ldi	r24, 0x07	; 7
     7be:	0e df       	rcall	.-484    	; 0x5dc <dac_initialize>
	printf("DAC setup done\n");
     7c0:	85 e5       	ldi	r24, 0x55	; 85
     7c2:	92 e0       	ldi	r25, 0x02	; 2
     7c4:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <puts>
	pid_init(-1.0, -2.0, -0.0);
     7c8:	e1 2c       	mov	r14, r1
     7ca:	f1 2c       	mov	r15, r1
     7cc:	00 e0       	ldi	r16, 0x00	; 0
     7ce:	10 e8       	ldi	r17, 0x80	; 128
     7d0:	20 e0       	ldi	r18, 0x00	; 0
     7d2:	30 e0       	ldi	r19, 0x00	; 0
     7d4:	40 e0       	ldi	r20, 0x00	; 0
     7d6:	50 ec       	ldi	r21, 0xC0	; 192
     7d8:	60 e0       	ldi	r22, 0x00	; 0
     7da:	70 e0       	ldi	r23, 0x00	; 0
     7dc:	80 e8       	ldi	r24, 0x80	; 128
     7de:	9f eb       	ldi	r25, 0xBF	; 191
     7e0:	36 d0       	rcall	.+108    	; 0x84e <pid_init>
	printf("Initialization done\n");
     7e2:	84 e6       	ldi	r24, 0x64	; 100
     7e4:	92 e0       	ldi	r25, 0x02	; 2
     7e6:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <puts>
	
	DDRA |=(1<<PA2); //for solenoid
     7ea:	0a 9a       	sbi	0x01, 2	; 1
	can_message msg = {0};
     7ec:	fe 01       	movw	r30, r28
     7ee:	31 96       	adiw	r30, 0x01	; 1
     7f0:	8b e0       	ldi	r24, 0x0B	; 11
     7f2:	df 01       	movw	r26, r30
     7f4:	1d 92       	st	X+, r1
     7f6:	8a 95       	dec	r24
     7f8:	e9 f7       	brne	.-6      	; 0x7f4 <main+0x90>
	game_score score = new_score(0, 0, 0, 0);
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	40 e0       	ldi	r20, 0x00	; 0
     7fe:	60 e0       	ldi	r22, 0x00	; 0
     800:	70 e0       	ldi	r23, 0x00	; 0
     802:	80 e0       	ldi	r24, 0x00	; 0
     804:	0b df       	rcall	.-490    	; 0x61c <new_score>
     806:	2c 87       	std	Y+12, r18	; 0x0c
     808:	3d 87       	std	Y+13, r19	; 0x0d
     80a:	4e 87       	std	Y+14, r20	; 0x0e
     80c:	5f 87       	std	Y+15, r21	; 0x0f
     80e:	68 8b       	std	Y+16, r22	; 0x10
	int max_encoder_value = pid_find_max_encoder_value();
     810:	d6 d0       	rcall	.+428    	; 0x9be <pid_find_max_encoder_value>
     812:	5c 01       	movw	r10, r24
	//printf("Max encoder value: %d\n", max_encoder_value);
	motor_speed(100);
     814:	84 e6       	ldi	r24, 0x64	; 100
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	55 df       	rcall	.-342    	; 0x6c4 <motor_speed>
	while(1)
	{
		if(can_pollInterrupt()){
     81a:	77 dd       	rcall	.-1298   	; 0x30a <can_pollInterrupt>
     81c:	88 23       	and	r24, r24
     81e:	19 f0       	breq	.+6      	; 0x826 <main+0xc2>
			msg = can_read();
     820:	ce 01       	movw	r24, r28
     822:	01 96       	adiw	r24, 0x01	; 1
     824:	88 dd       	rcall	.-1264   	; 0x336 <can_read>
		}
		
		can_handle_message(msg, max_encoder_value);
     826:	65 01       	movw	r12, r10
     828:	e9 80       	ldd	r14, Y+1	; 0x01
     82a:	fa 80       	ldd	r15, Y+2	; 0x02
     82c:	0b 81       	ldd	r16, Y+3	; 0x03
     82e:	1c 81       	ldd	r17, Y+4	; 0x04
     830:	2d 81       	ldd	r18, Y+5	; 0x05
     832:	3e 81       	ldd	r19, Y+6	; 0x06
     834:	4f 81       	ldd	r20, Y+7	; 0x07
     836:	58 85       	ldd	r21, Y+8	; 0x08
     838:	69 85       	ldd	r22, Y+9	; 0x09
     83a:	7a 85       	ldd	r23, Y+10	; 0x0a
     83c:	8b 85       	ldd	r24, Y+11	; 0x0b
     83e:	7c de       	rcall	.-776    	; 0x538 <can_handle_message>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     840:	8f e3       	ldi	r24, 0x3F	; 63
     842:	9c e9       	ldi	r25, 0x9C	; 156
     844:	01 97       	sbiw	r24, 0x01	; 1
     846:	f1 f7       	brne	.-4      	; 0x844 <main+0xe0>
     848:	00 c0       	rjmp	.+0      	; 0x84a <main+0xe6>
     84a:	00 00       	nop
     84c:	e6 cf       	rjmp	.-52     	; 0x81a <main+0xb6>

0000084e <pid_init>:

float reference;
float integral;
float prev_error;

void pid_init(float _kp, float _ki, float _kd){
     84e:	ef 92       	push	r14
     850:	ff 92       	push	r15
     852:	0f 93       	push	r16
     854:	1f 93       	push	r17
	kp = _kp;
     856:	60 93 aa 02 	sts	0x02AA, r22
     85a:	70 93 ab 02 	sts	0x02AB, r23
     85e:	80 93 ac 02 	sts	0x02AC, r24
     862:	90 93 ad 02 	sts	0x02AD, r25
	ki = _ki;
     866:	20 93 9e 02 	sts	0x029E, r18
     86a:	30 93 9f 02 	sts	0x029F, r19
     86e:	40 93 a0 02 	sts	0x02A0, r20
     872:	50 93 a1 02 	sts	0x02A1, r21
	kd = _kd;
     876:	e0 92 96 02 	sts	0x0296, r14
     87a:	f0 92 97 02 	sts	0x0297, r15
     87e:	00 93 98 02 	sts	0x0298, r16
     882:	10 93 99 02 	sts	0x0299, r17
	
	reference	= 0;
     886:	10 92 9a 02 	sts	0x029A, r1
     88a:	10 92 9b 02 	sts	0x029B, r1
     88e:	10 92 9c 02 	sts	0x029C, r1
     892:	10 92 9d 02 	sts	0x029D, r1
	integral	= 0;
     896:	10 92 a6 02 	sts	0x02A6, r1
     89a:	10 92 a7 02 	sts	0x02A7, r1
     89e:	10 92 a8 02 	sts	0x02A8, r1
     8a2:	10 92 a9 02 	sts	0x02A9, r1
	prev_error	= 0;
     8a6:	10 92 a2 02 	sts	0x02A2, r1
     8aa:	10 92 a3 02 	sts	0x02A3, r1
     8ae:	10 92 a4 02 	sts	0x02A4, r1
     8b2:	10 92 a5 02 	sts	0x02A5, r1

}
     8b6:	1f 91       	pop	r17
     8b8:	0f 91       	pop	r16
     8ba:	ff 90       	pop	r15
     8bc:	ef 90       	pop	r14
     8be:	08 95       	ret

000008c0 <pid_generate>:


float pid_generate(float r, float y, float dt){
     8c0:	4f 92       	push	r4
     8c2:	5f 92       	push	r5
     8c4:	6f 92       	push	r6
     8c6:	7f 92       	push	r7
     8c8:	8f 92       	push	r8
     8ca:	9f 92       	push	r9
     8cc:	af 92       	push	r10
     8ce:	bf 92       	push	r11
     8d0:	cf 92       	push	r12
     8d2:	df 92       	push	r13
     8d4:	ef 92       	push	r14
     8d6:	ff 92       	push	r15
     8d8:	0f 93       	push	r16
     8da:	1f 93       	push	r17
     8dc:	27 01       	movw	r4, r14
     8de:	38 01       	movw	r6, r16
	
	float error = r - y;
     8e0:	be d1       	rcall	.+892    	; 0xc5e <__subsf3>
     8e2:	6b 01       	movw	r12, r22
     8e4:	7c 01       	movw	r14, r24
	integral += error * dt;
     8e6:	a3 01       	movw	r20, r6
     8e8:	92 01       	movw	r18, r4
     8ea:	45 d3       	rcall	.+1674   	; 0xf76 <__mulsf3>
     8ec:	20 91 a6 02 	lds	r18, 0x02A6
     8f0:	30 91 a7 02 	lds	r19, 0x02A7
     8f4:	40 91 a8 02 	lds	r20, 0x02A8
     8f8:	50 91 a9 02 	lds	r21, 0x02A9
     8fc:	b1 d1       	rcall	.+866    	; 0xc60 <__addsf3>
     8fe:	4b 01       	movw	r8, r22
     900:	5c 01       	movw	r10, r24
     902:	60 93 a6 02 	sts	0x02A6, r22
     906:	70 93 a7 02 	sts	0x02A7, r23
     90a:	80 93 a8 02 	sts	0x02A8, r24
     90e:	90 93 a9 02 	sts	0x02A9, r25
	float derivative = (error - prev_error) / dt;
     912:	20 91 a2 02 	lds	r18, 0x02A2
     916:	30 91 a3 02 	lds	r19, 0x02A3
     91a:	40 91 a4 02 	lds	r20, 0x02A4
     91e:	50 91 a5 02 	lds	r21, 0x02A5
     922:	c7 01       	movw	r24, r14
     924:	b6 01       	movw	r22, r12
     926:	9b d1       	rcall	.+822    	; 0xc5e <__subsf3>
     928:	a3 01       	movw	r20, r6
     92a:	92 01       	movw	r18, r4
     92c:	fd d1       	rcall	.+1018   	; 0xd28 <__divsf3>
     92e:	2b 01       	movw	r4, r22
     930:	3c 01       	movw	r6, r24
	
	prev_error = error;
     932:	c0 92 a2 02 	sts	0x02A2, r12
     936:	d0 92 a3 02 	sts	0x02A3, r13
     93a:	e0 92 a4 02 	sts	0x02A4, r14
     93e:	f0 92 a5 02 	sts	0x02A5, r15
	
	return kp*error + ki*integral + kd*derivative;
     942:	20 91 aa 02 	lds	r18, 0x02AA
     946:	30 91 ab 02 	lds	r19, 0x02AB
     94a:	40 91 ac 02 	lds	r20, 0x02AC
     94e:	50 91 ad 02 	lds	r21, 0x02AD
     952:	c7 01       	movw	r24, r14
     954:	b6 01       	movw	r22, r12
     956:	0f d3       	rcall	.+1566   	; 0xf76 <__mulsf3>
     958:	6b 01       	movw	r12, r22
     95a:	7c 01       	movw	r14, r24
     95c:	20 91 9e 02 	lds	r18, 0x029E
     960:	30 91 9f 02 	lds	r19, 0x029F
     964:	40 91 a0 02 	lds	r20, 0x02A0
     968:	50 91 a1 02 	lds	r21, 0x02A1
     96c:	c5 01       	movw	r24, r10
     96e:	b4 01       	movw	r22, r8
     970:	02 d3       	rcall	.+1540   	; 0xf76 <__mulsf3>
     972:	9b 01       	movw	r18, r22
     974:	ac 01       	movw	r20, r24
     976:	c7 01       	movw	r24, r14
     978:	b6 01       	movw	r22, r12
     97a:	72 d1       	rcall	.+740    	; 0xc60 <__addsf3>
     97c:	6b 01       	movw	r12, r22
     97e:	7c 01       	movw	r14, r24
     980:	20 91 96 02 	lds	r18, 0x0296
     984:	30 91 97 02 	lds	r19, 0x0297
     988:	40 91 98 02 	lds	r20, 0x0298
     98c:	50 91 99 02 	lds	r21, 0x0299
     990:	c3 01       	movw	r24, r6
     992:	b2 01       	movw	r22, r4
     994:	f0 d2       	rcall	.+1504   	; 0xf76 <__mulsf3>
     996:	9b 01       	movw	r18, r22
     998:	ac 01       	movw	r20, r24
     99a:	c7 01       	movw	r24, r14
     99c:	b6 01       	movw	r22, r12
     99e:	60 d1       	rcall	.+704    	; 0xc60 <__addsf3>
}
     9a0:	1f 91       	pop	r17
     9a2:	0f 91       	pop	r16
     9a4:	ff 90       	pop	r15
     9a6:	ef 90       	pop	r14
     9a8:	df 90       	pop	r13
     9aa:	cf 90       	pop	r12
     9ac:	bf 90       	pop	r11
     9ae:	af 90       	pop	r10
     9b0:	9f 90       	pop	r9
     9b2:	8f 90       	pop	r8
     9b4:	7f 90       	pop	r7
     9b6:	6f 90       	pop	r6
     9b8:	5f 90       	pop	r5
     9ba:	4f 90       	pop	r4
     9bc:	08 95       	ret

000009be <pid_find_max_encoder_value>:

uint16_t pid_find_max_encoder_value(void){
     9be:	cf 93       	push	r28
     9c0:	df 93       	push	r29
		uint16_t enc_val = 0, prev_enc_val = -1;
		motor_speed(75);
     9c2:	8b e4       	ldi	r24, 0x4B	; 75
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	7e de       	rcall	.-772    	; 0x6c4 <motor_speed>
		
		//Stop at left end
		while(enc_val != prev_enc_val){
			printf("In while\n");
     9c8:	88 e7       	ldi	r24, 0x78	; 120
     9ca:	92 e0       	ldi	r25, 0x02	; 2
     9cc:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <puts>
			enc_val = motor_encoder_read();
     9d0:	a9 de       	rcall	.-686    	; 0x724 <motor_encoder_read>
     9d2:	ec 01       	movw	r28, r24
     9d4:	87 ea       	ldi	r24, 0xA7	; 167
     9d6:	91 e6       	ldi	r25, 0x61	; 97
     9d8:	01 97       	sbiw	r24, 0x01	; 1
     9da:	f1 f7       	brne	.-4      	; 0x9d8 <pid_find_max_encoder_value+0x1a>
     9dc:	00 c0       	rjmp	.+0      	; 0x9de <pid_find_max_encoder_value+0x20>
     9de:	00 00       	nop
			_delay_ms(100);
			prev_enc_val = motor_encoder_read();
     9e0:	a1 de       	rcall	.-702    	; 0x724 <motor_encoder_read>
uint16_t pid_find_max_encoder_value(void){
		uint16_t enc_val = 0, prev_enc_val = -1;
		motor_speed(75);
		
		//Stop at left end
		while(enc_val != prev_enc_val){
     9e2:	c8 17       	cp	r28, r24
     9e4:	d9 07       	cpc	r29, r25
     9e6:	81 f7       	brne	.-32     	; 0x9c8 <pid_find_max_encoder_value+0xa>
			printf("In while\n");
			enc_val = motor_encoder_read();
			_delay_ms(100);
			prev_enc_val = motor_encoder_read();
		}
		printf("Out of while\n");
     9e8:	81 e8       	ldi	r24, 0x81	; 129
     9ea:	92 e0       	ldi	r25, 0x02	; 2
     9ec:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <puts>
		motor_speed(0);
     9f0:	80 e0       	ldi	r24, 0x00	; 0
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	67 de       	rcall	.-818    	; 0x6c4 <motor_speed>
		motor_encoder_reset();
     9f6:	51 de       	rcall	.-862    	; 0x69a <motor_encoder_reset>
		
		//Stop at right end and set max
		motor_speed(-75);
     9f8:	85 eb       	ldi	r24, 0xB5	; 181
     9fa:	9f ef       	ldi	r25, 0xFF	; 255
     9fc:	63 de       	rcall	.-826    	; 0x6c4 <motor_speed>
		enc_val = 0, prev_enc_val = -1;
		while(enc_val != prev_enc_val){
			enc_val = motor_encoder_read();
     9fe:	92 de       	rcall	.-732    	; 0x724 <motor_encoder_read>
     a00:	ec 01       	movw	r28, r24
     a02:	87 ea       	ldi	r24, 0xA7	; 167
     a04:	91 e6       	ldi	r25, 0x61	; 97
     a06:	01 97       	sbiw	r24, 0x01	; 1
     a08:	f1 f7       	brne	.-4      	; 0xa06 <pid_find_max_encoder_value+0x48>
     a0a:	00 c0       	rjmp	.+0      	; 0xa0c <pid_find_max_encoder_value+0x4e>
     a0c:	00 00       	nop
			_delay_ms(100);
			prev_enc_val = motor_encoder_read();
     a0e:	8a de       	rcall	.-748    	; 0x724 <motor_encoder_read>
		motor_encoder_reset();
		
		//Stop at right end and set max
		motor_speed(-75);
		enc_val = 0, prev_enc_val = -1;
		while(enc_val != prev_enc_val){
     a10:	c8 17       	cp	r28, r24
     a12:	d9 07       	cpc	r29, r25
     a14:	a1 f7       	brne	.-24     	; 0x9fe <pid_find_max_encoder_value+0x40>
			enc_val = motor_encoder_read();
			_delay_ms(100);
			prev_enc_val = motor_encoder_read();
		}
		motor_speed(0);
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	54 de       	rcall	.-856    	; 0x6c4 <motor_speed>
		
		//Max value of encoder.
		return enc_val;
     a1c:	ce 01       	movw	r24, r28
     a1e:	df 91       	pop	r29
     a20:	cf 91       	pop	r28
     a22:	08 95       	ret

00000a24 <pwm_init>:
	
	ICR3 = 312;
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     a24:	6b 9a       	sbi	0x0d, 3	; 13
     a26:	e0 e9       	ldi	r30, 0x90	; 144
     a28:	f0 e0       	ldi	r31, 0x00	; 0
     a2a:	80 81       	ld	r24, Z
     a2c:	8e 7b       	andi	r24, 0xBE	; 190
     a2e:	80 83       	st	Z, r24
     a30:	80 81       	ld	r24, Z
     a32:	82 68       	ori	r24, 0x82	; 130
     a34:	80 83       	st	Z, r24
     a36:	e1 e9       	ldi	r30, 0x91	; 145
     a38:	f0 e0       	ldi	r31, 0x00	; 0
     a3a:	80 81       	ld	r24, Z
     a3c:	8d 61       	ori	r24, 0x1D	; 29
     a3e:	80 83       	st	Z, r24
     a40:	80 81       	ld	r24, Z
     a42:	8d 7f       	andi	r24, 0xFD	; 253
     a44:	80 83       	st	Z, r24
     a46:	88 e3       	ldi	r24, 0x38	; 56
     a48:	91 e0       	ldi	r25, 0x01	; 1
     a4a:	90 93 97 00 	sts	0x0097, r25
     a4e:	80 93 96 00 	sts	0x0096, r24
     a52:	08 95       	ret

00000a54 <pwm_set_servo>:
}

void pwm_set_servo(unsigned int val){
	val = (val*19)/255 + servo_min;
     a54:	43 e1       	ldi	r20, 0x13	; 19
     a56:	48 9f       	mul	r20, r24
     a58:	90 01       	movw	r18, r0
     a5a:	49 9f       	mul	r20, r25
     a5c:	30 0d       	add	r19, r0
     a5e:	11 24       	eor	r1, r1
     a60:	a1 e8       	ldi	r26, 0x81	; 129
     a62:	b0 e8       	ldi	r27, 0x80	; 128
     a64:	8b d6       	rcall	.+3350   	; 0x177c <__umulhisi3>
     a66:	88 0f       	add	r24, r24
     a68:	89 2f       	mov	r24, r25
     a6a:	88 1f       	adc	r24, r24
     a6c:	99 0b       	sbc	r25, r25
     a6e:	91 95       	neg	r25
	if((val <= (servo_mid + 1)) && (val >= (servo_mid - 1))){
     a70:	9c 01       	movw	r18, r24
     a72:	2b 50       	subi	r18, 0x0B	; 11
     a74:	31 09       	sbc	r19, r1
     a76:	23 30       	cpi	r18, 0x03	; 3
     a78:	31 05       	cpc	r19, r1
     a7a:	38 f4       	brcc	.+14     	; 0xa8a <pwm_set_servo+0x36>
	
	ICR3 = 312;
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     a7c:	89 e1       	ldi	r24, 0x19	; 25
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	90 93 99 00 	sts	0x0099, r25
     a84:	80 93 98 00 	sts	0x0098, r24
     a88:	08 95       	ret
	val = (val*19)/255 + servo_min;
	if((val <= (servo_mid + 1)) && (val >= (servo_mid - 1))){
		pwm_set_value(servo_mid);
	}
	
	else if((val >= servo_min) && (val <= servo_max)){
     a8a:	89 31       	cpi	r24, 0x19	; 25
     a8c:	91 05       	cpc	r25, r1
     a8e:	30 f4       	brcc	.+12     	; 0xa9c <pwm_set_servo+0x48>
void pwm_set_value(unsigned int val){
	OCR3A = val;
}

void pwm_set_servo(unsigned int val){
	val = (val*19)/255 + servo_min;
     a90:	0d 96       	adiw	r24, 0x0d	; 13
	
	ICR3 = 312;
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     a92:	90 93 99 00 	sts	0x0099, r25
     a96:	80 93 98 00 	sts	0x0098, r24
     a9a:	08 95       	ret
     a9c:	89 e1       	ldi	r24, 0x19	; 25
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	90 93 99 00 	sts	0x0099, r25
     aa4:	80 93 98 00 	sts	0x0098, r24
     aa8:	08 95       	ret

00000aaa <SPI_masterInit>:
#include <stdio.h>
#include <stdlib.h>

void SPI_masterInit(void){
	/* Set MOSI and SCK output, all others input */
	DDRB = (1 << PB2)|(1 << PB1)|(1 << PB0); //0 = SS, 3 = SI, 2 = SCK
     aaa:	87 e0       	ldi	r24, 0x07	; 7
     aac:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //SO
     aae:	23 98       	cbi	0x04, 3	; 4
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     ab0:	81 e5       	ldi	r24, 0x51	; 81
     ab2:	8c bd       	out	0x2c, r24	; 44
     ab4:	08 95       	ret

00000ab6 <SPI_transmit>:
}
uint8_t SPI_transmit(char cData){
	/* Start transmission */
	SPDR = cData;
     ab6:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
     ab8:	0d b4       	in	r0, 0x2d	; 45
     aba:	07 fe       	sbrs	r0, 7
     abc:	fd cf       	rjmp	.-6      	; 0xab8 <SPI_transmit+0x2>
	return SPDR;
     abe:	8e b5       	in	r24, 0x2e	; 46
     ac0:	08 95       	ret

00000ac2 <TWI_Master_Initialise>:
		{
			msg[ i ] = TWI_buf[ i ];
		}
	}
	return( TWI_statusReg.lastTransOK );
}
     ac2:	8c e0       	ldi	r24, 0x0C	; 12
     ac4:	80 93 b8 00 	sts	0x00B8, r24
     ac8:	8f ef       	ldi	r24, 0xFF	; 255
     aca:	80 93 bb 00 	sts	0x00BB, r24
     ace:	84 e0       	ldi	r24, 0x04	; 4
     ad0:	80 93 bc 00 	sts	0x00BC, r24
     ad4:	08 95       	ret

00000ad6 <TWI_Start_Transceiver_With_Data>:
     ad6:	ec eb       	ldi	r30, 0xBC	; 188
     ad8:	f0 e0       	ldi	r31, 0x00	; 0
     ada:	20 81       	ld	r18, Z
     adc:	20 fd       	sbrc	r18, 0
     ade:	fd cf       	rjmp	.-6      	; 0xada <TWI_Start_Transceiver_With_Data+0x4>
     ae0:	60 93 91 02 	sts	0x0291, r22
     ae4:	fc 01       	movw	r30, r24
     ae6:	20 81       	ld	r18, Z
     ae8:	20 93 92 02 	sts	0x0292, r18
     aec:	20 fd       	sbrc	r18, 0
     aee:	0c c0       	rjmp	.+24     	; 0xb08 <TWI_Start_Transceiver_With_Data+0x32>
     af0:	62 30       	cpi	r22, 0x02	; 2
     af2:	50 f0       	brcs	.+20     	; 0xb08 <TWI_Start_Transceiver_With_Data+0x32>
     af4:	dc 01       	movw	r26, r24
     af6:	11 96       	adiw	r26, 0x01	; 1
     af8:	e3 e9       	ldi	r30, 0x93	; 147
     afa:	f2 e0       	ldi	r31, 0x02	; 2
     afc:	81 e0       	ldi	r24, 0x01	; 1
     afe:	9d 91       	ld	r25, X+
     b00:	91 93       	st	Z+, r25
     b02:	8f 5f       	subi	r24, 0xFF	; 255
     b04:	86 13       	cpse	r24, r22
     b06:	fb cf       	rjmp	.-10     	; 0xafe <TWI_Start_Transceiver_With_Data+0x28>
     b08:	10 92 90 02 	sts	0x0290, r1
     b0c:	88 ef       	ldi	r24, 0xF8	; 248
     b0e:	80 93 06 02 	sts	0x0206, r24
     b12:	85 ea       	ldi	r24, 0xA5	; 165
     b14:	80 93 bc 00 	sts	0x00BC, r24
     b18:	08 95       	ret

00000b1a <__vector_39>:
This function is the Interrupt Service Routine (ISR), and called when the TWI interrupt is triggered;
that is whenever a TWI event has occurred. This function should not be called directly from the main
application.
****************************************************************************/
ISR(TWI_vect)
{
     b1a:	1f 92       	push	r1
     b1c:	0f 92       	push	r0
     b1e:	0f b6       	in	r0, 0x3f	; 63
     b20:	0f 92       	push	r0
     b22:	11 24       	eor	r1, r1
     b24:	0b b6       	in	r0, 0x3b	; 59
     b26:	0f 92       	push	r0
     b28:	2f 93       	push	r18
     b2a:	3f 93       	push	r19
     b2c:	8f 93       	push	r24
     b2e:	9f 93       	push	r25
     b30:	af 93       	push	r26
     b32:	bf 93       	push	r27
     b34:	ef 93       	push	r30
     b36:	ff 93       	push	r31
	static unsigned char TWI_bufPtr;
	
	switch (TWSR)
     b38:	80 91 b9 00 	lds	r24, 0x00B9
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	fc 01       	movw	r30, r24
     b40:	38 97       	sbiw	r30, 0x08	; 8
     b42:	e1 35       	cpi	r30, 0x51	; 81
     b44:	f1 05       	cpc	r31, r1
     b46:	08 f0       	brcs	.+2      	; 0xb4a <__vector_39+0x30>
     b48:	55 c0       	rjmp	.+170    	; 0xbf4 <__vector_39+0xda>
     b4a:	ee 58       	subi	r30, 0x8E	; 142
     b4c:	ff 4f       	sbci	r31, 0xFF	; 255
     b4e:	10 c6       	rjmp	.+3104   	; 0x1770 <__tablejump2__>
	{
		case TWI_START:             // START has been transmitted
		case TWI_REP_START:         // Repeated START has been transmitted
		TWI_bufPtr = 0;                                     // Set buffer pointer to the TWI Address location
     b50:	10 92 8f 02 	sts	0x028F, r1
		case TWI_MTX_ADR_ACK:       // SLA+W has been tramsmitted and ACK received
		case TWI_MTX_DATA_ACK:      // Data byte has been tramsmitted and ACK received
		if (TWI_bufPtr < TWI_msgSize)
     b54:	e0 91 8f 02 	lds	r30, 0x028F
     b58:	80 91 91 02 	lds	r24, 0x0291
     b5c:	e8 17       	cp	r30, r24
     b5e:	70 f4       	brcc	.+28     	; 0xb7c <__vector_39+0x62>
		{
			TWDR = TWI_buf[TWI_bufPtr++];
     b60:	81 e0       	ldi	r24, 0x01	; 1
     b62:	8e 0f       	add	r24, r30
     b64:	80 93 8f 02 	sts	0x028F, r24
     b68:	f0 e0       	ldi	r31, 0x00	; 0
     b6a:	ee 56       	subi	r30, 0x6E	; 110
     b6c:	fd 4f       	sbci	r31, 0xFD	; 253
     b6e:	80 81       	ld	r24, Z
     b70:	80 93 bb 00 	sts	0x00BB, r24
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     b74:	85 e8       	ldi	r24, 0x85	; 133
     b76:	80 93 bc 00 	sts	0x00BC, r24
     b7a:	43 c0       	rjmp	.+134    	; 0xc02 <__vector_39+0xe8>
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to send byte
			(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           //
			(0<<TWWC);                                 //
		}else                    // Send STOP after last byte
		{
			TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully.
     b7c:	80 91 90 02 	lds	r24, 0x0290
     b80:	81 60       	ori	r24, 0x01	; 1
     b82:	80 93 90 02 	sts	0x0290, r24
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     b86:	84 e9       	ldi	r24, 0x94	; 148
     b88:	80 93 bc 00 	sts	0x00BC, r24
     b8c:	3a c0       	rjmp	.+116    	; 0xc02 <__vector_39+0xe8>
			(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
			(0<<TWWC);                                 //
		}
		break;
		case TWI_MRX_DATA_ACK:      // Data byte has been received and ACK tramsmitted
		TWI_buf[TWI_bufPtr++] = TWDR;
     b8e:	e0 91 8f 02 	lds	r30, 0x028F
     b92:	81 e0       	ldi	r24, 0x01	; 1
     b94:	8e 0f       	add	r24, r30
     b96:	80 93 8f 02 	sts	0x028F, r24
     b9a:	80 91 bb 00 	lds	r24, 0x00BB
     b9e:	f0 e0       	ldi	r31, 0x00	; 0
     ba0:	ee 56       	subi	r30, 0x6E	; 110
     ba2:	fd 4f       	sbci	r31, 0xFD	; 253
     ba4:	80 83       	st	Z, r24
		case TWI_MRX_ADR_ACK:       // SLA+R has been tramsmitted and ACK received
		if (TWI_bufPtr < (TWI_msgSize-1) )                  // Detect the last byte to NACK it.
     ba6:	20 91 8f 02 	lds	r18, 0x028F
     baa:	30 e0       	ldi	r19, 0x00	; 0
     bac:	80 91 91 02 	lds	r24, 0x0291
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	01 97       	sbiw	r24, 0x01	; 1
     bb4:	28 17       	cp	r18, r24
     bb6:	39 07       	cpc	r19, r25
     bb8:	24 f4       	brge	.+8      	; 0xbc2 <__vector_39+0xa8>
		{
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     bba:	85 ec       	ldi	r24, 0xC5	; 197
     bbc:	80 93 bc 00 	sts	0x00BC, r24
     bc0:	20 c0       	rjmp	.+64     	; 0xc02 <__vector_39+0xe8>
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to read next byte
			(1<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send ACK after reception
			(0<<TWWC);                                 //
		}else                    // Send NACK after next reception
		{
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     bc2:	85 e8       	ldi	r24, 0x85	; 133
     bc4:	80 93 bc 00 	sts	0x00BC, r24
     bc8:	1c c0       	rjmp	.+56     	; 0xc02 <__vector_39+0xe8>
			(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send NACK after reception
			(0<<TWWC);                                 //
		}
		break;
		case TWI_MRX_DATA_NACK:     // Data byte has been received and NACK tramsmitted
		TWI_buf[TWI_bufPtr] = TWDR;
     bca:	80 91 bb 00 	lds	r24, 0x00BB
     bce:	e0 91 8f 02 	lds	r30, 0x028F
     bd2:	f0 e0       	ldi	r31, 0x00	; 0
     bd4:	ee 56       	subi	r30, 0x6E	; 110
     bd6:	fd 4f       	sbci	r31, 0xFD	; 253
     bd8:	80 83       	st	Z, r24
		TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully.
     bda:	80 91 90 02 	lds	r24, 0x0290
     bde:	81 60       	ori	r24, 0x01	; 1
     be0:	80 93 90 02 	sts	0x0290, r24
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     be4:	84 e9       	ldi	r24, 0x94	; 148
     be6:	80 93 bc 00 	sts	0x00BC, r24
		(0<<TWIE)|(1<<TWINT)|                      // Disable TWI Interrupt and clear the flag
		(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
		(0<<TWWC);                                 //
		break;
     bea:	0b c0       	rjmp	.+22     	; 0xc02 <__vector_39+0xe8>
		case TWI_ARB_LOST:          // Arbitration lost
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     bec:	85 ea       	ldi	r24, 0xA5	; 165
     bee:	80 93 bc 00 	sts	0x00BC, r24
		(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag
		(0<<TWEA)|(1<<TWSTA)|(0<<TWSTO)|           // Initiate a (RE)START condition.
		(0<<TWWC);                                 //
		break;
     bf2:	07 c0       	rjmp	.+14     	; 0xc02 <__vector_39+0xe8>
		case TWI_MRX_ADR_NACK:      // SLA+R has been tramsmitted and NACK received
		case TWI_MTX_DATA_NACK:     // Data byte has been tramsmitted and NACK received
		//    case TWI_NO_STATE              // No relevant state information available; TWINT = ?0?
		case TWI_BUS_ERROR:         // Bus error due to an illegal START or STOP condition
		default:
		TWI_state = TWSR;                                 // Store TWSR and automatically sets clears noErrors bit.
     bf4:	80 91 b9 00 	lds	r24, 0x00B9
     bf8:	80 93 06 02 	sts	0x0206, r24
		// Reset TWI Interface
		TWCR = (1<<TWEN)|                                 // Enable TWI-interface and release TWI pins
     bfc:	84 e0       	ldi	r24, 0x04	; 4
     bfe:	80 93 bc 00 	sts	0x00BC, r24
		(0<<TWIE)|(0<<TWINT)|                      // Disable Interupt
		(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // No Signal requests
		(0<<TWWC);                                 //
	}
     c02:	ff 91       	pop	r31
     c04:	ef 91       	pop	r30
     c06:	bf 91       	pop	r27
     c08:	af 91       	pop	r26
     c0a:	9f 91       	pop	r25
     c0c:	8f 91       	pop	r24
     c0e:	3f 91       	pop	r19
     c10:	2f 91       	pop	r18
     c12:	0f 90       	pop	r0
     c14:	0b be       	out	0x3b, r0	; 59
     c16:	0f 90       	pop	r0
     c18:	0f be       	out	0x3f, r0	; 63
     c1a:	0f 90       	pop	r0
     c1c:	1f 90       	pop	r1
     c1e:	18 95       	reti

00000c20 <USART_Init>:
	_delay_ms(100);
}
void USART_Init(unsigned int ubrr)
{
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
     c20:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
     c24:	80 93 c4 00 	sts	0x00C4, r24
	
	//Enable receiver and transmitter
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
     c28:	e1 ec       	ldi	r30, 0xC1	; 193
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	80 81       	ld	r24, Z
     c2e:	88 61       	ori	r24, 0x18	; 24
     c30:	80 83       	st	Z, r24
	
	//Set frame format: 8data, 1stop bit
	UCSR0C |= (3<<UCSZ00);
     c32:	e2 ec       	ldi	r30, 0xC2	; 194
     c34:	f0 e0       	ldi	r31, 0x00	; 0
     c36:	80 81       	ld	r24, Z
     c38:	86 60       	ori	r24, 0x06	; 6
     c3a:	80 83       	st	Z, r24
     c3c:	08 95       	ret

00000c3e <USART_Transmit>:
}
void USART_Transmit(unsigned char data){
	/*Wait for empty transmit buffer*/
	while( !(UCSR0A & (1<<UDRE0)) );
     c3e:	e0 ec       	ldi	r30, 0xC0	; 192
     c40:	f0 e0       	ldi	r31, 0x00	; 0
     c42:	90 81       	ld	r25, Z
     c44:	95 ff       	sbrs	r25, 5
     c46:	fd cf       	rjmp	.-6      	; 0xc42 <USART_Transmit+0x4>
	
	/*Put data into buffer, sends the data*/
	UDR0 = data;
     c48:	80 93 c6 00 	sts	0x00C6, r24
     c4c:	08 95       	ret

00000c4e <USART_Receive>:
}
unsigned char USART_Receive(void){
	/*Wait for data to be received*/
	while( !(UCSR0A & (1<<RXC0)) );
     c4e:	e0 ec       	ldi	r30, 0xC0	; 192
     c50:	f0 e0       	ldi	r31, 0x00	; 0
     c52:	80 81       	ld	r24, Z
     c54:	88 23       	and	r24, r24
     c56:	ec f7       	brge	.-6      	; 0xc52 <USART_Receive+0x4>
	
	
	/*Get and return received data from buffer*/
	return UDR0;
     c58:	80 91 c6 00 	lds	r24, 0x00C6
     c5c:	08 95       	ret

00000c5e <__subsf3>:
     c5e:	50 58       	subi	r21, 0x80	; 128

00000c60 <__addsf3>:
     c60:	bb 27       	eor	r27, r27
     c62:	aa 27       	eor	r26, r26
     c64:	0e d0       	rcall	.+28     	; 0xc82 <__addsf3x>
     c66:	4d c1       	rjmp	.+666    	; 0xf02 <__fp_round>
     c68:	3e d1       	rcall	.+636    	; 0xee6 <__fp_pscA>
     c6a:	30 f0       	brcs	.+12     	; 0xc78 <__addsf3+0x18>
     c6c:	43 d1       	rcall	.+646    	; 0xef4 <__fp_pscB>
     c6e:	20 f0       	brcs	.+8      	; 0xc78 <__addsf3+0x18>
     c70:	31 f4       	brne	.+12     	; 0xc7e <__addsf3+0x1e>
     c72:	9f 3f       	cpi	r25, 0xFF	; 255
     c74:	11 f4       	brne	.+4      	; 0xc7a <__addsf3+0x1a>
     c76:	1e f4       	brtc	.+6      	; 0xc7e <__addsf3+0x1e>
     c78:	33 c1       	rjmp	.+614    	; 0xee0 <__fp_nan>
     c7a:	0e f4       	brtc	.+2      	; 0xc7e <__addsf3+0x1e>
     c7c:	e0 95       	com	r30
     c7e:	e7 fb       	bst	r30, 7
     c80:	29 c1       	rjmp	.+594    	; 0xed4 <__fp_inf>

00000c82 <__addsf3x>:
     c82:	e9 2f       	mov	r30, r25
     c84:	4f d1       	rcall	.+670    	; 0xf24 <__fp_split3>
     c86:	80 f3       	brcs	.-32     	; 0xc68 <__addsf3+0x8>
     c88:	ba 17       	cp	r27, r26
     c8a:	62 07       	cpc	r22, r18
     c8c:	73 07       	cpc	r23, r19
     c8e:	84 07       	cpc	r24, r20
     c90:	95 07       	cpc	r25, r21
     c92:	18 f0       	brcs	.+6      	; 0xc9a <__addsf3x+0x18>
     c94:	71 f4       	brne	.+28     	; 0xcb2 <__addsf3x+0x30>
     c96:	9e f5       	brtc	.+102    	; 0xcfe <__addsf3x+0x7c>
     c98:	67 c1       	rjmp	.+718    	; 0xf68 <__fp_zero>
     c9a:	0e f4       	brtc	.+2      	; 0xc9e <__addsf3x+0x1c>
     c9c:	e0 95       	com	r30
     c9e:	0b 2e       	mov	r0, r27
     ca0:	ba 2f       	mov	r27, r26
     ca2:	a0 2d       	mov	r26, r0
     ca4:	0b 01       	movw	r0, r22
     ca6:	b9 01       	movw	r22, r18
     ca8:	90 01       	movw	r18, r0
     caa:	0c 01       	movw	r0, r24
     cac:	ca 01       	movw	r24, r20
     cae:	a0 01       	movw	r20, r0
     cb0:	11 24       	eor	r1, r1
     cb2:	ff 27       	eor	r31, r31
     cb4:	59 1b       	sub	r21, r25
     cb6:	99 f0       	breq	.+38     	; 0xcde <__addsf3x+0x5c>
     cb8:	59 3f       	cpi	r21, 0xF9	; 249
     cba:	50 f4       	brcc	.+20     	; 0xcd0 <__addsf3x+0x4e>
     cbc:	50 3e       	cpi	r21, 0xE0	; 224
     cbe:	68 f1       	brcs	.+90     	; 0xd1a <__addsf3x+0x98>
     cc0:	1a 16       	cp	r1, r26
     cc2:	f0 40       	sbci	r31, 0x00	; 0
     cc4:	a2 2f       	mov	r26, r18
     cc6:	23 2f       	mov	r18, r19
     cc8:	34 2f       	mov	r19, r20
     cca:	44 27       	eor	r20, r20
     ccc:	58 5f       	subi	r21, 0xF8	; 248
     cce:	f3 cf       	rjmp	.-26     	; 0xcb6 <__addsf3x+0x34>
     cd0:	46 95       	lsr	r20
     cd2:	37 95       	ror	r19
     cd4:	27 95       	ror	r18
     cd6:	a7 95       	ror	r26
     cd8:	f0 40       	sbci	r31, 0x00	; 0
     cda:	53 95       	inc	r21
     cdc:	c9 f7       	brne	.-14     	; 0xcd0 <__addsf3x+0x4e>
     cde:	7e f4       	brtc	.+30     	; 0xcfe <__addsf3x+0x7c>
     ce0:	1f 16       	cp	r1, r31
     ce2:	ba 0b       	sbc	r27, r26
     ce4:	62 0b       	sbc	r22, r18
     ce6:	73 0b       	sbc	r23, r19
     ce8:	84 0b       	sbc	r24, r20
     cea:	ba f0       	brmi	.+46     	; 0xd1a <__addsf3x+0x98>
     cec:	91 50       	subi	r25, 0x01	; 1
     cee:	a1 f0       	breq	.+40     	; 0xd18 <__addsf3x+0x96>
     cf0:	ff 0f       	add	r31, r31
     cf2:	bb 1f       	adc	r27, r27
     cf4:	66 1f       	adc	r22, r22
     cf6:	77 1f       	adc	r23, r23
     cf8:	88 1f       	adc	r24, r24
     cfa:	c2 f7       	brpl	.-16     	; 0xcec <__addsf3x+0x6a>
     cfc:	0e c0       	rjmp	.+28     	; 0xd1a <__addsf3x+0x98>
     cfe:	ba 0f       	add	r27, r26
     d00:	62 1f       	adc	r22, r18
     d02:	73 1f       	adc	r23, r19
     d04:	84 1f       	adc	r24, r20
     d06:	48 f4       	brcc	.+18     	; 0xd1a <__addsf3x+0x98>
     d08:	87 95       	ror	r24
     d0a:	77 95       	ror	r23
     d0c:	67 95       	ror	r22
     d0e:	b7 95       	ror	r27
     d10:	f7 95       	ror	r31
     d12:	9e 3f       	cpi	r25, 0xFE	; 254
     d14:	08 f0       	brcs	.+2      	; 0xd18 <__addsf3x+0x96>
     d16:	b3 cf       	rjmp	.-154    	; 0xc7e <__addsf3+0x1e>
     d18:	93 95       	inc	r25
     d1a:	88 0f       	add	r24, r24
     d1c:	08 f0       	brcs	.+2      	; 0xd20 <__addsf3x+0x9e>
     d1e:	99 27       	eor	r25, r25
     d20:	ee 0f       	add	r30, r30
     d22:	97 95       	ror	r25
     d24:	87 95       	ror	r24
     d26:	08 95       	ret

00000d28 <__divsf3>:
     d28:	0c d0       	rcall	.+24     	; 0xd42 <__divsf3x>
     d2a:	eb c0       	rjmp	.+470    	; 0xf02 <__fp_round>
     d2c:	e3 d0       	rcall	.+454    	; 0xef4 <__fp_pscB>
     d2e:	40 f0       	brcs	.+16     	; 0xd40 <__divsf3+0x18>
     d30:	da d0       	rcall	.+436    	; 0xee6 <__fp_pscA>
     d32:	30 f0       	brcs	.+12     	; 0xd40 <__divsf3+0x18>
     d34:	21 f4       	brne	.+8      	; 0xd3e <__divsf3+0x16>
     d36:	5f 3f       	cpi	r21, 0xFF	; 255
     d38:	19 f0       	breq	.+6      	; 0xd40 <__divsf3+0x18>
     d3a:	cc c0       	rjmp	.+408    	; 0xed4 <__fp_inf>
     d3c:	51 11       	cpse	r21, r1
     d3e:	15 c1       	rjmp	.+554    	; 0xf6a <__fp_szero>
     d40:	cf c0       	rjmp	.+414    	; 0xee0 <__fp_nan>

00000d42 <__divsf3x>:
     d42:	f0 d0       	rcall	.+480    	; 0xf24 <__fp_split3>
     d44:	98 f3       	brcs	.-26     	; 0xd2c <__divsf3+0x4>

00000d46 <__divsf3_pse>:
     d46:	99 23       	and	r25, r25
     d48:	c9 f3       	breq	.-14     	; 0xd3c <__divsf3+0x14>
     d4a:	55 23       	and	r21, r21
     d4c:	b1 f3       	breq	.-20     	; 0xd3a <__divsf3+0x12>
     d4e:	95 1b       	sub	r25, r21
     d50:	55 0b       	sbc	r21, r21
     d52:	bb 27       	eor	r27, r27
     d54:	aa 27       	eor	r26, r26
     d56:	62 17       	cp	r22, r18
     d58:	73 07       	cpc	r23, r19
     d5a:	84 07       	cpc	r24, r20
     d5c:	38 f0       	brcs	.+14     	; 0xd6c <__divsf3_pse+0x26>
     d5e:	9f 5f       	subi	r25, 0xFF	; 255
     d60:	5f 4f       	sbci	r21, 0xFF	; 255
     d62:	22 0f       	add	r18, r18
     d64:	33 1f       	adc	r19, r19
     d66:	44 1f       	adc	r20, r20
     d68:	aa 1f       	adc	r26, r26
     d6a:	a9 f3       	breq	.-22     	; 0xd56 <__divsf3_pse+0x10>
     d6c:	33 d0       	rcall	.+102    	; 0xdd4 <__divsf3_pse+0x8e>
     d6e:	0e 2e       	mov	r0, r30
     d70:	3a f0       	brmi	.+14     	; 0xd80 <__divsf3_pse+0x3a>
     d72:	e0 e8       	ldi	r30, 0x80	; 128
     d74:	30 d0       	rcall	.+96     	; 0xdd6 <__divsf3_pse+0x90>
     d76:	91 50       	subi	r25, 0x01	; 1
     d78:	50 40       	sbci	r21, 0x00	; 0
     d7a:	e6 95       	lsr	r30
     d7c:	00 1c       	adc	r0, r0
     d7e:	ca f7       	brpl	.-14     	; 0xd72 <__divsf3_pse+0x2c>
     d80:	29 d0       	rcall	.+82     	; 0xdd4 <__divsf3_pse+0x8e>
     d82:	fe 2f       	mov	r31, r30
     d84:	27 d0       	rcall	.+78     	; 0xdd4 <__divsf3_pse+0x8e>
     d86:	66 0f       	add	r22, r22
     d88:	77 1f       	adc	r23, r23
     d8a:	88 1f       	adc	r24, r24
     d8c:	bb 1f       	adc	r27, r27
     d8e:	26 17       	cp	r18, r22
     d90:	37 07       	cpc	r19, r23
     d92:	48 07       	cpc	r20, r24
     d94:	ab 07       	cpc	r26, r27
     d96:	b0 e8       	ldi	r27, 0x80	; 128
     d98:	09 f0       	breq	.+2      	; 0xd9c <__divsf3_pse+0x56>
     d9a:	bb 0b       	sbc	r27, r27
     d9c:	80 2d       	mov	r24, r0
     d9e:	bf 01       	movw	r22, r30
     da0:	ff 27       	eor	r31, r31
     da2:	93 58       	subi	r25, 0x83	; 131
     da4:	5f 4f       	sbci	r21, 0xFF	; 255
     da6:	2a f0       	brmi	.+10     	; 0xdb2 <__divsf3_pse+0x6c>
     da8:	9e 3f       	cpi	r25, 0xFE	; 254
     daa:	51 05       	cpc	r21, r1
     dac:	68 f0       	brcs	.+26     	; 0xdc8 <__divsf3_pse+0x82>
     dae:	92 c0       	rjmp	.+292    	; 0xed4 <__fp_inf>
     db0:	dc c0       	rjmp	.+440    	; 0xf6a <__fp_szero>
     db2:	5f 3f       	cpi	r21, 0xFF	; 255
     db4:	ec f3       	brlt	.-6      	; 0xdb0 <__divsf3_pse+0x6a>
     db6:	98 3e       	cpi	r25, 0xE8	; 232
     db8:	dc f3       	brlt	.-10     	; 0xdb0 <__divsf3_pse+0x6a>
     dba:	86 95       	lsr	r24
     dbc:	77 95       	ror	r23
     dbe:	67 95       	ror	r22
     dc0:	b7 95       	ror	r27
     dc2:	f7 95       	ror	r31
     dc4:	9f 5f       	subi	r25, 0xFF	; 255
     dc6:	c9 f7       	brne	.-14     	; 0xdba <__divsf3_pse+0x74>
     dc8:	88 0f       	add	r24, r24
     dca:	91 1d       	adc	r25, r1
     dcc:	96 95       	lsr	r25
     dce:	87 95       	ror	r24
     dd0:	97 f9       	bld	r25, 7
     dd2:	08 95       	ret
     dd4:	e1 e0       	ldi	r30, 0x01	; 1
     dd6:	66 0f       	add	r22, r22
     dd8:	77 1f       	adc	r23, r23
     dda:	88 1f       	adc	r24, r24
     ddc:	bb 1f       	adc	r27, r27
     dde:	62 17       	cp	r22, r18
     de0:	73 07       	cpc	r23, r19
     de2:	84 07       	cpc	r24, r20
     de4:	ba 07       	cpc	r27, r26
     de6:	20 f0       	brcs	.+8      	; 0xdf0 <__divsf3_pse+0xaa>
     de8:	62 1b       	sub	r22, r18
     dea:	73 0b       	sbc	r23, r19
     dec:	84 0b       	sbc	r24, r20
     dee:	ba 0b       	sbc	r27, r26
     df0:	ee 1f       	adc	r30, r30
     df2:	88 f7       	brcc	.-30     	; 0xdd6 <__divsf3_pse+0x90>
     df4:	e0 95       	com	r30
     df6:	08 95       	ret

00000df8 <__fixsfsi>:
     df8:	04 d0       	rcall	.+8      	; 0xe02 <__fixunssfsi>
     dfa:	68 94       	set
     dfc:	b1 11       	cpse	r27, r1
     dfe:	b5 c0       	rjmp	.+362    	; 0xf6a <__fp_szero>
     e00:	08 95       	ret

00000e02 <__fixunssfsi>:
     e02:	98 d0       	rcall	.+304    	; 0xf34 <__fp_splitA>
     e04:	88 f0       	brcs	.+34     	; 0xe28 <__fixunssfsi+0x26>
     e06:	9f 57       	subi	r25, 0x7F	; 127
     e08:	90 f0       	brcs	.+36     	; 0xe2e <__fixunssfsi+0x2c>
     e0a:	b9 2f       	mov	r27, r25
     e0c:	99 27       	eor	r25, r25
     e0e:	b7 51       	subi	r27, 0x17	; 23
     e10:	a0 f0       	brcs	.+40     	; 0xe3a <__fixunssfsi+0x38>
     e12:	d1 f0       	breq	.+52     	; 0xe48 <__fixunssfsi+0x46>
     e14:	66 0f       	add	r22, r22
     e16:	77 1f       	adc	r23, r23
     e18:	88 1f       	adc	r24, r24
     e1a:	99 1f       	adc	r25, r25
     e1c:	1a f0       	brmi	.+6      	; 0xe24 <__fixunssfsi+0x22>
     e1e:	ba 95       	dec	r27
     e20:	c9 f7       	brne	.-14     	; 0xe14 <__fixunssfsi+0x12>
     e22:	12 c0       	rjmp	.+36     	; 0xe48 <__fixunssfsi+0x46>
     e24:	b1 30       	cpi	r27, 0x01	; 1
     e26:	81 f0       	breq	.+32     	; 0xe48 <__fixunssfsi+0x46>
     e28:	9f d0       	rcall	.+318    	; 0xf68 <__fp_zero>
     e2a:	b1 e0       	ldi	r27, 0x01	; 1
     e2c:	08 95       	ret
     e2e:	9c c0       	rjmp	.+312    	; 0xf68 <__fp_zero>
     e30:	67 2f       	mov	r22, r23
     e32:	78 2f       	mov	r23, r24
     e34:	88 27       	eor	r24, r24
     e36:	b8 5f       	subi	r27, 0xF8	; 248
     e38:	39 f0       	breq	.+14     	; 0xe48 <__fixunssfsi+0x46>
     e3a:	b9 3f       	cpi	r27, 0xF9	; 249
     e3c:	cc f3       	brlt	.-14     	; 0xe30 <__fixunssfsi+0x2e>
     e3e:	86 95       	lsr	r24
     e40:	77 95       	ror	r23
     e42:	67 95       	ror	r22
     e44:	b3 95       	inc	r27
     e46:	d9 f7       	brne	.-10     	; 0xe3e <__fixunssfsi+0x3c>
     e48:	3e f4       	brtc	.+14     	; 0xe58 <__fixunssfsi+0x56>
     e4a:	90 95       	com	r25
     e4c:	80 95       	com	r24
     e4e:	70 95       	com	r23
     e50:	61 95       	neg	r22
     e52:	7f 4f       	sbci	r23, 0xFF	; 255
     e54:	8f 4f       	sbci	r24, 0xFF	; 255
     e56:	9f 4f       	sbci	r25, 0xFF	; 255
     e58:	08 95       	ret

00000e5a <__floatunsisf>:
     e5a:	e8 94       	clt
     e5c:	09 c0       	rjmp	.+18     	; 0xe70 <__floatsisf+0x12>

00000e5e <__floatsisf>:
     e5e:	97 fb       	bst	r25, 7
     e60:	3e f4       	brtc	.+14     	; 0xe70 <__floatsisf+0x12>
     e62:	90 95       	com	r25
     e64:	80 95       	com	r24
     e66:	70 95       	com	r23
     e68:	61 95       	neg	r22
     e6a:	7f 4f       	sbci	r23, 0xFF	; 255
     e6c:	8f 4f       	sbci	r24, 0xFF	; 255
     e6e:	9f 4f       	sbci	r25, 0xFF	; 255
     e70:	99 23       	and	r25, r25
     e72:	a9 f0       	breq	.+42     	; 0xe9e <__floatsisf+0x40>
     e74:	f9 2f       	mov	r31, r25
     e76:	96 e9       	ldi	r25, 0x96	; 150
     e78:	bb 27       	eor	r27, r27
     e7a:	93 95       	inc	r25
     e7c:	f6 95       	lsr	r31
     e7e:	87 95       	ror	r24
     e80:	77 95       	ror	r23
     e82:	67 95       	ror	r22
     e84:	b7 95       	ror	r27
     e86:	f1 11       	cpse	r31, r1
     e88:	f8 cf       	rjmp	.-16     	; 0xe7a <__floatsisf+0x1c>
     e8a:	fa f4       	brpl	.+62     	; 0xeca <__floatsisf+0x6c>
     e8c:	bb 0f       	add	r27, r27
     e8e:	11 f4       	brne	.+4      	; 0xe94 <__floatsisf+0x36>
     e90:	60 ff       	sbrs	r22, 0
     e92:	1b c0       	rjmp	.+54     	; 0xeca <__floatsisf+0x6c>
     e94:	6f 5f       	subi	r22, 0xFF	; 255
     e96:	7f 4f       	sbci	r23, 0xFF	; 255
     e98:	8f 4f       	sbci	r24, 0xFF	; 255
     e9a:	9f 4f       	sbci	r25, 0xFF	; 255
     e9c:	16 c0       	rjmp	.+44     	; 0xeca <__floatsisf+0x6c>
     e9e:	88 23       	and	r24, r24
     ea0:	11 f0       	breq	.+4      	; 0xea6 <__floatsisf+0x48>
     ea2:	96 e9       	ldi	r25, 0x96	; 150
     ea4:	11 c0       	rjmp	.+34     	; 0xec8 <__floatsisf+0x6a>
     ea6:	77 23       	and	r23, r23
     ea8:	21 f0       	breq	.+8      	; 0xeb2 <__floatsisf+0x54>
     eaa:	9e e8       	ldi	r25, 0x8E	; 142
     eac:	87 2f       	mov	r24, r23
     eae:	76 2f       	mov	r23, r22
     eb0:	05 c0       	rjmp	.+10     	; 0xebc <__floatsisf+0x5e>
     eb2:	66 23       	and	r22, r22
     eb4:	71 f0       	breq	.+28     	; 0xed2 <__floatsisf+0x74>
     eb6:	96 e8       	ldi	r25, 0x86	; 134
     eb8:	86 2f       	mov	r24, r22
     eba:	70 e0       	ldi	r23, 0x00	; 0
     ebc:	60 e0       	ldi	r22, 0x00	; 0
     ebe:	2a f0       	brmi	.+10     	; 0xeca <__floatsisf+0x6c>
     ec0:	9a 95       	dec	r25
     ec2:	66 0f       	add	r22, r22
     ec4:	77 1f       	adc	r23, r23
     ec6:	88 1f       	adc	r24, r24
     ec8:	da f7       	brpl	.-10     	; 0xec0 <__floatsisf+0x62>
     eca:	88 0f       	add	r24, r24
     ecc:	96 95       	lsr	r25
     ece:	87 95       	ror	r24
     ed0:	97 f9       	bld	r25, 7
     ed2:	08 95       	ret

00000ed4 <__fp_inf>:
     ed4:	97 f9       	bld	r25, 7
     ed6:	9f 67       	ori	r25, 0x7F	; 127
     ed8:	80 e8       	ldi	r24, 0x80	; 128
     eda:	70 e0       	ldi	r23, 0x00	; 0
     edc:	60 e0       	ldi	r22, 0x00	; 0
     ede:	08 95       	ret

00000ee0 <__fp_nan>:
     ee0:	9f ef       	ldi	r25, 0xFF	; 255
     ee2:	80 ec       	ldi	r24, 0xC0	; 192
     ee4:	08 95       	ret

00000ee6 <__fp_pscA>:
     ee6:	00 24       	eor	r0, r0
     ee8:	0a 94       	dec	r0
     eea:	16 16       	cp	r1, r22
     eec:	17 06       	cpc	r1, r23
     eee:	18 06       	cpc	r1, r24
     ef0:	09 06       	cpc	r0, r25
     ef2:	08 95       	ret

00000ef4 <__fp_pscB>:
     ef4:	00 24       	eor	r0, r0
     ef6:	0a 94       	dec	r0
     ef8:	12 16       	cp	r1, r18
     efa:	13 06       	cpc	r1, r19
     efc:	14 06       	cpc	r1, r20
     efe:	05 06       	cpc	r0, r21
     f00:	08 95       	ret

00000f02 <__fp_round>:
     f02:	09 2e       	mov	r0, r25
     f04:	03 94       	inc	r0
     f06:	00 0c       	add	r0, r0
     f08:	11 f4       	brne	.+4      	; 0xf0e <__fp_round+0xc>
     f0a:	88 23       	and	r24, r24
     f0c:	52 f0       	brmi	.+20     	; 0xf22 <__fp_round+0x20>
     f0e:	bb 0f       	add	r27, r27
     f10:	40 f4       	brcc	.+16     	; 0xf22 <__fp_round+0x20>
     f12:	bf 2b       	or	r27, r31
     f14:	11 f4       	brne	.+4      	; 0xf1a <__fp_round+0x18>
     f16:	60 ff       	sbrs	r22, 0
     f18:	04 c0       	rjmp	.+8      	; 0xf22 <__fp_round+0x20>
     f1a:	6f 5f       	subi	r22, 0xFF	; 255
     f1c:	7f 4f       	sbci	r23, 0xFF	; 255
     f1e:	8f 4f       	sbci	r24, 0xFF	; 255
     f20:	9f 4f       	sbci	r25, 0xFF	; 255
     f22:	08 95       	ret

00000f24 <__fp_split3>:
     f24:	57 fd       	sbrc	r21, 7
     f26:	90 58       	subi	r25, 0x80	; 128
     f28:	44 0f       	add	r20, r20
     f2a:	55 1f       	adc	r21, r21
     f2c:	59 f0       	breq	.+22     	; 0xf44 <__fp_splitA+0x10>
     f2e:	5f 3f       	cpi	r21, 0xFF	; 255
     f30:	71 f0       	breq	.+28     	; 0xf4e <__fp_splitA+0x1a>
     f32:	47 95       	ror	r20

00000f34 <__fp_splitA>:
     f34:	88 0f       	add	r24, r24
     f36:	97 fb       	bst	r25, 7
     f38:	99 1f       	adc	r25, r25
     f3a:	61 f0       	breq	.+24     	; 0xf54 <__fp_splitA+0x20>
     f3c:	9f 3f       	cpi	r25, 0xFF	; 255
     f3e:	79 f0       	breq	.+30     	; 0xf5e <__fp_splitA+0x2a>
     f40:	87 95       	ror	r24
     f42:	08 95       	ret
     f44:	12 16       	cp	r1, r18
     f46:	13 06       	cpc	r1, r19
     f48:	14 06       	cpc	r1, r20
     f4a:	55 1f       	adc	r21, r21
     f4c:	f2 cf       	rjmp	.-28     	; 0xf32 <__fp_split3+0xe>
     f4e:	46 95       	lsr	r20
     f50:	f1 df       	rcall	.-30     	; 0xf34 <__fp_splitA>
     f52:	08 c0       	rjmp	.+16     	; 0xf64 <__fp_splitA+0x30>
     f54:	16 16       	cp	r1, r22
     f56:	17 06       	cpc	r1, r23
     f58:	18 06       	cpc	r1, r24
     f5a:	99 1f       	adc	r25, r25
     f5c:	f1 cf       	rjmp	.-30     	; 0xf40 <__fp_splitA+0xc>
     f5e:	86 95       	lsr	r24
     f60:	71 05       	cpc	r23, r1
     f62:	61 05       	cpc	r22, r1
     f64:	08 94       	sec
     f66:	08 95       	ret

00000f68 <__fp_zero>:
     f68:	e8 94       	clt

00000f6a <__fp_szero>:
     f6a:	bb 27       	eor	r27, r27
     f6c:	66 27       	eor	r22, r22
     f6e:	77 27       	eor	r23, r23
     f70:	cb 01       	movw	r24, r22
     f72:	97 f9       	bld	r25, 7
     f74:	08 95       	ret

00000f76 <__mulsf3>:
     f76:	0b d0       	rcall	.+22     	; 0xf8e <__mulsf3x>
     f78:	c4 cf       	rjmp	.-120    	; 0xf02 <__fp_round>
     f7a:	b5 df       	rcall	.-150    	; 0xee6 <__fp_pscA>
     f7c:	28 f0       	brcs	.+10     	; 0xf88 <__mulsf3+0x12>
     f7e:	ba df       	rcall	.-140    	; 0xef4 <__fp_pscB>
     f80:	18 f0       	brcs	.+6      	; 0xf88 <__mulsf3+0x12>
     f82:	95 23       	and	r25, r21
     f84:	09 f0       	breq	.+2      	; 0xf88 <__mulsf3+0x12>
     f86:	a6 cf       	rjmp	.-180    	; 0xed4 <__fp_inf>
     f88:	ab cf       	rjmp	.-170    	; 0xee0 <__fp_nan>
     f8a:	11 24       	eor	r1, r1
     f8c:	ee cf       	rjmp	.-36     	; 0xf6a <__fp_szero>

00000f8e <__mulsf3x>:
     f8e:	ca df       	rcall	.-108    	; 0xf24 <__fp_split3>
     f90:	a0 f3       	brcs	.-24     	; 0xf7a <__mulsf3+0x4>

00000f92 <__mulsf3_pse>:
     f92:	95 9f       	mul	r25, r21
     f94:	d1 f3       	breq	.-12     	; 0xf8a <__mulsf3+0x14>
     f96:	95 0f       	add	r25, r21
     f98:	50 e0       	ldi	r21, 0x00	; 0
     f9a:	55 1f       	adc	r21, r21
     f9c:	62 9f       	mul	r22, r18
     f9e:	f0 01       	movw	r30, r0
     fa0:	72 9f       	mul	r23, r18
     fa2:	bb 27       	eor	r27, r27
     fa4:	f0 0d       	add	r31, r0
     fa6:	b1 1d       	adc	r27, r1
     fa8:	63 9f       	mul	r22, r19
     faa:	aa 27       	eor	r26, r26
     fac:	f0 0d       	add	r31, r0
     fae:	b1 1d       	adc	r27, r1
     fb0:	aa 1f       	adc	r26, r26
     fb2:	64 9f       	mul	r22, r20
     fb4:	66 27       	eor	r22, r22
     fb6:	b0 0d       	add	r27, r0
     fb8:	a1 1d       	adc	r26, r1
     fba:	66 1f       	adc	r22, r22
     fbc:	82 9f       	mul	r24, r18
     fbe:	22 27       	eor	r18, r18
     fc0:	b0 0d       	add	r27, r0
     fc2:	a1 1d       	adc	r26, r1
     fc4:	62 1f       	adc	r22, r18
     fc6:	73 9f       	mul	r23, r19
     fc8:	b0 0d       	add	r27, r0
     fca:	a1 1d       	adc	r26, r1
     fcc:	62 1f       	adc	r22, r18
     fce:	83 9f       	mul	r24, r19
     fd0:	a0 0d       	add	r26, r0
     fd2:	61 1d       	adc	r22, r1
     fd4:	22 1f       	adc	r18, r18
     fd6:	74 9f       	mul	r23, r20
     fd8:	33 27       	eor	r19, r19
     fda:	a0 0d       	add	r26, r0
     fdc:	61 1d       	adc	r22, r1
     fde:	23 1f       	adc	r18, r19
     fe0:	84 9f       	mul	r24, r20
     fe2:	60 0d       	add	r22, r0
     fe4:	21 1d       	adc	r18, r1
     fe6:	82 2f       	mov	r24, r18
     fe8:	76 2f       	mov	r23, r22
     fea:	6a 2f       	mov	r22, r26
     fec:	11 24       	eor	r1, r1
     fee:	9f 57       	subi	r25, 0x7F	; 127
     ff0:	50 40       	sbci	r21, 0x00	; 0
     ff2:	8a f0       	brmi	.+34     	; 0x1016 <__mulsf3_pse+0x84>
     ff4:	e1 f0       	breq	.+56     	; 0x102e <__mulsf3_pse+0x9c>
     ff6:	88 23       	and	r24, r24
     ff8:	4a f0       	brmi	.+18     	; 0x100c <__mulsf3_pse+0x7a>
     ffa:	ee 0f       	add	r30, r30
     ffc:	ff 1f       	adc	r31, r31
     ffe:	bb 1f       	adc	r27, r27
    1000:	66 1f       	adc	r22, r22
    1002:	77 1f       	adc	r23, r23
    1004:	88 1f       	adc	r24, r24
    1006:	91 50       	subi	r25, 0x01	; 1
    1008:	50 40       	sbci	r21, 0x00	; 0
    100a:	a9 f7       	brne	.-22     	; 0xff6 <__mulsf3_pse+0x64>
    100c:	9e 3f       	cpi	r25, 0xFE	; 254
    100e:	51 05       	cpc	r21, r1
    1010:	70 f0       	brcs	.+28     	; 0x102e <__mulsf3_pse+0x9c>
    1012:	60 cf       	rjmp	.-320    	; 0xed4 <__fp_inf>
    1014:	aa cf       	rjmp	.-172    	; 0xf6a <__fp_szero>
    1016:	5f 3f       	cpi	r21, 0xFF	; 255
    1018:	ec f3       	brlt	.-6      	; 0x1014 <__mulsf3_pse+0x82>
    101a:	98 3e       	cpi	r25, 0xE8	; 232
    101c:	dc f3       	brlt	.-10     	; 0x1014 <__mulsf3_pse+0x82>
    101e:	86 95       	lsr	r24
    1020:	77 95       	ror	r23
    1022:	67 95       	ror	r22
    1024:	b7 95       	ror	r27
    1026:	f7 95       	ror	r31
    1028:	e7 95       	ror	r30
    102a:	9f 5f       	subi	r25, 0xFF	; 255
    102c:	c1 f7       	brne	.-16     	; 0x101e <__mulsf3_pse+0x8c>
    102e:	fe 2b       	or	r31, r30
    1030:	88 0f       	add	r24, r24
    1032:	91 1d       	adc	r25, r1
    1034:	96 95       	lsr	r25
    1036:	87 95       	ror	r24
    1038:	97 f9       	bld	r25, 7
    103a:	08 95       	ret

0000103c <vfprintf>:
    103c:	2f 92       	push	r2
    103e:	3f 92       	push	r3
    1040:	4f 92       	push	r4
    1042:	5f 92       	push	r5
    1044:	6f 92       	push	r6
    1046:	7f 92       	push	r7
    1048:	8f 92       	push	r8
    104a:	9f 92       	push	r9
    104c:	af 92       	push	r10
    104e:	bf 92       	push	r11
    1050:	cf 92       	push	r12
    1052:	df 92       	push	r13
    1054:	ef 92       	push	r14
    1056:	ff 92       	push	r15
    1058:	0f 93       	push	r16
    105a:	1f 93       	push	r17
    105c:	cf 93       	push	r28
    105e:	df 93       	push	r29
    1060:	cd b7       	in	r28, 0x3d	; 61
    1062:	de b7       	in	r29, 0x3e	; 62
    1064:	63 97       	sbiw	r28, 0x13	; 19
    1066:	0f b6       	in	r0, 0x3f	; 63
    1068:	f8 94       	cli
    106a:	de bf       	out	0x3e, r29	; 62
    106c:	0f be       	out	0x3f, r0	; 63
    106e:	cd bf       	out	0x3d, r28	; 61
    1070:	7c 01       	movw	r14, r24
    1072:	1b 01       	movw	r2, r22
    1074:	6a 01       	movw	r12, r20
    1076:	fc 01       	movw	r30, r24
    1078:	17 82       	std	Z+7, r1	; 0x07
    107a:	16 82       	std	Z+6, r1	; 0x06
    107c:	83 81       	ldd	r24, Z+3	; 0x03
    107e:	81 ff       	sbrs	r24, 1
    1080:	49 c3       	rjmp	.+1682   	; 0x1714 <vfprintf+0x6d8>
    1082:	be 01       	movw	r22, r28
    1084:	6f 5f       	subi	r22, 0xFF	; 255
    1086:	7f 4f       	sbci	r23, 0xFF	; 255
    1088:	4b 01       	movw	r8, r22
    108a:	f7 01       	movw	r30, r14
    108c:	93 81       	ldd	r25, Z+3	; 0x03
    108e:	f1 01       	movw	r30, r2
    1090:	93 fd       	sbrc	r25, 3
    1092:	85 91       	lpm	r24, Z+
    1094:	93 ff       	sbrs	r25, 3
    1096:	81 91       	ld	r24, Z+
    1098:	1f 01       	movw	r2, r30
    109a:	88 23       	and	r24, r24
    109c:	09 f4       	brne	.+2      	; 0x10a0 <vfprintf+0x64>
    109e:	36 c3       	rjmp	.+1644   	; 0x170c <vfprintf+0x6d0>
    10a0:	85 32       	cpi	r24, 0x25	; 37
    10a2:	39 f4       	brne	.+14     	; 0x10b2 <vfprintf+0x76>
    10a4:	93 fd       	sbrc	r25, 3
    10a6:	85 91       	lpm	r24, Z+
    10a8:	93 ff       	sbrs	r25, 3
    10aa:	81 91       	ld	r24, Z+
    10ac:	1f 01       	movw	r2, r30
    10ae:	85 32       	cpi	r24, 0x25	; 37
    10b0:	31 f4       	brne	.+12     	; 0x10be <vfprintf+0x82>
    10b2:	b7 01       	movw	r22, r14
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	bd d4       	rcall	.+2426   	; 0x1a32 <fputc>
    10b8:	56 01       	movw	r10, r12
    10ba:	65 01       	movw	r12, r10
    10bc:	e6 cf       	rjmp	.-52     	; 0x108a <vfprintf+0x4e>
    10be:	10 e0       	ldi	r17, 0x00	; 0
    10c0:	51 2c       	mov	r5, r1
    10c2:	20 e0       	ldi	r18, 0x00	; 0
    10c4:	20 32       	cpi	r18, 0x20	; 32
    10c6:	a0 f4       	brcc	.+40     	; 0x10f0 <vfprintf+0xb4>
    10c8:	8b 32       	cpi	r24, 0x2B	; 43
    10ca:	69 f0       	breq	.+26     	; 0x10e6 <vfprintf+0xaa>
    10cc:	30 f4       	brcc	.+12     	; 0x10da <vfprintf+0x9e>
    10ce:	80 32       	cpi	r24, 0x20	; 32
    10d0:	59 f0       	breq	.+22     	; 0x10e8 <vfprintf+0xac>
    10d2:	83 32       	cpi	r24, 0x23	; 35
    10d4:	69 f4       	brne	.+26     	; 0x10f0 <vfprintf+0xb4>
    10d6:	20 61       	ori	r18, 0x10	; 16
    10d8:	2c c0       	rjmp	.+88     	; 0x1132 <vfprintf+0xf6>
    10da:	8d 32       	cpi	r24, 0x2D	; 45
    10dc:	39 f0       	breq	.+14     	; 0x10ec <vfprintf+0xb0>
    10de:	80 33       	cpi	r24, 0x30	; 48
    10e0:	39 f4       	brne	.+14     	; 0x10f0 <vfprintf+0xb4>
    10e2:	21 60       	ori	r18, 0x01	; 1
    10e4:	26 c0       	rjmp	.+76     	; 0x1132 <vfprintf+0xf6>
    10e6:	22 60       	ori	r18, 0x02	; 2
    10e8:	24 60       	ori	r18, 0x04	; 4
    10ea:	23 c0       	rjmp	.+70     	; 0x1132 <vfprintf+0xf6>
    10ec:	28 60       	ori	r18, 0x08	; 8
    10ee:	21 c0       	rjmp	.+66     	; 0x1132 <vfprintf+0xf6>
    10f0:	27 fd       	sbrc	r18, 7
    10f2:	27 c0       	rjmp	.+78     	; 0x1142 <vfprintf+0x106>
    10f4:	30 ed       	ldi	r19, 0xD0	; 208
    10f6:	38 0f       	add	r19, r24
    10f8:	3a 30       	cpi	r19, 0x0A	; 10
    10fa:	78 f4       	brcc	.+30     	; 0x111a <vfprintf+0xde>
    10fc:	26 ff       	sbrs	r18, 6
    10fe:	06 c0       	rjmp	.+12     	; 0x110c <vfprintf+0xd0>
    1100:	fa e0       	ldi	r31, 0x0A	; 10
    1102:	1f 9f       	mul	r17, r31
    1104:	30 0d       	add	r19, r0
    1106:	11 24       	eor	r1, r1
    1108:	13 2f       	mov	r17, r19
    110a:	13 c0       	rjmp	.+38     	; 0x1132 <vfprintf+0xf6>
    110c:	6a e0       	ldi	r22, 0x0A	; 10
    110e:	56 9e       	mul	r5, r22
    1110:	30 0d       	add	r19, r0
    1112:	11 24       	eor	r1, r1
    1114:	53 2e       	mov	r5, r19
    1116:	20 62       	ori	r18, 0x20	; 32
    1118:	0c c0       	rjmp	.+24     	; 0x1132 <vfprintf+0xf6>
    111a:	8e 32       	cpi	r24, 0x2E	; 46
    111c:	21 f4       	brne	.+8      	; 0x1126 <vfprintf+0xea>
    111e:	26 fd       	sbrc	r18, 6
    1120:	f5 c2       	rjmp	.+1514   	; 0x170c <vfprintf+0x6d0>
    1122:	20 64       	ori	r18, 0x40	; 64
    1124:	06 c0       	rjmp	.+12     	; 0x1132 <vfprintf+0xf6>
    1126:	8c 36       	cpi	r24, 0x6C	; 108
    1128:	11 f4       	brne	.+4      	; 0x112e <vfprintf+0xf2>
    112a:	20 68       	ori	r18, 0x80	; 128
    112c:	02 c0       	rjmp	.+4      	; 0x1132 <vfprintf+0xf6>
    112e:	88 36       	cpi	r24, 0x68	; 104
    1130:	41 f4       	brne	.+16     	; 0x1142 <vfprintf+0x106>
    1132:	f1 01       	movw	r30, r2
    1134:	93 fd       	sbrc	r25, 3
    1136:	85 91       	lpm	r24, Z+
    1138:	93 ff       	sbrs	r25, 3
    113a:	81 91       	ld	r24, Z+
    113c:	1f 01       	movw	r2, r30
    113e:	81 11       	cpse	r24, r1
    1140:	c1 cf       	rjmp	.-126    	; 0x10c4 <vfprintf+0x88>
    1142:	9b eb       	ldi	r25, 0xBB	; 187
    1144:	98 0f       	add	r25, r24
    1146:	93 30       	cpi	r25, 0x03	; 3
    1148:	18 f4       	brcc	.+6      	; 0x1150 <vfprintf+0x114>
    114a:	20 61       	ori	r18, 0x10	; 16
    114c:	80 5e       	subi	r24, 0xE0	; 224
    114e:	06 c0       	rjmp	.+12     	; 0x115c <vfprintf+0x120>
    1150:	9b e9       	ldi	r25, 0x9B	; 155
    1152:	98 0f       	add	r25, r24
    1154:	93 30       	cpi	r25, 0x03	; 3
    1156:	08 f0       	brcs	.+2      	; 0x115a <vfprintf+0x11e>
    1158:	9a c1       	rjmp	.+820    	; 0x148e <vfprintf+0x452>
    115a:	2f 7e       	andi	r18, 0xEF	; 239
    115c:	26 ff       	sbrs	r18, 6
    115e:	16 e0       	ldi	r17, 0x06	; 6
    1160:	2f 73       	andi	r18, 0x3F	; 63
    1162:	72 2e       	mov	r7, r18
    1164:	85 36       	cpi	r24, 0x65	; 101
    1166:	21 f4       	brne	.+8      	; 0x1170 <vfprintf+0x134>
    1168:	f2 2f       	mov	r31, r18
    116a:	f0 64       	ori	r31, 0x40	; 64
    116c:	7f 2e       	mov	r7, r31
    116e:	08 c0       	rjmp	.+16     	; 0x1180 <vfprintf+0x144>
    1170:	86 36       	cpi	r24, 0x66	; 102
    1172:	21 f4       	brne	.+8      	; 0x117c <vfprintf+0x140>
    1174:	62 2f       	mov	r22, r18
    1176:	60 68       	ori	r22, 0x80	; 128
    1178:	76 2e       	mov	r7, r22
    117a:	02 c0       	rjmp	.+4      	; 0x1180 <vfprintf+0x144>
    117c:	11 11       	cpse	r17, r1
    117e:	11 50       	subi	r17, 0x01	; 1
    1180:	77 fe       	sbrs	r7, 7
    1182:	07 c0       	rjmp	.+14     	; 0x1192 <vfprintf+0x156>
    1184:	1c 33       	cpi	r17, 0x3C	; 60
    1186:	48 f4       	brcc	.+18     	; 0x119a <vfprintf+0x15e>
    1188:	44 24       	eor	r4, r4
    118a:	43 94       	inc	r4
    118c:	41 0e       	add	r4, r17
    118e:	27 e0       	ldi	r18, 0x07	; 7
    1190:	0b c0       	rjmp	.+22     	; 0x11a8 <vfprintf+0x16c>
    1192:	18 30       	cpi	r17, 0x08	; 8
    1194:	30 f4       	brcc	.+12     	; 0x11a2 <vfprintf+0x166>
    1196:	21 2f       	mov	r18, r17
    1198:	06 c0       	rjmp	.+12     	; 0x11a6 <vfprintf+0x16a>
    119a:	27 e0       	ldi	r18, 0x07	; 7
    119c:	4c e3       	ldi	r20, 0x3C	; 60
    119e:	44 2e       	mov	r4, r20
    11a0:	03 c0       	rjmp	.+6      	; 0x11a8 <vfprintf+0x16c>
    11a2:	27 e0       	ldi	r18, 0x07	; 7
    11a4:	17 e0       	ldi	r17, 0x07	; 7
    11a6:	41 2c       	mov	r4, r1
    11a8:	56 01       	movw	r10, r12
    11aa:	74 e0       	ldi	r23, 0x04	; 4
    11ac:	a7 0e       	add	r10, r23
    11ae:	b1 1c       	adc	r11, r1
    11b0:	f6 01       	movw	r30, r12
    11b2:	60 81       	ld	r22, Z
    11b4:	71 81       	ldd	r23, Z+1	; 0x01
    11b6:	82 81       	ldd	r24, Z+2	; 0x02
    11b8:	93 81       	ldd	r25, Z+3	; 0x03
    11ba:	04 2d       	mov	r16, r4
    11bc:	a4 01       	movw	r20, r8
    11be:	01 d3       	rcall	.+1538   	; 0x17c2 <__ftoa_engine>
    11c0:	6c 01       	movw	r12, r24
    11c2:	09 81       	ldd	r16, Y+1	; 0x01
    11c4:	00 ff       	sbrs	r16, 0
    11c6:	02 c0       	rjmp	.+4      	; 0x11cc <vfprintf+0x190>
    11c8:	03 ff       	sbrs	r16, 3
    11ca:	06 c0       	rjmp	.+12     	; 0x11d8 <vfprintf+0x19c>
    11cc:	71 fc       	sbrc	r7, 1
    11ce:	07 c0       	rjmp	.+14     	; 0x11de <vfprintf+0x1a2>
    11d0:	72 fc       	sbrc	r7, 2
    11d2:	08 c0       	rjmp	.+16     	; 0x11e4 <vfprintf+0x1a8>
    11d4:	61 2c       	mov	r6, r1
    11d6:	08 c0       	rjmp	.+16     	; 0x11e8 <vfprintf+0x1ac>
    11d8:	3d e2       	ldi	r19, 0x2D	; 45
    11da:	63 2e       	mov	r6, r19
    11dc:	05 c0       	rjmp	.+10     	; 0x11e8 <vfprintf+0x1ac>
    11de:	2b e2       	ldi	r18, 0x2B	; 43
    11e0:	62 2e       	mov	r6, r18
    11e2:	02 c0       	rjmp	.+4      	; 0x11e8 <vfprintf+0x1ac>
    11e4:	90 e2       	ldi	r25, 0x20	; 32
    11e6:	69 2e       	mov	r6, r25
    11e8:	80 2f       	mov	r24, r16
    11ea:	8c 70       	andi	r24, 0x0C	; 12
    11ec:	81 f1       	breq	.+96     	; 0x124e <vfprintf+0x212>
    11ee:	66 20       	and	r6, r6
    11f0:	11 f0       	breq	.+4      	; 0x11f6 <vfprintf+0x1ba>
    11f2:	84 e0       	ldi	r24, 0x04	; 4
    11f4:	01 c0       	rjmp	.+2      	; 0x11f8 <vfprintf+0x1bc>
    11f6:	83 e0       	ldi	r24, 0x03	; 3
    11f8:	85 15       	cp	r24, r5
    11fa:	10 f0       	brcs	.+4      	; 0x1200 <vfprintf+0x1c4>
    11fc:	51 2c       	mov	r5, r1
    11fe:	0a c0       	rjmp	.+20     	; 0x1214 <vfprintf+0x1d8>
    1200:	58 1a       	sub	r5, r24
    1202:	73 fc       	sbrc	r7, 3
    1204:	07 c0       	rjmp	.+14     	; 0x1214 <vfprintf+0x1d8>
    1206:	b7 01       	movw	r22, r14
    1208:	80 e2       	ldi	r24, 0x20	; 32
    120a:	90 e0       	ldi	r25, 0x00	; 0
    120c:	12 d4       	rcall	.+2084   	; 0x1a32 <fputc>
    120e:	5a 94       	dec	r5
    1210:	d1 f7       	brne	.-12     	; 0x1206 <vfprintf+0x1ca>
    1212:	f4 cf       	rjmp	.-24     	; 0x11fc <vfprintf+0x1c0>
    1214:	66 20       	and	r6, r6
    1216:	21 f0       	breq	.+8      	; 0x1220 <vfprintf+0x1e4>
    1218:	b7 01       	movw	r22, r14
    121a:	86 2d       	mov	r24, r6
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	09 d4       	rcall	.+2066   	; 0x1a32 <fputc>
    1220:	03 fd       	sbrc	r16, 3
    1222:	03 c0       	rjmp	.+6      	; 0x122a <vfprintf+0x1ee>
    1224:	0a e8       	ldi	r16, 0x8A	; 138
    1226:	11 e0       	ldi	r17, 0x01	; 1
    1228:	02 c0       	rjmp	.+4      	; 0x122e <vfprintf+0x1f2>
    122a:	06 e8       	ldi	r16, 0x86	; 134
    122c:	11 e0       	ldi	r17, 0x01	; 1
    122e:	f7 2d       	mov	r31, r7
    1230:	f0 71       	andi	r31, 0x10	; 16
    1232:	7f 2e       	mov	r7, r31
    1234:	f8 01       	movw	r30, r16
    1236:	84 91       	lpm	r24, Z
    1238:	88 23       	and	r24, r24
    123a:	09 f4       	brne	.+2      	; 0x123e <vfprintf+0x202>
    123c:	5e c2       	rjmp	.+1212   	; 0x16fa <vfprintf+0x6be>
    123e:	71 10       	cpse	r7, r1
    1240:	80 52       	subi	r24, 0x20	; 32
    1242:	b7 01       	movw	r22, r14
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	f5 d3       	rcall	.+2026   	; 0x1a32 <fputc>
    1248:	0f 5f       	subi	r16, 0xFF	; 255
    124a:	1f 4f       	sbci	r17, 0xFF	; 255
    124c:	f3 cf       	rjmp	.-26     	; 0x1234 <vfprintf+0x1f8>
    124e:	77 fe       	sbrs	r7, 7
    1250:	0f c0       	rjmp	.+30     	; 0x1270 <vfprintf+0x234>
    1252:	4c 0c       	add	r4, r12
    1254:	04 ff       	sbrs	r16, 4
    1256:	04 c0       	rjmp	.+8      	; 0x1260 <vfprintf+0x224>
    1258:	8a 81       	ldd	r24, Y+2	; 0x02
    125a:	81 33       	cpi	r24, 0x31	; 49
    125c:	09 f4       	brne	.+2      	; 0x1260 <vfprintf+0x224>
    125e:	4a 94       	dec	r4
    1260:	14 14       	cp	r1, r4
    1262:	74 f5       	brge	.+92     	; 0x12c0 <vfprintf+0x284>
    1264:	f8 e0       	ldi	r31, 0x08	; 8
    1266:	f4 15       	cp	r31, r4
    1268:	78 f5       	brcc	.+94     	; 0x12c8 <vfprintf+0x28c>
    126a:	88 e0       	ldi	r24, 0x08	; 8
    126c:	48 2e       	mov	r4, r24
    126e:	2c c0       	rjmp	.+88     	; 0x12c8 <vfprintf+0x28c>
    1270:	76 fc       	sbrc	r7, 6
    1272:	2a c0       	rjmp	.+84     	; 0x12c8 <vfprintf+0x28c>
    1274:	81 2f       	mov	r24, r17
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	8c 15       	cp	r24, r12
    127a:	9d 05       	cpc	r25, r13
    127c:	9c f0       	brlt	.+38     	; 0x12a4 <vfprintf+0x268>
    127e:	6c ef       	ldi	r22, 0xFC	; 252
    1280:	c6 16       	cp	r12, r22
    1282:	6f ef       	ldi	r22, 0xFF	; 255
    1284:	d6 06       	cpc	r13, r22
    1286:	74 f0       	brlt	.+28     	; 0x12a4 <vfprintf+0x268>
    1288:	77 2d       	mov	r23, r7
    128a:	70 68       	ori	r23, 0x80	; 128
    128c:	77 2e       	mov	r7, r23
    128e:	0a c0       	rjmp	.+20     	; 0x12a4 <vfprintf+0x268>
    1290:	e2 e0       	ldi	r30, 0x02	; 2
    1292:	f0 e0       	ldi	r31, 0x00	; 0
    1294:	ec 0f       	add	r30, r28
    1296:	fd 1f       	adc	r31, r29
    1298:	e1 0f       	add	r30, r17
    129a:	f1 1d       	adc	r31, r1
    129c:	80 81       	ld	r24, Z
    129e:	80 33       	cpi	r24, 0x30	; 48
    12a0:	19 f4       	brne	.+6      	; 0x12a8 <vfprintf+0x26c>
    12a2:	11 50       	subi	r17, 0x01	; 1
    12a4:	11 11       	cpse	r17, r1
    12a6:	f4 cf       	rjmp	.-24     	; 0x1290 <vfprintf+0x254>
    12a8:	77 fe       	sbrs	r7, 7
    12aa:	0e c0       	rjmp	.+28     	; 0x12c8 <vfprintf+0x28c>
    12ac:	44 24       	eor	r4, r4
    12ae:	43 94       	inc	r4
    12b0:	41 0e       	add	r4, r17
    12b2:	81 2f       	mov	r24, r17
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	c8 16       	cp	r12, r24
    12b8:	d9 06       	cpc	r13, r25
    12ba:	2c f4       	brge	.+10     	; 0x12c6 <vfprintf+0x28a>
    12bc:	1c 19       	sub	r17, r12
    12be:	04 c0       	rjmp	.+8      	; 0x12c8 <vfprintf+0x28c>
    12c0:	44 24       	eor	r4, r4
    12c2:	43 94       	inc	r4
    12c4:	01 c0       	rjmp	.+2      	; 0x12c8 <vfprintf+0x28c>
    12c6:	10 e0       	ldi	r17, 0x00	; 0
    12c8:	77 fe       	sbrs	r7, 7
    12ca:	07 c0       	rjmp	.+14     	; 0x12da <vfprintf+0x29e>
    12cc:	1c 14       	cp	r1, r12
    12ce:	1d 04       	cpc	r1, r13
    12d0:	3c f4       	brge	.+14     	; 0x12e0 <vfprintf+0x2a4>
    12d2:	96 01       	movw	r18, r12
    12d4:	2f 5f       	subi	r18, 0xFF	; 255
    12d6:	3f 4f       	sbci	r19, 0xFF	; 255
    12d8:	05 c0       	rjmp	.+10     	; 0x12e4 <vfprintf+0x2a8>
    12da:	25 e0       	ldi	r18, 0x05	; 5
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	02 c0       	rjmp	.+4      	; 0x12e4 <vfprintf+0x2a8>
    12e0:	21 e0       	ldi	r18, 0x01	; 1
    12e2:	30 e0       	ldi	r19, 0x00	; 0
    12e4:	66 20       	and	r6, r6
    12e6:	11 f0       	breq	.+4      	; 0x12ec <vfprintf+0x2b0>
    12e8:	2f 5f       	subi	r18, 0xFF	; 255
    12ea:	3f 4f       	sbci	r19, 0xFF	; 255
    12ec:	11 23       	and	r17, r17
    12ee:	31 f0       	breq	.+12     	; 0x12fc <vfprintf+0x2c0>
    12f0:	41 2f       	mov	r20, r17
    12f2:	50 e0       	ldi	r21, 0x00	; 0
    12f4:	4f 5f       	subi	r20, 0xFF	; 255
    12f6:	5f 4f       	sbci	r21, 0xFF	; 255
    12f8:	24 0f       	add	r18, r20
    12fa:	35 1f       	adc	r19, r21
    12fc:	45 2d       	mov	r20, r5
    12fe:	50 e0       	ldi	r21, 0x00	; 0
    1300:	24 17       	cp	r18, r20
    1302:	35 07       	cpc	r19, r21
    1304:	14 f4       	brge	.+4      	; 0x130a <vfprintf+0x2ce>
    1306:	52 1a       	sub	r5, r18
    1308:	01 c0       	rjmp	.+2      	; 0x130c <vfprintf+0x2d0>
    130a:	51 2c       	mov	r5, r1
    130c:	87 2d       	mov	r24, r7
    130e:	89 70       	andi	r24, 0x09	; 9
    1310:	41 f4       	brne	.+16     	; 0x1322 <vfprintf+0x2e6>
    1312:	55 20       	and	r5, r5
    1314:	31 f0       	breq	.+12     	; 0x1322 <vfprintf+0x2e6>
    1316:	b7 01       	movw	r22, r14
    1318:	80 e2       	ldi	r24, 0x20	; 32
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	8a d3       	rcall	.+1812   	; 0x1a32 <fputc>
    131e:	5a 94       	dec	r5
    1320:	f8 cf       	rjmp	.-16     	; 0x1312 <vfprintf+0x2d6>
    1322:	66 20       	and	r6, r6
    1324:	21 f0       	breq	.+8      	; 0x132e <vfprintf+0x2f2>
    1326:	b7 01       	movw	r22, r14
    1328:	86 2d       	mov	r24, r6
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	82 d3       	rcall	.+1796   	; 0x1a32 <fputc>
    132e:	73 fc       	sbrc	r7, 3
    1330:	08 c0       	rjmp	.+16     	; 0x1342 <vfprintf+0x306>
    1332:	55 20       	and	r5, r5
    1334:	31 f0       	breq	.+12     	; 0x1342 <vfprintf+0x306>
    1336:	b7 01       	movw	r22, r14
    1338:	80 e3       	ldi	r24, 0x30	; 48
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	7a d3       	rcall	.+1780   	; 0x1a32 <fputc>
    133e:	5a 94       	dec	r5
    1340:	f8 cf       	rjmp	.-16     	; 0x1332 <vfprintf+0x2f6>
    1342:	77 fe       	sbrs	r7, 7
    1344:	5d c0       	rjmp	.+186    	; 0x1400 <vfprintf+0x3c4>
    1346:	9c 2d       	mov	r25, r12
    1348:	8d 2d       	mov	r24, r13
    134a:	d7 fe       	sbrs	r13, 7
    134c:	02 c0       	rjmp	.+4      	; 0x1352 <vfprintf+0x316>
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	80 e0       	ldi	r24, 0x00	; 0
    1352:	69 2e       	mov	r6, r25
    1354:	78 2e       	mov	r7, r24
    1356:	40 e0       	ldi	r20, 0x00	; 0
    1358:	50 e0       	ldi	r21, 0x00	; 0
    135a:	c6 01       	movw	r24, r12
    135c:	84 19       	sub	r24, r4
    135e:	91 09       	sbc	r25, r1
    1360:	9d 87       	std	Y+13, r25	; 0x0d
    1362:	8c 87       	std	Y+12, r24	; 0x0c
    1364:	96 01       	movw	r18, r12
    1366:	26 19       	sub	r18, r6
    1368:	37 09       	sbc	r19, r7
    136a:	28 0d       	add	r18, r8
    136c:	39 1d       	adc	r19, r9
    136e:	81 2f       	mov	r24, r17
    1370:	90 e0       	ldi	r25, 0x00	; 0
    1372:	ee 27       	eor	r30, r30
    1374:	ff 27       	eor	r31, r31
    1376:	e8 1b       	sub	r30, r24
    1378:	f9 0b       	sbc	r31, r25
    137a:	ff 87       	std	Y+15, r31	; 0x0f
    137c:	ee 87       	std	Y+14, r30	; 0x0e
    137e:	ff ef       	ldi	r31, 0xFF	; 255
    1380:	6f 16       	cp	r6, r31
    1382:	7f 06       	cpc	r7, r31
    1384:	61 f4       	brne	.+24     	; 0x139e <vfprintf+0x362>
    1386:	b7 01       	movw	r22, r14
    1388:	8e e2       	ldi	r24, 0x2E	; 46
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	2b 8b       	std	Y+19, r18	; 0x13
    138e:	3a 8b       	std	Y+18, r19	; 0x12
    1390:	48 8b       	std	Y+16, r20	; 0x10
    1392:	59 8b       	std	Y+17, r21	; 0x11
    1394:	4e d3       	rcall	.+1692   	; 0x1a32 <fputc>
    1396:	59 89       	ldd	r21, Y+17	; 0x11
    1398:	48 89       	ldd	r20, Y+16	; 0x10
    139a:	3a 89       	ldd	r19, Y+18	; 0x12
    139c:	2b 89       	ldd	r18, Y+19	; 0x13
    139e:	c6 14       	cp	r12, r6
    13a0:	d7 04       	cpc	r13, r7
    13a2:	54 f0       	brlt	.+20     	; 0x13b8 <vfprintf+0x37c>
    13a4:	6c 85       	ldd	r22, Y+12	; 0x0c
    13a6:	7d 85       	ldd	r23, Y+13	; 0x0d
    13a8:	66 15       	cp	r22, r6
    13aa:	77 05       	cpc	r23, r7
    13ac:	2c f4       	brge	.+10     	; 0x13b8 <vfprintf+0x37c>
    13ae:	f9 01       	movw	r30, r18
    13b0:	e4 0f       	add	r30, r20
    13b2:	f5 1f       	adc	r31, r21
    13b4:	81 81       	ldd	r24, Z+1	; 0x01
    13b6:	01 c0       	rjmp	.+2      	; 0x13ba <vfprintf+0x37e>
    13b8:	80 e3       	ldi	r24, 0x30	; 48
    13ba:	71 e0       	ldi	r23, 0x01	; 1
    13bc:	67 1a       	sub	r6, r23
    13be:	71 08       	sbc	r7, r1
    13c0:	4f 5f       	subi	r20, 0xFF	; 255
    13c2:	5f 4f       	sbci	r21, 0xFF	; 255
    13c4:	ee 85       	ldd	r30, Y+14	; 0x0e
    13c6:	ff 85       	ldd	r31, Y+15	; 0x0f
    13c8:	6e 16       	cp	r6, r30
    13ca:	7f 06       	cpc	r7, r31
    13cc:	64 f0       	brlt	.+24     	; 0x13e6 <vfprintf+0x3aa>
    13ce:	b7 01       	movw	r22, r14
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	2b 8b       	std	Y+19, r18	; 0x13
    13d4:	3a 8b       	std	Y+18, r19	; 0x12
    13d6:	48 8b       	std	Y+16, r20	; 0x10
    13d8:	59 8b       	std	Y+17, r21	; 0x11
    13da:	2b d3       	rcall	.+1622   	; 0x1a32 <fputc>
    13dc:	2b 89       	ldd	r18, Y+19	; 0x13
    13de:	3a 89       	ldd	r19, Y+18	; 0x12
    13e0:	48 89       	ldd	r20, Y+16	; 0x10
    13e2:	59 89       	ldd	r21, Y+17	; 0x11
    13e4:	cc cf       	rjmp	.-104    	; 0x137e <vfprintf+0x342>
    13e6:	6c 14       	cp	r6, r12
    13e8:	7d 04       	cpc	r7, r13
    13ea:	39 f4       	brne	.+14     	; 0x13fa <vfprintf+0x3be>
    13ec:	9a 81       	ldd	r25, Y+2	; 0x02
    13ee:	96 33       	cpi	r25, 0x36	; 54
    13f0:	18 f4       	brcc	.+6      	; 0x13f8 <vfprintf+0x3bc>
    13f2:	95 33       	cpi	r25, 0x35	; 53
    13f4:	11 f4       	brne	.+4      	; 0x13fa <vfprintf+0x3be>
    13f6:	04 ff       	sbrs	r16, 4
    13f8:	81 e3       	ldi	r24, 0x31	; 49
    13fa:	b7 01       	movw	r22, r14
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	45 c0       	rjmp	.+138    	; 0x148a <vfprintf+0x44e>
    1400:	8a 81       	ldd	r24, Y+2	; 0x02
    1402:	81 33       	cpi	r24, 0x31	; 49
    1404:	09 f0       	breq	.+2      	; 0x1408 <vfprintf+0x3cc>
    1406:	0f 7e       	andi	r16, 0xEF	; 239
    1408:	b7 01       	movw	r22, r14
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	12 d3       	rcall	.+1572   	; 0x1a32 <fputc>
    140e:	11 11       	cpse	r17, r1
    1410:	05 c0       	rjmp	.+10     	; 0x141c <vfprintf+0x3e0>
    1412:	74 fe       	sbrs	r7, 4
    1414:	16 c0       	rjmp	.+44     	; 0x1442 <vfprintf+0x406>
    1416:	85 e4       	ldi	r24, 0x45	; 69
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	15 c0       	rjmp	.+42     	; 0x1446 <vfprintf+0x40a>
    141c:	b7 01       	movw	r22, r14
    141e:	8e e2       	ldi	r24, 0x2E	; 46
    1420:	90 e0       	ldi	r25, 0x00	; 0
    1422:	07 d3       	rcall	.+1550   	; 0x1a32 <fputc>
    1424:	82 e0       	ldi	r24, 0x02	; 2
    1426:	66 24       	eor	r6, r6
    1428:	63 94       	inc	r6
    142a:	68 0e       	add	r6, r24
    142c:	f4 01       	movw	r30, r8
    142e:	e8 0f       	add	r30, r24
    1430:	f1 1d       	adc	r31, r1
    1432:	80 81       	ld	r24, Z
    1434:	b7 01       	movw	r22, r14
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	fc d2       	rcall	.+1528   	; 0x1a32 <fputc>
    143a:	11 50       	subi	r17, 0x01	; 1
    143c:	51 f3       	breq	.-44     	; 0x1412 <vfprintf+0x3d6>
    143e:	86 2d       	mov	r24, r6
    1440:	f2 cf       	rjmp	.-28     	; 0x1426 <vfprintf+0x3ea>
    1442:	85 e6       	ldi	r24, 0x65	; 101
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	b7 01       	movw	r22, r14
    1448:	f4 d2       	rcall	.+1512   	; 0x1a32 <fputc>
    144a:	d7 fc       	sbrc	r13, 7
    144c:	05 c0       	rjmp	.+10     	; 0x1458 <vfprintf+0x41c>
    144e:	c1 14       	cp	r12, r1
    1450:	d1 04       	cpc	r13, r1
    1452:	39 f4       	brne	.+14     	; 0x1462 <vfprintf+0x426>
    1454:	04 ff       	sbrs	r16, 4
    1456:	05 c0       	rjmp	.+10     	; 0x1462 <vfprintf+0x426>
    1458:	d1 94       	neg	r13
    145a:	c1 94       	neg	r12
    145c:	d1 08       	sbc	r13, r1
    145e:	8d e2       	ldi	r24, 0x2D	; 45
    1460:	01 c0       	rjmp	.+2      	; 0x1464 <vfprintf+0x428>
    1462:	8b e2       	ldi	r24, 0x2B	; 43
    1464:	b7 01       	movw	r22, r14
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	e4 d2       	rcall	.+1480   	; 0x1a32 <fputc>
    146a:	80 e3       	ldi	r24, 0x30	; 48
    146c:	6a e0       	ldi	r22, 0x0A	; 10
    146e:	c6 16       	cp	r12, r22
    1470:	d1 04       	cpc	r13, r1
    1472:	2c f0       	brlt	.+10     	; 0x147e <vfprintf+0x442>
    1474:	8f 5f       	subi	r24, 0xFF	; 255
    1476:	fa e0       	ldi	r31, 0x0A	; 10
    1478:	cf 1a       	sub	r12, r31
    147a:	d1 08       	sbc	r13, r1
    147c:	f7 cf       	rjmp	.-18     	; 0x146c <vfprintf+0x430>
    147e:	b7 01       	movw	r22, r14
    1480:	90 e0       	ldi	r25, 0x00	; 0
    1482:	d7 d2       	rcall	.+1454   	; 0x1a32 <fputc>
    1484:	b7 01       	movw	r22, r14
    1486:	c6 01       	movw	r24, r12
    1488:	c0 96       	adiw	r24, 0x30	; 48
    148a:	d3 d2       	rcall	.+1446   	; 0x1a32 <fputc>
    148c:	36 c1       	rjmp	.+620    	; 0x16fa <vfprintf+0x6be>
    148e:	83 36       	cpi	r24, 0x63	; 99
    1490:	31 f0       	breq	.+12     	; 0x149e <vfprintf+0x462>
    1492:	83 37       	cpi	r24, 0x73	; 115
    1494:	79 f0       	breq	.+30     	; 0x14b4 <vfprintf+0x478>
    1496:	83 35       	cpi	r24, 0x53	; 83
    1498:	09 f0       	breq	.+2      	; 0x149c <vfprintf+0x460>
    149a:	54 c0       	rjmp	.+168    	; 0x1544 <vfprintf+0x508>
    149c:	20 c0       	rjmp	.+64     	; 0x14de <vfprintf+0x4a2>
    149e:	56 01       	movw	r10, r12
    14a0:	72 e0       	ldi	r23, 0x02	; 2
    14a2:	a7 0e       	add	r10, r23
    14a4:	b1 1c       	adc	r11, r1
    14a6:	f6 01       	movw	r30, r12
    14a8:	80 81       	ld	r24, Z
    14aa:	89 83       	std	Y+1, r24	; 0x01
    14ac:	01 e0       	ldi	r16, 0x01	; 1
    14ae:	10 e0       	ldi	r17, 0x00	; 0
    14b0:	64 01       	movw	r12, r8
    14b2:	13 c0       	rjmp	.+38     	; 0x14da <vfprintf+0x49e>
    14b4:	56 01       	movw	r10, r12
    14b6:	f2 e0       	ldi	r31, 0x02	; 2
    14b8:	af 0e       	add	r10, r31
    14ba:	b1 1c       	adc	r11, r1
    14bc:	f6 01       	movw	r30, r12
    14be:	c0 80       	ld	r12, Z
    14c0:	d1 80       	ldd	r13, Z+1	; 0x01
    14c2:	26 ff       	sbrs	r18, 6
    14c4:	03 c0       	rjmp	.+6      	; 0x14cc <vfprintf+0x490>
    14c6:	61 2f       	mov	r22, r17
    14c8:	70 e0       	ldi	r23, 0x00	; 0
    14ca:	02 c0       	rjmp	.+4      	; 0x14d0 <vfprintf+0x494>
    14cc:	6f ef       	ldi	r22, 0xFF	; 255
    14ce:	7f ef       	ldi	r23, 0xFF	; 255
    14d0:	c6 01       	movw	r24, r12
    14d2:	2b 8b       	std	Y+19, r18	; 0x13
    14d4:	59 d2       	rcall	.+1202   	; 0x1988 <strnlen>
    14d6:	8c 01       	movw	r16, r24
    14d8:	2b 89       	ldd	r18, Y+19	; 0x13
    14da:	2f 77       	andi	r18, 0x7F	; 127
    14dc:	14 c0       	rjmp	.+40     	; 0x1506 <vfprintf+0x4ca>
    14de:	56 01       	movw	r10, r12
    14e0:	f2 e0       	ldi	r31, 0x02	; 2
    14e2:	af 0e       	add	r10, r31
    14e4:	b1 1c       	adc	r11, r1
    14e6:	f6 01       	movw	r30, r12
    14e8:	c0 80       	ld	r12, Z
    14ea:	d1 80       	ldd	r13, Z+1	; 0x01
    14ec:	26 ff       	sbrs	r18, 6
    14ee:	03 c0       	rjmp	.+6      	; 0x14f6 <vfprintf+0x4ba>
    14f0:	61 2f       	mov	r22, r17
    14f2:	70 e0       	ldi	r23, 0x00	; 0
    14f4:	02 c0       	rjmp	.+4      	; 0x14fa <vfprintf+0x4be>
    14f6:	6f ef       	ldi	r22, 0xFF	; 255
    14f8:	7f ef       	ldi	r23, 0xFF	; 255
    14fa:	c6 01       	movw	r24, r12
    14fc:	2b 8b       	std	Y+19, r18	; 0x13
    14fe:	39 d2       	rcall	.+1138   	; 0x1972 <strnlen_P>
    1500:	8c 01       	movw	r16, r24
    1502:	2b 89       	ldd	r18, Y+19	; 0x13
    1504:	20 68       	ori	r18, 0x80	; 128
    1506:	72 2e       	mov	r7, r18
    1508:	23 fd       	sbrc	r18, 3
    150a:	18 c0       	rjmp	.+48     	; 0x153c <vfprintf+0x500>
    150c:	85 2d       	mov	r24, r5
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	08 17       	cp	r16, r24
    1512:	19 07       	cpc	r17, r25
    1514:	98 f4       	brcc	.+38     	; 0x153c <vfprintf+0x500>
    1516:	b7 01       	movw	r22, r14
    1518:	80 e2       	ldi	r24, 0x20	; 32
    151a:	90 e0       	ldi	r25, 0x00	; 0
    151c:	8a d2       	rcall	.+1300   	; 0x1a32 <fputc>
    151e:	5a 94       	dec	r5
    1520:	f5 cf       	rjmp	.-22     	; 0x150c <vfprintf+0x4d0>
    1522:	f6 01       	movw	r30, r12
    1524:	77 fc       	sbrc	r7, 7
    1526:	85 91       	lpm	r24, Z+
    1528:	77 fe       	sbrs	r7, 7
    152a:	81 91       	ld	r24, Z+
    152c:	6f 01       	movw	r12, r30
    152e:	b7 01       	movw	r22, r14
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	7f d2       	rcall	.+1278   	; 0x1a32 <fputc>
    1534:	51 10       	cpse	r5, r1
    1536:	5a 94       	dec	r5
    1538:	01 50       	subi	r16, 0x01	; 1
    153a:	11 09       	sbc	r17, r1
    153c:	01 15       	cp	r16, r1
    153e:	11 05       	cpc	r17, r1
    1540:	81 f7       	brne	.-32     	; 0x1522 <vfprintf+0x4e6>
    1542:	db c0       	rjmp	.+438    	; 0x16fa <vfprintf+0x6be>
    1544:	84 36       	cpi	r24, 0x64	; 100
    1546:	11 f0       	breq	.+4      	; 0x154c <vfprintf+0x510>
    1548:	89 36       	cpi	r24, 0x69	; 105
    154a:	49 f5       	brne	.+82     	; 0x159e <vfprintf+0x562>
    154c:	56 01       	movw	r10, r12
    154e:	27 ff       	sbrs	r18, 7
    1550:	09 c0       	rjmp	.+18     	; 0x1564 <vfprintf+0x528>
    1552:	f4 e0       	ldi	r31, 0x04	; 4
    1554:	af 0e       	add	r10, r31
    1556:	b1 1c       	adc	r11, r1
    1558:	f6 01       	movw	r30, r12
    155a:	60 81       	ld	r22, Z
    155c:	71 81       	ldd	r23, Z+1	; 0x01
    155e:	82 81       	ldd	r24, Z+2	; 0x02
    1560:	93 81       	ldd	r25, Z+3	; 0x03
    1562:	0a c0       	rjmp	.+20     	; 0x1578 <vfprintf+0x53c>
    1564:	f2 e0       	ldi	r31, 0x02	; 2
    1566:	af 0e       	add	r10, r31
    1568:	b1 1c       	adc	r11, r1
    156a:	f6 01       	movw	r30, r12
    156c:	60 81       	ld	r22, Z
    156e:	71 81       	ldd	r23, Z+1	; 0x01
    1570:	88 27       	eor	r24, r24
    1572:	77 fd       	sbrc	r23, 7
    1574:	80 95       	com	r24
    1576:	98 2f       	mov	r25, r24
    1578:	02 2f       	mov	r16, r18
    157a:	0f 76       	andi	r16, 0x6F	; 111
    157c:	97 ff       	sbrs	r25, 7
    157e:	08 c0       	rjmp	.+16     	; 0x1590 <vfprintf+0x554>
    1580:	90 95       	com	r25
    1582:	80 95       	com	r24
    1584:	70 95       	com	r23
    1586:	61 95       	neg	r22
    1588:	7f 4f       	sbci	r23, 0xFF	; 255
    158a:	8f 4f       	sbci	r24, 0xFF	; 255
    158c:	9f 4f       	sbci	r25, 0xFF	; 255
    158e:	00 68       	ori	r16, 0x80	; 128
    1590:	2a e0       	ldi	r18, 0x0A	; 10
    1592:	30 e0       	ldi	r19, 0x00	; 0
    1594:	a4 01       	movw	r20, r8
    1596:	ac d2       	rcall	.+1368   	; 0x1af0 <__ultoa_invert>
    1598:	c8 2e       	mov	r12, r24
    159a:	c8 18       	sub	r12, r8
    159c:	3d c0       	rjmp	.+122    	; 0x1618 <vfprintf+0x5dc>
    159e:	02 2f       	mov	r16, r18
    15a0:	85 37       	cpi	r24, 0x75	; 117
    15a2:	21 f4       	brne	.+8      	; 0x15ac <vfprintf+0x570>
    15a4:	0f 7e       	andi	r16, 0xEF	; 239
    15a6:	2a e0       	ldi	r18, 0x0A	; 10
    15a8:	30 e0       	ldi	r19, 0x00	; 0
    15aa:	1d c0       	rjmp	.+58     	; 0x15e6 <vfprintf+0x5aa>
    15ac:	09 7f       	andi	r16, 0xF9	; 249
    15ae:	8f 36       	cpi	r24, 0x6F	; 111
    15b0:	91 f0       	breq	.+36     	; 0x15d6 <vfprintf+0x59a>
    15b2:	18 f4       	brcc	.+6      	; 0x15ba <vfprintf+0x57e>
    15b4:	88 35       	cpi	r24, 0x58	; 88
    15b6:	59 f0       	breq	.+22     	; 0x15ce <vfprintf+0x592>
    15b8:	a9 c0       	rjmp	.+338    	; 0x170c <vfprintf+0x6d0>
    15ba:	80 37       	cpi	r24, 0x70	; 112
    15bc:	19 f0       	breq	.+6      	; 0x15c4 <vfprintf+0x588>
    15be:	88 37       	cpi	r24, 0x78	; 120
    15c0:	11 f0       	breq	.+4      	; 0x15c6 <vfprintf+0x58a>
    15c2:	a4 c0       	rjmp	.+328    	; 0x170c <vfprintf+0x6d0>
    15c4:	00 61       	ori	r16, 0x10	; 16
    15c6:	04 ff       	sbrs	r16, 4
    15c8:	09 c0       	rjmp	.+18     	; 0x15dc <vfprintf+0x5a0>
    15ca:	04 60       	ori	r16, 0x04	; 4
    15cc:	07 c0       	rjmp	.+14     	; 0x15dc <vfprintf+0x5a0>
    15ce:	24 ff       	sbrs	r18, 4
    15d0:	08 c0       	rjmp	.+16     	; 0x15e2 <vfprintf+0x5a6>
    15d2:	06 60       	ori	r16, 0x06	; 6
    15d4:	06 c0       	rjmp	.+12     	; 0x15e2 <vfprintf+0x5a6>
    15d6:	28 e0       	ldi	r18, 0x08	; 8
    15d8:	30 e0       	ldi	r19, 0x00	; 0
    15da:	05 c0       	rjmp	.+10     	; 0x15e6 <vfprintf+0x5aa>
    15dc:	20 e1       	ldi	r18, 0x10	; 16
    15de:	30 e0       	ldi	r19, 0x00	; 0
    15e0:	02 c0       	rjmp	.+4      	; 0x15e6 <vfprintf+0x5aa>
    15e2:	20 e1       	ldi	r18, 0x10	; 16
    15e4:	32 e0       	ldi	r19, 0x02	; 2
    15e6:	56 01       	movw	r10, r12
    15e8:	07 ff       	sbrs	r16, 7
    15ea:	09 c0       	rjmp	.+18     	; 0x15fe <vfprintf+0x5c2>
    15ec:	f4 e0       	ldi	r31, 0x04	; 4
    15ee:	af 0e       	add	r10, r31
    15f0:	b1 1c       	adc	r11, r1
    15f2:	f6 01       	movw	r30, r12
    15f4:	60 81       	ld	r22, Z
    15f6:	71 81       	ldd	r23, Z+1	; 0x01
    15f8:	82 81       	ldd	r24, Z+2	; 0x02
    15fa:	93 81       	ldd	r25, Z+3	; 0x03
    15fc:	08 c0       	rjmp	.+16     	; 0x160e <vfprintf+0x5d2>
    15fe:	f2 e0       	ldi	r31, 0x02	; 2
    1600:	af 0e       	add	r10, r31
    1602:	b1 1c       	adc	r11, r1
    1604:	f6 01       	movw	r30, r12
    1606:	60 81       	ld	r22, Z
    1608:	71 81       	ldd	r23, Z+1	; 0x01
    160a:	80 e0       	ldi	r24, 0x00	; 0
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	a4 01       	movw	r20, r8
    1610:	6f d2       	rcall	.+1246   	; 0x1af0 <__ultoa_invert>
    1612:	c8 2e       	mov	r12, r24
    1614:	c8 18       	sub	r12, r8
    1616:	0f 77       	andi	r16, 0x7F	; 127
    1618:	06 ff       	sbrs	r16, 6
    161a:	0b c0       	rjmp	.+22     	; 0x1632 <vfprintf+0x5f6>
    161c:	20 2f       	mov	r18, r16
    161e:	2e 7f       	andi	r18, 0xFE	; 254
    1620:	c1 16       	cp	r12, r17
    1622:	50 f4       	brcc	.+20     	; 0x1638 <vfprintf+0x5fc>
    1624:	04 ff       	sbrs	r16, 4
    1626:	0a c0       	rjmp	.+20     	; 0x163c <vfprintf+0x600>
    1628:	02 fd       	sbrc	r16, 2
    162a:	08 c0       	rjmp	.+16     	; 0x163c <vfprintf+0x600>
    162c:	20 2f       	mov	r18, r16
    162e:	2e 7e       	andi	r18, 0xEE	; 238
    1630:	05 c0       	rjmp	.+10     	; 0x163c <vfprintf+0x600>
    1632:	dc 2c       	mov	r13, r12
    1634:	20 2f       	mov	r18, r16
    1636:	03 c0       	rjmp	.+6      	; 0x163e <vfprintf+0x602>
    1638:	dc 2c       	mov	r13, r12
    163a:	01 c0       	rjmp	.+2      	; 0x163e <vfprintf+0x602>
    163c:	d1 2e       	mov	r13, r17
    163e:	24 ff       	sbrs	r18, 4
    1640:	0d c0       	rjmp	.+26     	; 0x165c <vfprintf+0x620>
    1642:	fe 01       	movw	r30, r28
    1644:	ec 0d       	add	r30, r12
    1646:	f1 1d       	adc	r31, r1
    1648:	80 81       	ld	r24, Z
    164a:	80 33       	cpi	r24, 0x30	; 48
    164c:	11 f4       	brne	.+4      	; 0x1652 <vfprintf+0x616>
    164e:	29 7e       	andi	r18, 0xE9	; 233
    1650:	09 c0       	rjmp	.+18     	; 0x1664 <vfprintf+0x628>
    1652:	22 ff       	sbrs	r18, 2
    1654:	06 c0       	rjmp	.+12     	; 0x1662 <vfprintf+0x626>
    1656:	d3 94       	inc	r13
    1658:	d3 94       	inc	r13
    165a:	04 c0       	rjmp	.+8      	; 0x1664 <vfprintf+0x628>
    165c:	82 2f       	mov	r24, r18
    165e:	86 78       	andi	r24, 0x86	; 134
    1660:	09 f0       	breq	.+2      	; 0x1664 <vfprintf+0x628>
    1662:	d3 94       	inc	r13
    1664:	23 fd       	sbrc	r18, 3
    1666:	12 c0       	rjmp	.+36     	; 0x168c <vfprintf+0x650>
    1668:	20 ff       	sbrs	r18, 0
    166a:	06 c0       	rjmp	.+12     	; 0x1678 <vfprintf+0x63c>
    166c:	1c 2d       	mov	r17, r12
    166e:	d5 14       	cp	r13, r5
    1670:	18 f4       	brcc	.+6      	; 0x1678 <vfprintf+0x63c>
    1672:	15 0d       	add	r17, r5
    1674:	1d 19       	sub	r17, r13
    1676:	d5 2c       	mov	r13, r5
    1678:	d5 14       	cp	r13, r5
    167a:	60 f4       	brcc	.+24     	; 0x1694 <vfprintf+0x658>
    167c:	b7 01       	movw	r22, r14
    167e:	80 e2       	ldi	r24, 0x20	; 32
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	2b 8b       	std	Y+19, r18	; 0x13
    1684:	d6 d1       	rcall	.+940    	; 0x1a32 <fputc>
    1686:	d3 94       	inc	r13
    1688:	2b 89       	ldd	r18, Y+19	; 0x13
    168a:	f6 cf       	rjmp	.-20     	; 0x1678 <vfprintf+0x63c>
    168c:	d5 14       	cp	r13, r5
    168e:	10 f4       	brcc	.+4      	; 0x1694 <vfprintf+0x658>
    1690:	5d 18       	sub	r5, r13
    1692:	01 c0       	rjmp	.+2      	; 0x1696 <vfprintf+0x65a>
    1694:	51 2c       	mov	r5, r1
    1696:	24 ff       	sbrs	r18, 4
    1698:	11 c0       	rjmp	.+34     	; 0x16bc <vfprintf+0x680>
    169a:	b7 01       	movw	r22, r14
    169c:	80 e3       	ldi	r24, 0x30	; 48
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	2b 8b       	std	Y+19, r18	; 0x13
    16a2:	c7 d1       	rcall	.+910    	; 0x1a32 <fputc>
    16a4:	2b 89       	ldd	r18, Y+19	; 0x13
    16a6:	22 ff       	sbrs	r18, 2
    16a8:	16 c0       	rjmp	.+44     	; 0x16d6 <vfprintf+0x69a>
    16aa:	21 ff       	sbrs	r18, 1
    16ac:	03 c0       	rjmp	.+6      	; 0x16b4 <vfprintf+0x678>
    16ae:	88 e5       	ldi	r24, 0x58	; 88
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	02 c0       	rjmp	.+4      	; 0x16b8 <vfprintf+0x67c>
    16b4:	88 e7       	ldi	r24, 0x78	; 120
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	b7 01       	movw	r22, r14
    16ba:	0c c0       	rjmp	.+24     	; 0x16d4 <vfprintf+0x698>
    16bc:	82 2f       	mov	r24, r18
    16be:	86 78       	andi	r24, 0x86	; 134
    16c0:	51 f0       	breq	.+20     	; 0x16d6 <vfprintf+0x69a>
    16c2:	21 fd       	sbrc	r18, 1
    16c4:	02 c0       	rjmp	.+4      	; 0x16ca <vfprintf+0x68e>
    16c6:	80 e2       	ldi	r24, 0x20	; 32
    16c8:	01 c0       	rjmp	.+2      	; 0x16cc <vfprintf+0x690>
    16ca:	8b e2       	ldi	r24, 0x2B	; 43
    16cc:	27 fd       	sbrc	r18, 7
    16ce:	8d e2       	ldi	r24, 0x2D	; 45
    16d0:	b7 01       	movw	r22, r14
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	ae d1       	rcall	.+860    	; 0x1a32 <fputc>
    16d6:	c1 16       	cp	r12, r17
    16d8:	30 f4       	brcc	.+12     	; 0x16e6 <vfprintf+0x6aa>
    16da:	b7 01       	movw	r22, r14
    16dc:	80 e3       	ldi	r24, 0x30	; 48
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	a8 d1       	rcall	.+848    	; 0x1a32 <fputc>
    16e2:	11 50       	subi	r17, 0x01	; 1
    16e4:	f8 cf       	rjmp	.-16     	; 0x16d6 <vfprintf+0x69a>
    16e6:	ca 94       	dec	r12
    16e8:	f4 01       	movw	r30, r8
    16ea:	ec 0d       	add	r30, r12
    16ec:	f1 1d       	adc	r31, r1
    16ee:	80 81       	ld	r24, Z
    16f0:	b7 01       	movw	r22, r14
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	9e d1       	rcall	.+828    	; 0x1a32 <fputc>
    16f6:	c1 10       	cpse	r12, r1
    16f8:	f6 cf       	rjmp	.-20     	; 0x16e6 <vfprintf+0x6aa>
    16fa:	55 20       	and	r5, r5
    16fc:	09 f4       	brne	.+2      	; 0x1700 <vfprintf+0x6c4>
    16fe:	dd cc       	rjmp	.-1606   	; 0x10ba <vfprintf+0x7e>
    1700:	b7 01       	movw	r22, r14
    1702:	80 e2       	ldi	r24, 0x20	; 32
    1704:	90 e0       	ldi	r25, 0x00	; 0
    1706:	95 d1       	rcall	.+810    	; 0x1a32 <fputc>
    1708:	5a 94       	dec	r5
    170a:	f7 cf       	rjmp	.-18     	; 0x16fa <vfprintf+0x6be>
    170c:	f7 01       	movw	r30, r14
    170e:	86 81       	ldd	r24, Z+6	; 0x06
    1710:	97 81       	ldd	r25, Z+7	; 0x07
    1712:	02 c0       	rjmp	.+4      	; 0x1718 <vfprintf+0x6dc>
    1714:	8f ef       	ldi	r24, 0xFF	; 255
    1716:	9f ef       	ldi	r25, 0xFF	; 255
    1718:	63 96       	adiw	r28, 0x13	; 19
    171a:	0f b6       	in	r0, 0x3f	; 63
    171c:	f8 94       	cli
    171e:	de bf       	out	0x3e, r29	; 62
    1720:	0f be       	out	0x3f, r0	; 63
    1722:	cd bf       	out	0x3d, r28	; 61
    1724:	df 91       	pop	r29
    1726:	cf 91       	pop	r28
    1728:	1f 91       	pop	r17
    172a:	0f 91       	pop	r16
    172c:	ff 90       	pop	r15
    172e:	ef 90       	pop	r14
    1730:	df 90       	pop	r13
    1732:	cf 90       	pop	r12
    1734:	bf 90       	pop	r11
    1736:	af 90       	pop	r10
    1738:	9f 90       	pop	r9
    173a:	8f 90       	pop	r8
    173c:	7f 90       	pop	r7
    173e:	6f 90       	pop	r6
    1740:	5f 90       	pop	r5
    1742:	4f 90       	pop	r4
    1744:	3f 90       	pop	r3
    1746:	2f 90       	pop	r2
    1748:	08 95       	ret

0000174a <__divmodhi4>:
    174a:	97 fb       	bst	r25, 7
    174c:	07 2e       	mov	r0, r23
    174e:	16 f4       	brtc	.+4      	; 0x1754 <__divmodhi4+0xa>
    1750:	00 94       	com	r0
    1752:	06 d0       	rcall	.+12     	; 0x1760 <__divmodhi4_neg1>
    1754:	77 fd       	sbrc	r23, 7
    1756:	08 d0       	rcall	.+16     	; 0x1768 <__divmodhi4_neg2>
    1758:	20 d0       	rcall	.+64     	; 0x179a <__udivmodhi4>
    175a:	07 fc       	sbrc	r0, 7
    175c:	05 d0       	rcall	.+10     	; 0x1768 <__divmodhi4_neg2>
    175e:	3e f4       	brtc	.+14     	; 0x176e <__divmodhi4_exit>

00001760 <__divmodhi4_neg1>:
    1760:	90 95       	com	r25
    1762:	81 95       	neg	r24
    1764:	9f 4f       	sbci	r25, 0xFF	; 255
    1766:	08 95       	ret

00001768 <__divmodhi4_neg2>:
    1768:	70 95       	com	r23
    176a:	61 95       	neg	r22
    176c:	7f 4f       	sbci	r23, 0xFF	; 255

0000176e <__divmodhi4_exit>:
    176e:	08 95       	ret

00001770 <__tablejump2__>:
    1770:	ee 0f       	add	r30, r30
    1772:	ff 1f       	adc	r31, r31

00001774 <__tablejump__>:
    1774:	05 90       	lpm	r0, Z+
    1776:	f4 91       	lpm	r31, Z
    1778:	e0 2d       	mov	r30, r0
    177a:	19 94       	eijmp

0000177c <__umulhisi3>:
    177c:	a2 9f       	mul	r26, r18
    177e:	b0 01       	movw	r22, r0
    1780:	b3 9f       	mul	r27, r19
    1782:	c0 01       	movw	r24, r0
    1784:	a3 9f       	mul	r26, r19
    1786:	70 0d       	add	r23, r0
    1788:	81 1d       	adc	r24, r1
    178a:	11 24       	eor	r1, r1
    178c:	91 1d       	adc	r25, r1
    178e:	b2 9f       	mul	r27, r18
    1790:	70 0d       	add	r23, r0
    1792:	81 1d       	adc	r24, r1
    1794:	11 24       	eor	r1, r1
    1796:	91 1d       	adc	r25, r1
    1798:	08 95       	ret

0000179a <__udivmodhi4>:
    179a:	aa 1b       	sub	r26, r26
    179c:	bb 1b       	sub	r27, r27
    179e:	51 e1       	ldi	r21, 0x11	; 17
    17a0:	07 c0       	rjmp	.+14     	; 0x17b0 <__udivmodhi4_ep>

000017a2 <__udivmodhi4_loop>:
    17a2:	aa 1f       	adc	r26, r26
    17a4:	bb 1f       	adc	r27, r27
    17a6:	a6 17       	cp	r26, r22
    17a8:	b7 07       	cpc	r27, r23
    17aa:	10 f0       	brcs	.+4      	; 0x17b0 <__udivmodhi4_ep>
    17ac:	a6 1b       	sub	r26, r22
    17ae:	b7 0b       	sbc	r27, r23

000017b0 <__udivmodhi4_ep>:
    17b0:	88 1f       	adc	r24, r24
    17b2:	99 1f       	adc	r25, r25
    17b4:	5a 95       	dec	r21
    17b6:	a9 f7       	brne	.-22     	; 0x17a2 <__udivmodhi4_loop>
    17b8:	80 95       	com	r24
    17ba:	90 95       	com	r25
    17bc:	bc 01       	movw	r22, r24
    17be:	cd 01       	movw	r24, r26
    17c0:	08 95       	ret

000017c2 <__ftoa_engine>:
    17c2:	28 30       	cpi	r18, 0x08	; 8
    17c4:	08 f0       	brcs	.+2      	; 0x17c8 <__ftoa_engine+0x6>
    17c6:	27 e0       	ldi	r18, 0x07	; 7
    17c8:	33 27       	eor	r19, r19
    17ca:	da 01       	movw	r26, r20
    17cc:	99 0f       	add	r25, r25
    17ce:	31 1d       	adc	r19, r1
    17d0:	87 fd       	sbrc	r24, 7
    17d2:	91 60       	ori	r25, 0x01	; 1
    17d4:	00 96       	adiw	r24, 0x00	; 0
    17d6:	61 05       	cpc	r22, r1
    17d8:	71 05       	cpc	r23, r1
    17da:	39 f4       	brne	.+14     	; 0x17ea <__ftoa_engine+0x28>
    17dc:	32 60       	ori	r19, 0x02	; 2
    17de:	2e 5f       	subi	r18, 0xFE	; 254
    17e0:	3d 93       	st	X+, r19
    17e2:	30 e3       	ldi	r19, 0x30	; 48
    17e4:	2a 95       	dec	r18
    17e6:	e1 f7       	brne	.-8      	; 0x17e0 <__ftoa_engine+0x1e>
    17e8:	08 95       	ret
    17ea:	9f 3f       	cpi	r25, 0xFF	; 255
    17ec:	30 f0       	brcs	.+12     	; 0x17fa <__ftoa_engine+0x38>
    17ee:	80 38       	cpi	r24, 0x80	; 128
    17f0:	71 05       	cpc	r23, r1
    17f2:	61 05       	cpc	r22, r1
    17f4:	09 f0       	breq	.+2      	; 0x17f8 <__ftoa_engine+0x36>
    17f6:	3c 5f       	subi	r19, 0xFC	; 252
    17f8:	3c 5f       	subi	r19, 0xFC	; 252
    17fa:	3d 93       	st	X+, r19
    17fc:	91 30       	cpi	r25, 0x01	; 1
    17fe:	08 f0       	brcs	.+2      	; 0x1802 <__ftoa_engine+0x40>
    1800:	80 68       	ori	r24, 0x80	; 128
    1802:	91 1d       	adc	r25, r1
    1804:	df 93       	push	r29
    1806:	cf 93       	push	r28
    1808:	1f 93       	push	r17
    180a:	0f 93       	push	r16
    180c:	ff 92       	push	r15
    180e:	ef 92       	push	r14
    1810:	19 2f       	mov	r17, r25
    1812:	98 7f       	andi	r25, 0xF8	; 248
    1814:	96 95       	lsr	r25
    1816:	e9 2f       	mov	r30, r25
    1818:	96 95       	lsr	r25
    181a:	96 95       	lsr	r25
    181c:	e9 0f       	add	r30, r25
    181e:	ff 27       	eor	r31, r31
    1820:	e8 51       	subi	r30, 0x18	; 24
    1822:	fe 4f       	sbci	r31, 0xFE	; 254
    1824:	99 27       	eor	r25, r25
    1826:	33 27       	eor	r19, r19
    1828:	ee 24       	eor	r14, r14
    182a:	ff 24       	eor	r15, r15
    182c:	a7 01       	movw	r20, r14
    182e:	e7 01       	movw	r28, r14
    1830:	05 90       	lpm	r0, Z+
    1832:	08 94       	sec
    1834:	07 94       	ror	r0
    1836:	28 f4       	brcc	.+10     	; 0x1842 <__ftoa_engine+0x80>
    1838:	36 0f       	add	r19, r22
    183a:	e7 1e       	adc	r14, r23
    183c:	f8 1e       	adc	r15, r24
    183e:	49 1f       	adc	r20, r25
    1840:	51 1d       	adc	r21, r1
    1842:	66 0f       	add	r22, r22
    1844:	77 1f       	adc	r23, r23
    1846:	88 1f       	adc	r24, r24
    1848:	99 1f       	adc	r25, r25
    184a:	06 94       	lsr	r0
    184c:	a1 f7       	brne	.-24     	; 0x1836 <__ftoa_engine+0x74>
    184e:	05 90       	lpm	r0, Z+
    1850:	07 94       	ror	r0
    1852:	28 f4       	brcc	.+10     	; 0x185e <__ftoa_engine+0x9c>
    1854:	e7 0e       	add	r14, r23
    1856:	f8 1e       	adc	r15, r24
    1858:	49 1f       	adc	r20, r25
    185a:	56 1f       	adc	r21, r22
    185c:	c1 1d       	adc	r28, r1
    185e:	77 0f       	add	r23, r23
    1860:	88 1f       	adc	r24, r24
    1862:	99 1f       	adc	r25, r25
    1864:	66 1f       	adc	r22, r22
    1866:	06 94       	lsr	r0
    1868:	a1 f7       	brne	.-24     	; 0x1852 <__ftoa_engine+0x90>
    186a:	05 90       	lpm	r0, Z+
    186c:	07 94       	ror	r0
    186e:	28 f4       	brcc	.+10     	; 0x187a <__ftoa_engine+0xb8>
    1870:	f8 0e       	add	r15, r24
    1872:	49 1f       	adc	r20, r25
    1874:	56 1f       	adc	r21, r22
    1876:	c7 1f       	adc	r28, r23
    1878:	d1 1d       	adc	r29, r1
    187a:	88 0f       	add	r24, r24
    187c:	99 1f       	adc	r25, r25
    187e:	66 1f       	adc	r22, r22
    1880:	77 1f       	adc	r23, r23
    1882:	06 94       	lsr	r0
    1884:	a1 f7       	brne	.-24     	; 0x186e <__ftoa_engine+0xac>
    1886:	05 90       	lpm	r0, Z+
    1888:	07 94       	ror	r0
    188a:	20 f4       	brcc	.+8      	; 0x1894 <__ftoa_engine+0xd2>
    188c:	49 0f       	add	r20, r25
    188e:	56 1f       	adc	r21, r22
    1890:	c7 1f       	adc	r28, r23
    1892:	d8 1f       	adc	r29, r24
    1894:	99 0f       	add	r25, r25
    1896:	66 1f       	adc	r22, r22
    1898:	77 1f       	adc	r23, r23
    189a:	88 1f       	adc	r24, r24
    189c:	06 94       	lsr	r0
    189e:	a9 f7       	brne	.-22     	; 0x188a <__ftoa_engine+0xc8>
    18a0:	84 91       	lpm	r24, Z
    18a2:	10 95       	com	r17
    18a4:	17 70       	andi	r17, 0x07	; 7
    18a6:	41 f0       	breq	.+16     	; 0x18b8 <__ftoa_engine+0xf6>
    18a8:	d6 95       	lsr	r29
    18aa:	c7 95       	ror	r28
    18ac:	57 95       	ror	r21
    18ae:	47 95       	ror	r20
    18b0:	f7 94       	ror	r15
    18b2:	e7 94       	ror	r14
    18b4:	1a 95       	dec	r17
    18b6:	c1 f7       	brne	.-16     	; 0x18a8 <__ftoa_engine+0xe6>
    18b8:	ee e8       	ldi	r30, 0x8E	; 142
    18ba:	f1 e0       	ldi	r31, 0x01	; 1
    18bc:	68 94       	set
    18be:	15 90       	lpm	r1, Z+
    18c0:	15 91       	lpm	r17, Z+
    18c2:	35 91       	lpm	r19, Z+
    18c4:	65 91       	lpm	r22, Z+
    18c6:	95 91       	lpm	r25, Z+
    18c8:	05 90       	lpm	r0, Z+
    18ca:	7f e2       	ldi	r23, 0x2F	; 47
    18cc:	73 95       	inc	r23
    18ce:	e1 18       	sub	r14, r1
    18d0:	f1 0a       	sbc	r15, r17
    18d2:	43 0b       	sbc	r20, r19
    18d4:	56 0b       	sbc	r21, r22
    18d6:	c9 0b       	sbc	r28, r25
    18d8:	d0 09       	sbc	r29, r0
    18da:	c0 f7       	brcc	.-16     	; 0x18cc <__ftoa_engine+0x10a>
    18dc:	e1 0c       	add	r14, r1
    18de:	f1 1e       	adc	r15, r17
    18e0:	43 1f       	adc	r20, r19
    18e2:	56 1f       	adc	r21, r22
    18e4:	c9 1f       	adc	r28, r25
    18e6:	d0 1d       	adc	r29, r0
    18e8:	7e f4       	brtc	.+30     	; 0x1908 <__ftoa_engine+0x146>
    18ea:	70 33       	cpi	r23, 0x30	; 48
    18ec:	11 f4       	brne	.+4      	; 0x18f2 <__ftoa_engine+0x130>
    18ee:	8a 95       	dec	r24
    18f0:	e6 cf       	rjmp	.-52     	; 0x18be <__ftoa_engine+0xfc>
    18f2:	e8 94       	clt
    18f4:	01 50       	subi	r16, 0x01	; 1
    18f6:	30 f0       	brcs	.+12     	; 0x1904 <__ftoa_engine+0x142>
    18f8:	08 0f       	add	r16, r24
    18fa:	0a f4       	brpl	.+2      	; 0x18fe <__ftoa_engine+0x13c>
    18fc:	00 27       	eor	r16, r16
    18fe:	02 17       	cp	r16, r18
    1900:	08 f4       	brcc	.+2      	; 0x1904 <__ftoa_engine+0x142>
    1902:	20 2f       	mov	r18, r16
    1904:	23 95       	inc	r18
    1906:	02 2f       	mov	r16, r18
    1908:	7a 33       	cpi	r23, 0x3A	; 58
    190a:	28 f0       	brcs	.+10     	; 0x1916 <__ftoa_engine+0x154>
    190c:	79 e3       	ldi	r23, 0x39	; 57
    190e:	7d 93       	st	X+, r23
    1910:	2a 95       	dec	r18
    1912:	e9 f7       	brne	.-6      	; 0x190e <__ftoa_engine+0x14c>
    1914:	10 c0       	rjmp	.+32     	; 0x1936 <__ftoa_engine+0x174>
    1916:	7d 93       	st	X+, r23
    1918:	2a 95       	dec	r18
    191a:	89 f6       	brne	.-94     	; 0x18be <__ftoa_engine+0xfc>
    191c:	06 94       	lsr	r0
    191e:	97 95       	ror	r25
    1920:	67 95       	ror	r22
    1922:	37 95       	ror	r19
    1924:	17 95       	ror	r17
    1926:	17 94       	ror	r1
    1928:	e1 18       	sub	r14, r1
    192a:	f1 0a       	sbc	r15, r17
    192c:	43 0b       	sbc	r20, r19
    192e:	56 0b       	sbc	r21, r22
    1930:	c9 0b       	sbc	r28, r25
    1932:	d0 09       	sbc	r29, r0
    1934:	98 f0       	brcs	.+38     	; 0x195c <__ftoa_engine+0x19a>
    1936:	23 95       	inc	r18
    1938:	7e 91       	ld	r23, -X
    193a:	73 95       	inc	r23
    193c:	7a 33       	cpi	r23, 0x3A	; 58
    193e:	08 f0       	brcs	.+2      	; 0x1942 <__ftoa_engine+0x180>
    1940:	70 e3       	ldi	r23, 0x30	; 48
    1942:	7c 93       	st	X, r23
    1944:	20 13       	cpse	r18, r16
    1946:	b8 f7       	brcc	.-18     	; 0x1936 <__ftoa_engine+0x174>
    1948:	7e 91       	ld	r23, -X
    194a:	70 61       	ori	r23, 0x10	; 16
    194c:	7d 93       	st	X+, r23
    194e:	30 f0       	brcs	.+12     	; 0x195c <__ftoa_engine+0x19a>
    1950:	83 95       	inc	r24
    1952:	71 e3       	ldi	r23, 0x31	; 49
    1954:	7d 93       	st	X+, r23
    1956:	70 e3       	ldi	r23, 0x30	; 48
    1958:	2a 95       	dec	r18
    195a:	e1 f7       	brne	.-8      	; 0x1954 <__ftoa_engine+0x192>
    195c:	11 24       	eor	r1, r1
    195e:	ef 90       	pop	r14
    1960:	ff 90       	pop	r15
    1962:	0f 91       	pop	r16
    1964:	1f 91       	pop	r17
    1966:	cf 91       	pop	r28
    1968:	df 91       	pop	r29
    196a:	99 27       	eor	r25, r25
    196c:	87 fd       	sbrc	r24, 7
    196e:	90 95       	com	r25
    1970:	08 95       	ret

00001972 <strnlen_P>:
    1972:	fc 01       	movw	r30, r24
    1974:	05 90       	lpm	r0, Z+
    1976:	61 50       	subi	r22, 0x01	; 1
    1978:	70 40       	sbci	r23, 0x00	; 0
    197a:	01 10       	cpse	r0, r1
    197c:	d8 f7       	brcc	.-10     	; 0x1974 <strnlen_P+0x2>
    197e:	80 95       	com	r24
    1980:	90 95       	com	r25
    1982:	8e 0f       	add	r24, r30
    1984:	9f 1f       	adc	r25, r31
    1986:	08 95       	ret

00001988 <strnlen>:
    1988:	fc 01       	movw	r30, r24
    198a:	61 50       	subi	r22, 0x01	; 1
    198c:	70 40       	sbci	r23, 0x00	; 0
    198e:	01 90       	ld	r0, Z+
    1990:	01 10       	cpse	r0, r1
    1992:	d8 f7       	brcc	.-10     	; 0x198a <strnlen+0x2>
    1994:	80 95       	com	r24
    1996:	90 95       	com	r25
    1998:	8e 0f       	add	r24, r30
    199a:	9f 1f       	adc	r25, r31
    199c:	08 95       	ret

0000199e <fdevopen>:
    199e:	0f 93       	push	r16
    19a0:	1f 93       	push	r17
    19a2:	cf 93       	push	r28
    19a4:	df 93       	push	r29
    19a6:	ec 01       	movw	r28, r24
    19a8:	8b 01       	movw	r16, r22
    19aa:	00 97       	sbiw	r24, 0x00	; 0
    19ac:	31 f4       	brne	.+12     	; 0x19ba <fdevopen+0x1c>
    19ae:	61 15       	cp	r22, r1
    19b0:	71 05       	cpc	r23, r1
    19b2:	19 f4       	brne	.+6      	; 0x19ba <fdevopen+0x1c>
    19b4:	80 e0       	ldi	r24, 0x00	; 0
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	37 c0       	rjmp	.+110    	; 0x1a28 <fdevopen+0x8a>
    19ba:	6e e0       	ldi	r22, 0x0E	; 14
    19bc:	70 e0       	ldi	r23, 0x00	; 0
    19be:	81 e0       	ldi	r24, 0x01	; 1
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	f4 d0       	rcall	.+488    	; 0x1bac <calloc>
    19c4:	fc 01       	movw	r30, r24
    19c6:	00 97       	sbiw	r24, 0x00	; 0
    19c8:	a9 f3       	breq	.-22     	; 0x19b4 <fdevopen+0x16>
    19ca:	80 e8       	ldi	r24, 0x80	; 128
    19cc:	83 83       	std	Z+3, r24	; 0x03
    19ce:	01 15       	cp	r16, r1
    19d0:	11 05       	cpc	r17, r1
    19d2:	71 f0       	breq	.+28     	; 0x19f0 <fdevopen+0x52>
    19d4:	13 87       	std	Z+11, r17	; 0x0b
    19d6:	02 87       	std	Z+10, r16	; 0x0a
    19d8:	81 e8       	ldi	r24, 0x81	; 129
    19da:	83 83       	std	Z+3, r24	; 0x03
    19dc:	80 91 ae 02 	lds	r24, 0x02AE
    19e0:	90 91 af 02 	lds	r25, 0x02AF
    19e4:	89 2b       	or	r24, r25
    19e6:	21 f4       	brne	.+8      	; 0x19f0 <fdevopen+0x52>
    19e8:	f0 93 af 02 	sts	0x02AF, r31
    19ec:	e0 93 ae 02 	sts	0x02AE, r30
    19f0:	20 97       	sbiw	r28, 0x00	; 0
    19f2:	c9 f0       	breq	.+50     	; 0x1a26 <fdevopen+0x88>
    19f4:	d1 87       	std	Z+9, r29	; 0x09
    19f6:	c0 87       	std	Z+8, r28	; 0x08
    19f8:	83 81       	ldd	r24, Z+3	; 0x03
    19fa:	82 60       	ori	r24, 0x02	; 2
    19fc:	83 83       	std	Z+3, r24	; 0x03
    19fe:	80 91 b0 02 	lds	r24, 0x02B0
    1a02:	90 91 b1 02 	lds	r25, 0x02B1
    1a06:	89 2b       	or	r24, r25
    1a08:	71 f4       	brne	.+28     	; 0x1a26 <fdevopen+0x88>
    1a0a:	f0 93 b1 02 	sts	0x02B1, r31
    1a0e:	e0 93 b0 02 	sts	0x02B0, r30
    1a12:	80 91 b2 02 	lds	r24, 0x02B2
    1a16:	90 91 b3 02 	lds	r25, 0x02B3
    1a1a:	89 2b       	or	r24, r25
    1a1c:	21 f4       	brne	.+8      	; 0x1a26 <fdevopen+0x88>
    1a1e:	f0 93 b3 02 	sts	0x02B3, r31
    1a22:	e0 93 b2 02 	sts	0x02B2, r30
    1a26:	cf 01       	movw	r24, r30
    1a28:	df 91       	pop	r29
    1a2a:	cf 91       	pop	r28
    1a2c:	1f 91       	pop	r17
    1a2e:	0f 91       	pop	r16
    1a30:	08 95       	ret

00001a32 <fputc>:
    1a32:	0f 93       	push	r16
    1a34:	1f 93       	push	r17
    1a36:	cf 93       	push	r28
    1a38:	df 93       	push	r29
    1a3a:	18 2f       	mov	r17, r24
    1a3c:	09 2f       	mov	r16, r25
    1a3e:	eb 01       	movw	r28, r22
    1a40:	8b 81       	ldd	r24, Y+3	; 0x03
    1a42:	81 fd       	sbrc	r24, 1
    1a44:	03 c0       	rjmp	.+6      	; 0x1a4c <fputc+0x1a>
    1a46:	8f ef       	ldi	r24, 0xFF	; 255
    1a48:	9f ef       	ldi	r25, 0xFF	; 255
    1a4a:	20 c0       	rjmp	.+64     	; 0x1a8c <fputc+0x5a>
    1a4c:	82 ff       	sbrs	r24, 2
    1a4e:	10 c0       	rjmp	.+32     	; 0x1a70 <fputc+0x3e>
    1a50:	4e 81       	ldd	r20, Y+6	; 0x06
    1a52:	5f 81       	ldd	r21, Y+7	; 0x07
    1a54:	2c 81       	ldd	r18, Y+4	; 0x04
    1a56:	3d 81       	ldd	r19, Y+5	; 0x05
    1a58:	42 17       	cp	r20, r18
    1a5a:	53 07       	cpc	r21, r19
    1a5c:	7c f4       	brge	.+30     	; 0x1a7c <fputc+0x4a>
    1a5e:	e8 81       	ld	r30, Y
    1a60:	f9 81       	ldd	r31, Y+1	; 0x01
    1a62:	9f 01       	movw	r18, r30
    1a64:	2f 5f       	subi	r18, 0xFF	; 255
    1a66:	3f 4f       	sbci	r19, 0xFF	; 255
    1a68:	39 83       	std	Y+1, r19	; 0x01
    1a6a:	28 83       	st	Y, r18
    1a6c:	10 83       	st	Z, r17
    1a6e:	06 c0       	rjmp	.+12     	; 0x1a7c <fputc+0x4a>
    1a70:	e8 85       	ldd	r30, Y+8	; 0x08
    1a72:	f9 85       	ldd	r31, Y+9	; 0x09
    1a74:	81 2f       	mov	r24, r17
    1a76:	19 95       	eicall
    1a78:	89 2b       	or	r24, r25
    1a7a:	29 f7       	brne	.-54     	; 0x1a46 <fputc+0x14>
    1a7c:	2e 81       	ldd	r18, Y+6	; 0x06
    1a7e:	3f 81       	ldd	r19, Y+7	; 0x07
    1a80:	2f 5f       	subi	r18, 0xFF	; 255
    1a82:	3f 4f       	sbci	r19, 0xFF	; 255
    1a84:	3f 83       	std	Y+7, r19	; 0x07
    1a86:	2e 83       	std	Y+6, r18	; 0x06
    1a88:	81 2f       	mov	r24, r17
    1a8a:	90 2f       	mov	r25, r16
    1a8c:	df 91       	pop	r29
    1a8e:	cf 91       	pop	r28
    1a90:	1f 91       	pop	r17
    1a92:	0f 91       	pop	r16
    1a94:	08 95       	ret

00001a96 <puts>:
    1a96:	0f 93       	push	r16
    1a98:	1f 93       	push	r17
    1a9a:	cf 93       	push	r28
    1a9c:	df 93       	push	r29
    1a9e:	e0 91 b0 02 	lds	r30, 0x02B0
    1aa2:	f0 91 b1 02 	lds	r31, 0x02B1
    1aa6:	23 81       	ldd	r18, Z+3	; 0x03
    1aa8:	21 ff       	sbrs	r18, 1
    1aaa:	1b c0       	rjmp	.+54     	; 0x1ae2 <puts+0x4c>
    1aac:	ec 01       	movw	r28, r24
    1aae:	00 e0       	ldi	r16, 0x00	; 0
    1ab0:	10 e0       	ldi	r17, 0x00	; 0
    1ab2:	89 91       	ld	r24, Y+
    1ab4:	60 91 b0 02 	lds	r22, 0x02B0
    1ab8:	70 91 b1 02 	lds	r23, 0x02B1
    1abc:	db 01       	movw	r26, r22
    1abe:	18 96       	adiw	r26, 0x08	; 8
    1ac0:	ed 91       	ld	r30, X+
    1ac2:	fc 91       	ld	r31, X
    1ac4:	19 97       	sbiw	r26, 0x09	; 9
    1ac6:	88 23       	and	r24, r24
    1ac8:	31 f0       	breq	.+12     	; 0x1ad6 <puts+0x40>
    1aca:	19 95       	eicall
    1acc:	89 2b       	or	r24, r25
    1ace:	89 f3       	breq	.-30     	; 0x1ab2 <puts+0x1c>
    1ad0:	0f ef       	ldi	r16, 0xFF	; 255
    1ad2:	1f ef       	ldi	r17, 0xFF	; 255
    1ad4:	ee cf       	rjmp	.-36     	; 0x1ab2 <puts+0x1c>
    1ad6:	8a e0       	ldi	r24, 0x0A	; 10
    1ad8:	19 95       	eicall
    1ada:	89 2b       	or	r24, r25
    1adc:	11 f4       	brne	.+4      	; 0x1ae2 <puts+0x4c>
    1ade:	c8 01       	movw	r24, r16
    1ae0:	02 c0       	rjmp	.+4      	; 0x1ae6 <puts+0x50>
    1ae2:	8f ef       	ldi	r24, 0xFF	; 255
    1ae4:	9f ef       	ldi	r25, 0xFF	; 255
    1ae6:	df 91       	pop	r29
    1ae8:	cf 91       	pop	r28
    1aea:	1f 91       	pop	r17
    1aec:	0f 91       	pop	r16
    1aee:	08 95       	ret

00001af0 <__ultoa_invert>:
    1af0:	fa 01       	movw	r30, r20
    1af2:	aa 27       	eor	r26, r26
    1af4:	28 30       	cpi	r18, 0x08	; 8
    1af6:	51 f1       	breq	.+84     	; 0x1b4c <__ultoa_invert+0x5c>
    1af8:	20 31       	cpi	r18, 0x10	; 16
    1afa:	81 f1       	breq	.+96     	; 0x1b5c <__ultoa_invert+0x6c>
    1afc:	e8 94       	clt
    1afe:	6f 93       	push	r22
    1b00:	6e 7f       	andi	r22, 0xFE	; 254
    1b02:	6e 5f       	subi	r22, 0xFE	; 254
    1b04:	7f 4f       	sbci	r23, 0xFF	; 255
    1b06:	8f 4f       	sbci	r24, 0xFF	; 255
    1b08:	9f 4f       	sbci	r25, 0xFF	; 255
    1b0a:	af 4f       	sbci	r26, 0xFF	; 255
    1b0c:	b1 e0       	ldi	r27, 0x01	; 1
    1b0e:	3e d0       	rcall	.+124    	; 0x1b8c <__ultoa_invert+0x9c>
    1b10:	b4 e0       	ldi	r27, 0x04	; 4
    1b12:	3c d0       	rcall	.+120    	; 0x1b8c <__ultoa_invert+0x9c>
    1b14:	67 0f       	add	r22, r23
    1b16:	78 1f       	adc	r23, r24
    1b18:	89 1f       	adc	r24, r25
    1b1a:	9a 1f       	adc	r25, r26
    1b1c:	a1 1d       	adc	r26, r1
    1b1e:	68 0f       	add	r22, r24
    1b20:	79 1f       	adc	r23, r25
    1b22:	8a 1f       	adc	r24, r26
    1b24:	91 1d       	adc	r25, r1
    1b26:	a1 1d       	adc	r26, r1
    1b28:	6a 0f       	add	r22, r26
    1b2a:	71 1d       	adc	r23, r1
    1b2c:	81 1d       	adc	r24, r1
    1b2e:	91 1d       	adc	r25, r1
    1b30:	a1 1d       	adc	r26, r1
    1b32:	20 d0       	rcall	.+64     	; 0x1b74 <__ultoa_invert+0x84>
    1b34:	09 f4       	brne	.+2      	; 0x1b38 <__ultoa_invert+0x48>
    1b36:	68 94       	set
    1b38:	3f 91       	pop	r19
    1b3a:	2a e0       	ldi	r18, 0x0A	; 10
    1b3c:	26 9f       	mul	r18, r22
    1b3e:	11 24       	eor	r1, r1
    1b40:	30 19       	sub	r19, r0
    1b42:	30 5d       	subi	r19, 0xD0	; 208
    1b44:	31 93       	st	Z+, r19
    1b46:	de f6       	brtc	.-74     	; 0x1afe <__ultoa_invert+0xe>
    1b48:	cf 01       	movw	r24, r30
    1b4a:	08 95       	ret
    1b4c:	46 2f       	mov	r20, r22
    1b4e:	47 70       	andi	r20, 0x07	; 7
    1b50:	40 5d       	subi	r20, 0xD0	; 208
    1b52:	41 93       	st	Z+, r20
    1b54:	b3 e0       	ldi	r27, 0x03	; 3
    1b56:	0f d0       	rcall	.+30     	; 0x1b76 <__ultoa_invert+0x86>
    1b58:	c9 f7       	brne	.-14     	; 0x1b4c <__ultoa_invert+0x5c>
    1b5a:	f6 cf       	rjmp	.-20     	; 0x1b48 <__ultoa_invert+0x58>
    1b5c:	46 2f       	mov	r20, r22
    1b5e:	4f 70       	andi	r20, 0x0F	; 15
    1b60:	40 5d       	subi	r20, 0xD0	; 208
    1b62:	4a 33       	cpi	r20, 0x3A	; 58
    1b64:	18 f0       	brcs	.+6      	; 0x1b6c <__ultoa_invert+0x7c>
    1b66:	49 5d       	subi	r20, 0xD9	; 217
    1b68:	31 fd       	sbrc	r19, 1
    1b6a:	40 52       	subi	r20, 0x20	; 32
    1b6c:	41 93       	st	Z+, r20
    1b6e:	02 d0       	rcall	.+4      	; 0x1b74 <__ultoa_invert+0x84>
    1b70:	a9 f7       	brne	.-22     	; 0x1b5c <__ultoa_invert+0x6c>
    1b72:	ea cf       	rjmp	.-44     	; 0x1b48 <__ultoa_invert+0x58>
    1b74:	b4 e0       	ldi	r27, 0x04	; 4
    1b76:	a6 95       	lsr	r26
    1b78:	97 95       	ror	r25
    1b7a:	87 95       	ror	r24
    1b7c:	77 95       	ror	r23
    1b7e:	67 95       	ror	r22
    1b80:	ba 95       	dec	r27
    1b82:	c9 f7       	brne	.-14     	; 0x1b76 <__ultoa_invert+0x86>
    1b84:	00 97       	sbiw	r24, 0x00	; 0
    1b86:	61 05       	cpc	r22, r1
    1b88:	71 05       	cpc	r23, r1
    1b8a:	08 95       	ret
    1b8c:	9b 01       	movw	r18, r22
    1b8e:	ac 01       	movw	r20, r24
    1b90:	0a 2e       	mov	r0, r26
    1b92:	06 94       	lsr	r0
    1b94:	57 95       	ror	r21
    1b96:	47 95       	ror	r20
    1b98:	37 95       	ror	r19
    1b9a:	27 95       	ror	r18
    1b9c:	ba 95       	dec	r27
    1b9e:	c9 f7       	brne	.-14     	; 0x1b92 <__ultoa_invert+0xa2>
    1ba0:	62 0f       	add	r22, r18
    1ba2:	73 1f       	adc	r23, r19
    1ba4:	84 1f       	adc	r24, r20
    1ba6:	95 1f       	adc	r25, r21
    1ba8:	a0 1d       	adc	r26, r0
    1baa:	08 95       	ret

00001bac <calloc>:
    1bac:	0f 93       	push	r16
    1bae:	1f 93       	push	r17
    1bb0:	cf 93       	push	r28
    1bb2:	df 93       	push	r29
    1bb4:	86 9f       	mul	r24, r22
    1bb6:	80 01       	movw	r16, r0
    1bb8:	87 9f       	mul	r24, r23
    1bba:	10 0d       	add	r17, r0
    1bbc:	96 9f       	mul	r25, r22
    1bbe:	10 0d       	add	r17, r0
    1bc0:	11 24       	eor	r1, r1
    1bc2:	c8 01       	movw	r24, r16
    1bc4:	0d d0       	rcall	.+26     	; 0x1be0 <malloc>
    1bc6:	ec 01       	movw	r28, r24
    1bc8:	00 97       	sbiw	r24, 0x00	; 0
    1bca:	21 f0       	breq	.+8      	; 0x1bd4 <calloc+0x28>
    1bcc:	a8 01       	movw	r20, r16
    1bce:	60 e0       	ldi	r22, 0x00	; 0
    1bd0:	70 e0       	ldi	r23, 0x00	; 0
    1bd2:	2d d1       	rcall	.+602    	; 0x1e2e <memset>
    1bd4:	ce 01       	movw	r24, r28
    1bd6:	df 91       	pop	r29
    1bd8:	cf 91       	pop	r28
    1bda:	1f 91       	pop	r17
    1bdc:	0f 91       	pop	r16
    1bde:	08 95       	ret

00001be0 <malloc>:
    1be0:	cf 93       	push	r28
    1be2:	df 93       	push	r29
    1be4:	82 30       	cpi	r24, 0x02	; 2
    1be6:	91 05       	cpc	r25, r1
    1be8:	10 f4       	brcc	.+4      	; 0x1bee <malloc+0xe>
    1bea:	82 e0       	ldi	r24, 0x02	; 2
    1bec:	90 e0       	ldi	r25, 0x00	; 0
    1bee:	e0 91 b6 02 	lds	r30, 0x02B6
    1bf2:	f0 91 b7 02 	lds	r31, 0x02B7
    1bf6:	20 e0       	ldi	r18, 0x00	; 0
    1bf8:	30 e0       	ldi	r19, 0x00	; 0
    1bfa:	a0 e0       	ldi	r26, 0x00	; 0
    1bfc:	b0 e0       	ldi	r27, 0x00	; 0
    1bfe:	30 97       	sbiw	r30, 0x00	; 0
    1c00:	39 f1       	breq	.+78     	; 0x1c50 <malloc+0x70>
    1c02:	40 81       	ld	r20, Z
    1c04:	51 81       	ldd	r21, Z+1	; 0x01
    1c06:	48 17       	cp	r20, r24
    1c08:	59 07       	cpc	r21, r25
    1c0a:	b8 f0       	brcs	.+46     	; 0x1c3a <malloc+0x5a>
    1c0c:	48 17       	cp	r20, r24
    1c0e:	59 07       	cpc	r21, r25
    1c10:	71 f4       	brne	.+28     	; 0x1c2e <malloc+0x4e>
    1c12:	82 81       	ldd	r24, Z+2	; 0x02
    1c14:	93 81       	ldd	r25, Z+3	; 0x03
    1c16:	10 97       	sbiw	r26, 0x00	; 0
    1c18:	29 f0       	breq	.+10     	; 0x1c24 <malloc+0x44>
    1c1a:	13 96       	adiw	r26, 0x03	; 3
    1c1c:	9c 93       	st	X, r25
    1c1e:	8e 93       	st	-X, r24
    1c20:	12 97       	sbiw	r26, 0x02	; 2
    1c22:	2c c0       	rjmp	.+88     	; 0x1c7c <malloc+0x9c>
    1c24:	90 93 b7 02 	sts	0x02B7, r25
    1c28:	80 93 b6 02 	sts	0x02B6, r24
    1c2c:	27 c0       	rjmp	.+78     	; 0x1c7c <malloc+0x9c>
    1c2e:	21 15       	cp	r18, r1
    1c30:	31 05       	cpc	r19, r1
    1c32:	31 f0       	breq	.+12     	; 0x1c40 <malloc+0x60>
    1c34:	42 17       	cp	r20, r18
    1c36:	53 07       	cpc	r21, r19
    1c38:	18 f0       	brcs	.+6      	; 0x1c40 <malloc+0x60>
    1c3a:	a9 01       	movw	r20, r18
    1c3c:	db 01       	movw	r26, r22
    1c3e:	01 c0       	rjmp	.+2      	; 0x1c42 <malloc+0x62>
    1c40:	ef 01       	movw	r28, r30
    1c42:	9a 01       	movw	r18, r20
    1c44:	bd 01       	movw	r22, r26
    1c46:	df 01       	movw	r26, r30
    1c48:	02 80       	ldd	r0, Z+2	; 0x02
    1c4a:	f3 81       	ldd	r31, Z+3	; 0x03
    1c4c:	e0 2d       	mov	r30, r0
    1c4e:	d7 cf       	rjmp	.-82     	; 0x1bfe <malloc+0x1e>
    1c50:	21 15       	cp	r18, r1
    1c52:	31 05       	cpc	r19, r1
    1c54:	f9 f0       	breq	.+62     	; 0x1c94 <malloc+0xb4>
    1c56:	28 1b       	sub	r18, r24
    1c58:	39 0b       	sbc	r19, r25
    1c5a:	24 30       	cpi	r18, 0x04	; 4
    1c5c:	31 05       	cpc	r19, r1
    1c5e:	80 f4       	brcc	.+32     	; 0x1c80 <malloc+0xa0>
    1c60:	8a 81       	ldd	r24, Y+2	; 0x02
    1c62:	9b 81       	ldd	r25, Y+3	; 0x03
    1c64:	61 15       	cp	r22, r1
    1c66:	71 05       	cpc	r23, r1
    1c68:	21 f0       	breq	.+8      	; 0x1c72 <malloc+0x92>
    1c6a:	fb 01       	movw	r30, r22
    1c6c:	93 83       	std	Z+3, r25	; 0x03
    1c6e:	82 83       	std	Z+2, r24	; 0x02
    1c70:	04 c0       	rjmp	.+8      	; 0x1c7a <malloc+0x9a>
    1c72:	90 93 b7 02 	sts	0x02B7, r25
    1c76:	80 93 b6 02 	sts	0x02B6, r24
    1c7a:	fe 01       	movw	r30, r28
    1c7c:	32 96       	adiw	r30, 0x02	; 2
    1c7e:	44 c0       	rjmp	.+136    	; 0x1d08 <malloc+0x128>
    1c80:	fe 01       	movw	r30, r28
    1c82:	e2 0f       	add	r30, r18
    1c84:	f3 1f       	adc	r31, r19
    1c86:	81 93       	st	Z+, r24
    1c88:	91 93       	st	Z+, r25
    1c8a:	22 50       	subi	r18, 0x02	; 2
    1c8c:	31 09       	sbc	r19, r1
    1c8e:	39 83       	std	Y+1, r19	; 0x01
    1c90:	28 83       	st	Y, r18
    1c92:	3a c0       	rjmp	.+116    	; 0x1d08 <malloc+0x128>
    1c94:	20 91 b4 02 	lds	r18, 0x02B4
    1c98:	30 91 b5 02 	lds	r19, 0x02B5
    1c9c:	23 2b       	or	r18, r19
    1c9e:	41 f4       	brne	.+16     	; 0x1cb0 <malloc+0xd0>
    1ca0:	20 91 02 02 	lds	r18, 0x0202
    1ca4:	30 91 03 02 	lds	r19, 0x0203
    1ca8:	30 93 b5 02 	sts	0x02B5, r19
    1cac:	20 93 b4 02 	sts	0x02B4, r18
    1cb0:	20 91 00 02 	lds	r18, 0x0200
    1cb4:	30 91 01 02 	lds	r19, 0x0201
    1cb8:	21 15       	cp	r18, r1
    1cba:	31 05       	cpc	r19, r1
    1cbc:	41 f4       	brne	.+16     	; 0x1cce <malloc+0xee>
    1cbe:	2d b7       	in	r18, 0x3d	; 61
    1cc0:	3e b7       	in	r19, 0x3e	; 62
    1cc2:	40 91 04 02 	lds	r20, 0x0204
    1cc6:	50 91 05 02 	lds	r21, 0x0205
    1cca:	24 1b       	sub	r18, r20
    1ccc:	35 0b       	sbc	r19, r21
    1cce:	e0 91 b4 02 	lds	r30, 0x02B4
    1cd2:	f0 91 b5 02 	lds	r31, 0x02B5
    1cd6:	e2 17       	cp	r30, r18
    1cd8:	f3 07       	cpc	r31, r19
    1cda:	a0 f4       	brcc	.+40     	; 0x1d04 <malloc+0x124>
    1cdc:	2e 1b       	sub	r18, r30
    1cde:	3f 0b       	sbc	r19, r31
    1ce0:	28 17       	cp	r18, r24
    1ce2:	39 07       	cpc	r19, r25
    1ce4:	78 f0       	brcs	.+30     	; 0x1d04 <malloc+0x124>
    1ce6:	ac 01       	movw	r20, r24
    1ce8:	4e 5f       	subi	r20, 0xFE	; 254
    1cea:	5f 4f       	sbci	r21, 0xFF	; 255
    1cec:	24 17       	cp	r18, r20
    1cee:	35 07       	cpc	r19, r21
    1cf0:	48 f0       	brcs	.+18     	; 0x1d04 <malloc+0x124>
    1cf2:	4e 0f       	add	r20, r30
    1cf4:	5f 1f       	adc	r21, r31
    1cf6:	50 93 b5 02 	sts	0x02B5, r21
    1cfa:	40 93 b4 02 	sts	0x02B4, r20
    1cfe:	81 93       	st	Z+, r24
    1d00:	91 93       	st	Z+, r25
    1d02:	02 c0       	rjmp	.+4      	; 0x1d08 <malloc+0x128>
    1d04:	e0 e0       	ldi	r30, 0x00	; 0
    1d06:	f0 e0       	ldi	r31, 0x00	; 0
    1d08:	cf 01       	movw	r24, r30
    1d0a:	df 91       	pop	r29
    1d0c:	cf 91       	pop	r28
    1d0e:	08 95       	ret

00001d10 <free>:
    1d10:	cf 93       	push	r28
    1d12:	df 93       	push	r29
    1d14:	00 97       	sbiw	r24, 0x00	; 0
    1d16:	09 f4       	brne	.+2      	; 0x1d1a <free+0xa>
    1d18:	87 c0       	rjmp	.+270    	; 0x1e28 <free+0x118>
    1d1a:	fc 01       	movw	r30, r24
    1d1c:	32 97       	sbiw	r30, 0x02	; 2
    1d1e:	13 82       	std	Z+3, r1	; 0x03
    1d20:	12 82       	std	Z+2, r1	; 0x02
    1d22:	c0 91 b6 02 	lds	r28, 0x02B6
    1d26:	d0 91 b7 02 	lds	r29, 0x02B7
    1d2a:	20 97       	sbiw	r28, 0x00	; 0
    1d2c:	81 f4       	brne	.+32     	; 0x1d4e <free+0x3e>
    1d2e:	20 81       	ld	r18, Z
    1d30:	31 81       	ldd	r19, Z+1	; 0x01
    1d32:	28 0f       	add	r18, r24
    1d34:	39 1f       	adc	r19, r25
    1d36:	80 91 b4 02 	lds	r24, 0x02B4
    1d3a:	90 91 b5 02 	lds	r25, 0x02B5
    1d3e:	82 17       	cp	r24, r18
    1d40:	93 07       	cpc	r25, r19
    1d42:	79 f5       	brne	.+94     	; 0x1da2 <free+0x92>
    1d44:	f0 93 b5 02 	sts	0x02B5, r31
    1d48:	e0 93 b4 02 	sts	0x02B4, r30
    1d4c:	6d c0       	rjmp	.+218    	; 0x1e28 <free+0x118>
    1d4e:	de 01       	movw	r26, r28
    1d50:	20 e0       	ldi	r18, 0x00	; 0
    1d52:	30 e0       	ldi	r19, 0x00	; 0
    1d54:	ae 17       	cp	r26, r30
    1d56:	bf 07       	cpc	r27, r31
    1d58:	50 f4       	brcc	.+20     	; 0x1d6e <free+0x5e>
    1d5a:	12 96       	adiw	r26, 0x02	; 2
    1d5c:	4d 91       	ld	r20, X+
    1d5e:	5c 91       	ld	r21, X
    1d60:	13 97       	sbiw	r26, 0x03	; 3
    1d62:	9d 01       	movw	r18, r26
    1d64:	41 15       	cp	r20, r1
    1d66:	51 05       	cpc	r21, r1
    1d68:	09 f1       	breq	.+66     	; 0x1dac <free+0x9c>
    1d6a:	da 01       	movw	r26, r20
    1d6c:	f3 cf       	rjmp	.-26     	; 0x1d54 <free+0x44>
    1d6e:	b3 83       	std	Z+3, r27	; 0x03
    1d70:	a2 83       	std	Z+2, r26	; 0x02
    1d72:	40 81       	ld	r20, Z
    1d74:	51 81       	ldd	r21, Z+1	; 0x01
    1d76:	84 0f       	add	r24, r20
    1d78:	95 1f       	adc	r25, r21
    1d7a:	8a 17       	cp	r24, r26
    1d7c:	9b 07       	cpc	r25, r27
    1d7e:	71 f4       	brne	.+28     	; 0x1d9c <free+0x8c>
    1d80:	8d 91       	ld	r24, X+
    1d82:	9c 91       	ld	r25, X
    1d84:	11 97       	sbiw	r26, 0x01	; 1
    1d86:	84 0f       	add	r24, r20
    1d88:	95 1f       	adc	r25, r21
    1d8a:	02 96       	adiw	r24, 0x02	; 2
    1d8c:	91 83       	std	Z+1, r25	; 0x01
    1d8e:	80 83       	st	Z, r24
    1d90:	12 96       	adiw	r26, 0x02	; 2
    1d92:	8d 91       	ld	r24, X+
    1d94:	9c 91       	ld	r25, X
    1d96:	13 97       	sbiw	r26, 0x03	; 3
    1d98:	93 83       	std	Z+3, r25	; 0x03
    1d9a:	82 83       	std	Z+2, r24	; 0x02
    1d9c:	21 15       	cp	r18, r1
    1d9e:	31 05       	cpc	r19, r1
    1da0:	29 f4       	brne	.+10     	; 0x1dac <free+0x9c>
    1da2:	f0 93 b7 02 	sts	0x02B7, r31
    1da6:	e0 93 b6 02 	sts	0x02B6, r30
    1daa:	3e c0       	rjmp	.+124    	; 0x1e28 <free+0x118>
    1dac:	d9 01       	movw	r26, r18
    1dae:	13 96       	adiw	r26, 0x03	; 3
    1db0:	fc 93       	st	X, r31
    1db2:	ee 93       	st	-X, r30
    1db4:	12 97       	sbiw	r26, 0x02	; 2
    1db6:	4d 91       	ld	r20, X+
    1db8:	5d 91       	ld	r21, X+
    1dba:	a4 0f       	add	r26, r20
    1dbc:	b5 1f       	adc	r27, r21
    1dbe:	ea 17       	cp	r30, r26
    1dc0:	fb 07       	cpc	r31, r27
    1dc2:	79 f4       	brne	.+30     	; 0x1de2 <free+0xd2>
    1dc4:	80 81       	ld	r24, Z
    1dc6:	91 81       	ldd	r25, Z+1	; 0x01
    1dc8:	84 0f       	add	r24, r20
    1dca:	95 1f       	adc	r25, r21
    1dcc:	02 96       	adiw	r24, 0x02	; 2
    1dce:	d9 01       	movw	r26, r18
    1dd0:	11 96       	adiw	r26, 0x01	; 1
    1dd2:	9c 93       	st	X, r25
    1dd4:	8e 93       	st	-X, r24
    1dd6:	82 81       	ldd	r24, Z+2	; 0x02
    1dd8:	93 81       	ldd	r25, Z+3	; 0x03
    1dda:	13 96       	adiw	r26, 0x03	; 3
    1ddc:	9c 93       	st	X, r25
    1dde:	8e 93       	st	-X, r24
    1de0:	12 97       	sbiw	r26, 0x02	; 2
    1de2:	e0 e0       	ldi	r30, 0x00	; 0
    1de4:	f0 e0       	ldi	r31, 0x00	; 0
    1de6:	8a 81       	ldd	r24, Y+2	; 0x02
    1de8:	9b 81       	ldd	r25, Y+3	; 0x03
    1dea:	00 97       	sbiw	r24, 0x00	; 0
    1dec:	19 f0       	breq	.+6      	; 0x1df4 <free+0xe4>
    1dee:	fe 01       	movw	r30, r28
    1df0:	ec 01       	movw	r28, r24
    1df2:	f9 cf       	rjmp	.-14     	; 0x1de6 <free+0xd6>
    1df4:	ce 01       	movw	r24, r28
    1df6:	02 96       	adiw	r24, 0x02	; 2
    1df8:	28 81       	ld	r18, Y
    1dfa:	39 81       	ldd	r19, Y+1	; 0x01
    1dfc:	82 0f       	add	r24, r18
    1dfe:	93 1f       	adc	r25, r19
    1e00:	20 91 b4 02 	lds	r18, 0x02B4
    1e04:	30 91 b5 02 	lds	r19, 0x02B5
    1e08:	28 17       	cp	r18, r24
    1e0a:	39 07       	cpc	r19, r25
    1e0c:	69 f4       	brne	.+26     	; 0x1e28 <free+0x118>
    1e0e:	30 97       	sbiw	r30, 0x00	; 0
    1e10:	29 f4       	brne	.+10     	; 0x1e1c <free+0x10c>
    1e12:	10 92 b7 02 	sts	0x02B7, r1
    1e16:	10 92 b6 02 	sts	0x02B6, r1
    1e1a:	02 c0       	rjmp	.+4      	; 0x1e20 <free+0x110>
    1e1c:	13 82       	std	Z+3, r1	; 0x03
    1e1e:	12 82       	std	Z+2, r1	; 0x02
    1e20:	d0 93 b5 02 	sts	0x02B5, r29
    1e24:	c0 93 b4 02 	sts	0x02B4, r28
    1e28:	df 91       	pop	r29
    1e2a:	cf 91       	pop	r28
    1e2c:	08 95       	ret

00001e2e <memset>:
    1e2e:	dc 01       	movw	r26, r24
    1e30:	01 c0       	rjmp	.+2      	; 0x1e34 <memset+0x6>
    1e32:	6d 93       	st	X+, r22
    1e34:	41 50       	subi	r20, 0x01	; 1
    1e36:	50 40       	sbci	r21, 0x00	; 0
    1e38:	e0 f7       	brcc	.-8      	; 0x1e32 <memset+0x4>
    1e3a:	08 95       	ret

00001e3c <_exit>:
    1e3c:	f8 94       	cli

00001e3e <__stop_program>:
    1e3e:	ff cf       	rjmp	.-2      	; 0x1e3e <__stop_program>
