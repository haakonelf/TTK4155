
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00800200  00001e4c  00001ee0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001e4c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002e  0080029e  0080029e  00001f7e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f7e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002d8  00000000  00000000  00001fda  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000023d6  00000000  00000000  000022b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001118  00000000  00000000  00004688  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001646  00000000  00000000  000057a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000006e8  00000000  00000000  00006de8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006e6  00000000  00000000  000074d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001435  00000000  00000000  00007bb6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000208  00000000  00000000  00008feb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	43 c1       	rjmp	.+646    	; 0x288 <__ctors_end>
       2:	00 00       	nop
       4:	61 c1       	rjmp	.+706    	; 0x2c8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c1       	rjmp	.+702    	; 0x2c8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c1       	rjmp	.+698    	; 0x2c8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c1       	rjmp	.+694    	; 0x2c8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c1       	rjmp	.+690    	; 0x2c8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c1       	rjmp	.+686    	; 0x2c8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c1       	rjmp	.+682    	; 0x2c8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c1       	rjmp	.+678    	; 0x2c8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c1       	rjmp	.+674    	; 0x2c8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c1       	rjmp	.+670    	; 0x2c8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c1       	rjmp	.+666    	; 0x2c8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c1       	rjmp	.+662    	; 0x2c8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c1       	rjmp	.+658    	; 0x2c8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c1       	rjmp	.+654    	; 0x2c8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c1       	rjmp	.+650    	; 0x2c8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c1       	rjmp	.+646    	; 0x2c8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c1       	rjmp	.+642    	; 0x2c8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c1       	rjmp	.+638    	; 0x2c8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c1       	rjmp	.+634    	; 0x2c8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c1       	rjmp	.+630    	; 0x2c8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c1       	rjmp	.+626    	; 0x2c8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c1       	rjmp	.+622    	; 0x2c8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c1       	rjmp	.+618    	; 0x2c8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c1       	rjmp	.+614    	; 0x2c8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c1       	rjmp	.+610    	; 0x2c8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c1       	rjmp	.+606    	; 0x2c8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c1       	rjmp	.+602    	; 0x2c8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c1       	rjmp	.+598    	; 0x2c8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c1       	rjmp	.+594    	; 0x2c8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c1       	rjmp	.+590    	; 0x2c8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c1       	rjmp	.+586    	; 0x2c8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c1       	rjmp	.+582    	; 0x2c8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c1       	rjmp	.+578    	; 0x2c8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c1       	rjmp	.+574    	; 0x2c8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	1d c1       	rjmp	.+570    	; 0x2c8 <__bad_interrupt>
      8e:	00 00       	nop
      90:	1b c1       	rjmp	.+566    	; 0x2c8 <__bad_interrupt>
      92:	00 00       	nop
      94:	19 c1       	rjmp	.+562    	; 0x2c8 <__bad_interrupt>
      96:	00 00       	nop
      98:	17 c1       	rjmp	.+558    	; 0x2c8 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	5a c5       	rjmp	.+2740   	; 0xb52 <__vector_39>
      9e:	00 00       	nop
      a0:	13 c1       	rjmp	.+550    	; 0x2c8 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	11 c1       	rjmp	.+546    	; 0x2c8 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0f c1       	rjmp	.+542    	; 0x2c8 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	0d c1       	rjmp	.+538    	; 0x2c8 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	0b c1       	rjmp	.+534    	; 0x2c8 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	09 c1       	rjmp	.+530    	; 0x2c8 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	07 c1       	rjmp	.+526    	; 0x2c8 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	05 c1       	rjmp	.+522    	; 0x2c8 <__bad_interrupt>
      be:	00 00       	nop
      c0:	03 c1       	rjmp	.+518    	; 0x2c8 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	01 c1       	rjmp	.+514    	; 0x2c8 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ff c0       	rjmp	.+510    	; 0x2c8 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	fd c0       	rjmp	.+506    	; 0x2c8 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	fb c0       	rjmp	.+502    	; 0x2c8 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	f9 c0       	rjmp	.+498    	; 0x2c8 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	f7 c0       	rjmp	.+494    	; 0x2c8 <__bad_interrupt>
      da:	00 00       	nop
      dc:	f5 c0       	rjmp	.+490    	; 0x2c8 <__bad_interrupt>
      de:	00 00       	nop
      e0:	f3 c0       	rjmp	.+486    	; 0x2c8 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	c4 05       	cpc	r28, r4
      e6:	16 06       	cpc	r1, r22
      e8:	16 06       	cpc	r1, r22
      ea:	16 06       	cpc	r1, r22
      ec:	16 06       	cpc	r1, r22
      ee:	16 06       	cpc	r1, r22
      f0:	16 06       	cpc	r1, r22
      f2:	16 06       	cpc	r1, r22
      f4:	c4 05       	cpc	r28, r4
      f6:	16 06       	cpc	r1, r22
      f8:	16 06       	cpc	r1, r22
      fa:	16 06       	cpc	r1, r22
      fc:	16 06       	cpc	r1, r22
      fe:	16 06       	cpc	r1, r22
     100:	16 06       	cpc	r1, r22
     102:	16 06       	cpc	r1, r22
     104:	c6 05       	cpc	r28, r6
     106:	16 06       	cpc	r1, r22
     108:	16 06       	cpc	r1, r22
     10a:	16 06       	cpc	r1, r22
     10c:	16 06       	cpc	r1, r22
     10e:	16 06       	cpc	r1, r22
     110:	16 06       	cpc	r1, r22
     112:	16 06       	cpc	r1, r22
     114:	16 06       	cpc	r1, r22
     116:	16 06       	cpc	r1, r22
     118:	16 06       	cpc	r1, r22
     11a:	16 06       	cpc	r1, r22
     11c:	16 06       	cpc	r1, r22
     11e:	16 06       	cpc	r1, r22
     120:	16 06       	cpc	r1, r22
     122:	16 06       	cpc	r1, r22
     124:	c6 05       	cpc	r28, r6
     126:	16 06       	cpc	r1, r22
     128:	16 06       	cpc	r1, r22
     12a:	16 06       	cpc	r1, r22
     12c:	16 06       	cpc	r1, r22
     12e:	16 06       	cpc	r1, r22
     130:	16 06       	cpc	r1, r22
     132:	16 06       	cpc	r1, r22
     134:	16 06       	cpc	r1, r22
     136:	16 06       	cpc	r1, r22
     138:	16 06       	cpc	r1, r22
     13a:	16 06       	cpc	r1, r22
     13c:	16 06       	cpc	r1, r22
     13e:	16 06       	cpc	r1, r22
     140:	16 06       	cpc	r1, r22
     142:	16 06       	cpc	r1, r22
     144:	12 06       	cpc	r1, r18
     146:	16 06       	cpc	r1, r22
     148:	16 06       	cpc	r1, r22
     14a:	16 06       	cpc	r1, r22
     14c:	16 06       	cpc	r1, r22
     14e:	16 06       	cpc	r1, r22
     150:	16 06       	cpc	r1, r22
     152:	16 06       	cpc	r1, r22
     154:	ef 05       	cpc	r30, r15
     156:	16 06       	cpc	r1, r22
     158:	16 06       	cpc	r1, r22
     15a:	16 06       	cpc	r1, r22
     15c:	16 06       	cpc	r1, r22
     15e:	16 06       	cpc	r1, r22
     160:	16 06       	cpc	r1, r22
     162:	16 06       	cpc	r1, r22
     164:	16 06       	cpc	r1, r22
     166:	16 06       	cpc	r1, r22
     168:	16 06       	cpc	r1, r22
     16a:	16 06       	cpc	r1, r22
     16c:	16 06       	cpc	r1, r22
     16e:	16 06       	cpc	r1, r22
     170:	16 06       	cpc	r1, r22
     172:	16 06       	cpc	r1, r22
     174:	e3 05       	cpc	r30, r3
     176:	16 06       	cpc	r1, r22
     178:	16 06       	cpc	r1, r22
     17a:	16 06       	cpc	r1, r22
     17c:	16 06       	cpc	r1, r22
     17e:	16 06       	cpc	r1, r22
     180:	16 06       	cpc	r1, r22
     182:	16 06       	cpc	r1, r22
     184:	01 06       	cpc	r0, r17

00000186 <__trampolines_end>:
     186:	6e 61       	ori	r22, 0x1E	; 30
     188:	6e 00       	.word	0x006e	; ????

0000018a <__c.2159>:
     18a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     19a:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     1aa:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     1ba:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     1ca:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     1da:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     1ea:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     1fa:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     20a:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     21a:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     22a:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     23a:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     24a:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     25a:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     26a:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     27a:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000288 <__ctors_end>:
     288:	11 24       	eor	r1, r1
     28a:	1f be       	out	0x3f, r1	; 63
     28c:	cf ef       	ldi	r28, 0xFF	; 255
     28e:	d1 e2       	ldi	r29, 0x21	; 33
     290:	de bf       	out	0x3e, r29	; 62
     292:	cd bf       	out	0x3d, r28	; 61
     294:	00 e0       	ldi	r16, 0x00	; 0
     296:	0c bf       	out	0x3c, r16	; 60

00000298 <__do_copy_data>:
     298:	12 e0       	ldi	r17, 0x02	; 2
     29a:	a0 e0       	ldi	r26, 0x00	; 0
     29c:	b2 e0       	ldi	r27, 0x02	; 2
     29e:	ec e4       	ldi	r30, 0x4C	; 76
     2a0:	fe e1       	ldi	r31, 0x1E	; 30
     2a2:	00 e0       	ldi	r16, 0x00	; 0
     2a4:	0b bf       	out	0x3b, r16	; 59
     2a6:	02 c0       	rjmp	.+4      	; 0x2ac <__do_copy_data+0x14>
     2a8:	07 90       	elpm	r0, Z+
     2aa:	0d 92       	st	X+, r0
     2ac:	ae 39       	cpi	r26, 0x9E	; 158
     2ae:	b1 07       	cpc	r27, r17
     2b0:	d9 f7       	brne	.-10     	; 0x2a8 <__do_copy_data+0x10>

000002b2 <__do_clear_bss>:
     2b2:	22 e0       	ldi	r18, 0x02	; 2
     2b4:	ae e9       	ldi	r26, 0x9E	; 158
     2b6:	b2 e0       	ldi	r27, 0x02	; 2
     2b8:	01 c0       	rjmp	.+2      	; 0x2bc <.do_clear_bss_start>

000002ba <.do_clear_bss_loop>:
     2ba:	1d 92       	st	X+, r1

000002bc <.do_clear_bss_start>:
     2bc:	ac 3c       	cpi	r26, 0xCC	; 204
     2be:	b2 07       	cpc	r27, r18
     2c0:	e1 f7       	brne	.-8      	; 0x2ba <.do_clear_bss_loop>
     2c2:	6a d2       	rcall	.+1236   	; 0x798 <main>
     2c4:	0c 94 24 0f 	jmp	0x1e48	; 0x1e48 <_exit>

000002c8 <__bad_interrupt>:
     2c8:	9b ce       	rjmp	.-714    	; 0x0 <__vectors>

000002ca <adc_init>:
#include <avr/io.h>
#include <stdint.h>
void adc_init(void){
	ADCSRA	|= (1 << ADEN) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2);
     2ca:	ea e7       	ldi	r30, 0x7A	; 122
     2cc:	f0 e0       	ldi	r31, 0x00	; 0
     2ce:	80 81       	ld	r24, Z
     2d0:	87 68       	ori	r24, 0x87	; 135
     2d2:	80 83       	st	Z, r24
	ADMUX	|= (1<<REFS0);
     2d4:	ec e7       	ldi	r30, 0x7C	; 124
     2d6:	f0 e0       	ldi	r31, 0x00	; 0
     2d8:	80 81       	ld	r24, Z
     2da:	80 64       	ori	r24, 0x40	; 64
     2dc:	80 83       	st	Z, r24
	ADMUX	&= ~(1<<REFS1);
     2de:	80 81       	ld	r24, Z
     2e0:	8f 77       	andi	r24, 0x7F	; 127
     2e2:	80 83       	st	Z, r24
     2e4:	08 95       	ret

000002e6 <can_init>:
void can_print(can_message msg){
	for(int i = 0; i < msg.length; i++){
		printf("%c", msg.data[i]);
	}
	printf("\n");
}
     2e6:	c5 d1       	rcall	.+906    	; 0x672 <mcp_init>
     2e8:	4f ef       	ldi	r20, 0xFF	; 255
     2ea:	60 e6       	ldi	r22, 0x60	; 96
     2ec:	80 e6       	ldi	r24, 0x60	; 96
     2ee:	ad d1       	rcall	.+858    	; 0x64a <mcp_bitModify>
     2f0:	4f ef       	ldi	r20, 0xFF	; 255
     2f2:	60 e6       	ldi	r22, 0x60	; 96
     2f4:	80 e7       	ldi	r24, 0x70	; 112
     2f6:	a9 d1       	rcall	.+850    	; 0x64a <mcp_bitModify>
     2f8:	43 e0       	ldi	r20, 0x03	; 3
     2fa:	63 e0       	ldi	r22, 0x03	; 3
     2fc:	8e e2       	ldi	r24, 0x2E	; 46
     2fe:	a5 d1       	rcall	.+842    	; 0x64a <mcp_bitModify>
     300:	40 e0       	ldi	r20, 0x00	; 0
     302:	60 ee       	ldi	r22, 0xE0	; 224
     304:	8f e0       	ldi	r24, 0x0F	; 15
     306:	a1 c1       	rjmp	.+834    	; 0x64a <mcp_bitModify>
     308:	08 95       	ret

0000030a <can_pollInterrupt>:
     30a:	80 b1       	in	r24, 0x00	; 0
     30c:	8c e2       	ldi	r24, 0x2C	; 44
     30e:	8c d1       	rcall	.+792    	; 0x628 <mcp_read>
     310:	80 ff       	sbrs	r24, 0
     312:	06 c0       	rjmp	.+12     	; 0x320 <can_pollInterrupt+0x16>
     314:	4f ef       	ldi	r20, 0xFF	; 255
     316:	61 e0       	ldi	r22, 0x01	; 1
     318:	8c e2       	ldi	r24, 0x2C	; 44
     31a:	97 d1       	rcall	.+814    	; 0x64a <mcp_bitModify>
     31c:	90 e6       	ldi	r25, 0x60	; 96
     31e:	09 c0       	rjmp	.+18     	; 0x332 <can_pollInterrupt+0x28>
     320:	98 2f       	mov	r25, r24
     322:	92 70       	andi	r25, 0x02	; 2
     324:	81 ff       	sbrs	r24, 1
     326:	05 c0       	rjmp	.+10     	; 0x332 <can_pollInterrupt+0x28>
     328:	4f ef       	ldi	r20, 0xFF	; 255
     32a:	62 e0       	ldi	r22, 0x02	; 2
     32c:	8c e2       	ldi	r24, 0x2C	; 44
     32e:	8d d1       	rcall	.+794    	; 0x64a <mcp_bitModify>
     330:	90 e7       	ldi	r25, 0x70	; 112
     332:	89 2f       	mov	r24, r25
     334:	08 95       	ret

00000336 <can_read>:
     336:	8f 92       	push	r8
     338:	9f 92       	push	r9
     33a:	af 92       	push	r10
     33c:	bf 92       	push	r11
     33e:	cf 92       	push	r12
     340:	df 92       	push	r13
     342:	ef 92       	push	r14
     344:	ff 92       	push	r15
     346:	0f 93       	push	r16
     348:	1f 93       	push	r17
     34a:	cf 93       	push	r28
     34c:	df 93       	push	r29
     34e:	cd b7       	in	r28, 0x3d	; 61
     350:	de b7       	in	r29, 0x3e	; 62
     352:	2b 97       	sbiw	r28, 0x0b	; 11
     354:	0f b6       	in	r0, 0x3f	; 63
     356:	f8 94       	cli
     358:	de bf       	out	0x3e, r29	; 62
     35a:	0f be       	out	0x3f, r0	; 63
     35c:	cd bf       	out	0x3d, r28	; 61
     35e:	6c 01       	movw	r12, r24
     360:	d4 df       	rcall	.-88     	; 0x30a <can_pollInterrupt>
     362:	18 2f       	mov	r17, r24
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	81 0f       	add	r24, r17
     368:	5f d1       	rcall	.+702    	; 0x628 <mcp_read>
     36a:	a8 2e       	mov	r10, r24
     36c:	82 e0       	ldi	r24, 0x02	; 2
     36e:	81 0f       	add	r24, r17
     370:	5b d1       	rcall	.+694    	; 0x628 <mcp_read>
     372:	82 95       	swap	r24
     374:	86 95       	lsr	r24
     376:	87 70       	andi	r24, 0x07	; 7
     378:	b1 2c       	mov	r11, r1
     37a:	aa 0c       	add	r10, r10
     37c:	bb 1c       	adc	r11, r11
     37e:	aa 0c       	add	r10, r10
     380:	bb 1c       	adc	r11, r11
     382:	aa 0c       	add	r10, r10
     384:	bb 1c       	adc	r11, r11
     386:	a8 2a       	or	r10, r24
     388:	85 e0       	ldi	r24, 0x05	; 5
     38a:	81 0f       	add	r24, r17
     38c:	4d d1       	rcall	.+666    	; 0x628 <mcp_read>
     38e:	8f 70       	andi	r24, 0x0F	; 15
     390:	88 2e       	mov	r8, r24
     392:	a1 f0       	breq	.+40     	; 0x3bc <can_read+0x86>
     394:	0f 2e       	mov	r0, r31
     396:	f6 e0       	ldi	r31, 0x06	; 6
     398:	9f 2e       	mov	r9, r31
     39a:	f0 2d       	mov	r31, r0
     39c:	91 0e       	add	r9, r17
     39e:	8e 01       	movw	r16, r28
     3a0:	0c 5f       	subi	r16, 0xFC	; 252
     3a2:	1f 4f       	sbci	r17, 0xFF	; 255
     3a4:	78 01       	movw	r14, r16
     3a6:	e8 0e       	add	r14, r24
     3a8:	f1 1c       	adc	r15, r1
     3aa:	89 2d       	mov	r24, r9
     3ac:	3d d1       	rcall	.+634    	; 0x628 <mcp_read>
     3ae:	f8 01       	movw	r30, r16
     3b0:	81 93       	st	Z+, r24
     3b2:	8f 01       	movw	r16, r30
     3b4:	93 94       	inc	r9
     3b6:	ee 15       	cp	r30, r14
     3b8:	ff 05       	cpc	r31, r15
     3ba:	b9 f7       	brne	.-18     	; 0x3aa <can_read+0x74>
     3bc:	40 e0       	ldi	r20, 0x00	; 0
     3be:	61 e0       	ldi	r22, 0x01	; 1
     3c0:	8c e2       	ldi	r24, 0x2C	; 44
     3c2:	43 d1       	rcall	.+646    	; 0x64a <mcp_bitModify>
     3c4:	ba 82       	std	Y+2, r11	; 0x02
     3c6:	a9 82       	std	Y+1, r10	; 0x01
     3c8:	8b 82       	std	Y+3, r8	; 0x03
     3ca:	8b e0       	ldi	r24, 0x0B	; 11
     3cc:	fe 01       	movw	r30, r28
     3ce:	31 96       	adiw	r30, 0x01	; 1
     3d0:	d6 01       	movw	r26, r12
     3d2:	01 90       	ld	r0, Z+
     3d4:	0d 92       	st	X+, r0
     3d6:	8a 95       	dec	r24
     3d8:	e1 f7       	brne	.-8      	; 0x3d2 <can_read+0x9c>
     3da:	c6 01       	movw	r24, r12
     3dc:	2b 96       	adiw	r28, 0x0b	; 11
     3de:	0f b6       	in	r0, 0x3f	; 63
     3e0:	f8 94       	cli
     3e2:	de bf       	out	0x3e, r29	; 62
     3e4:	0f be       	out	0x3f, r0	; 63
     3e6:	cd bf       	out	0x3d, r28	; 61
     3e8:	df 91       	pop	r29
     3ea:	cf 91       	pop	r28
     3ec:	1f 91       	pop	r17
     3ee:	0f 91       	pop	r16
     3f0:	ff 90       	pop	r15
     3f2:	ef 90       	pop	r14
     3f4:	df 90       	pop	r13
     3f6:	cf 90       	pop	r12
     3f8:	bf 90       	pop	r11
     3fa:	af 90       	pop	r10
     3fc:	9f 90       	pop	r9
     3fe:	8f 90       	pop	r8
     400:	08 95       	ret

00000402 <can_handle_joystick_message>:

void can_handle_joystick_message(can_message msg){
     402:	ef 92       	push	r14
     404:	ff 92       	push	r15
     406:	0f 93       	push	r16
     408:	1f 93       	push	r17
     40a:	cf 93       	push	r28
     40c:	df 93       	push	r29
     40e:	cd b7       	in	r28, 0x3d	; 61
     410:	de b7       	in	r29, 0x3e	; 62
     412:	2b 97       	sbiw	r28, 0x0b	; 11
     414:	0f b6       	in	r0, 0x3f	; 63
     416:	f8 94       	cli
     418:	de bf       	out	0x3e, r29	; 62
     41a:	0f be       	out	0x3f, r0	; 63
     41c:	cd bf       	out	0x3d, r28	; 61
     41e:	e9 82       	std	Y+1, r14	; 0x01
     420:	fa 82       	std	Y+2, r15	; 0x02
     422:	1c 83       	std	Y+4, r17	; 0x04
	if(msg.id == MCP_JOYSTICK_MESSAGE){
     424:	89 81       	ldd	r24, Y+1	; 0x01
     426:	9a 81       	ldd	r25, Y+2	; 0x02
     428:	85 35       	cpi	r24, 0x55	; 85
     42a:	91 05       	cpc	r25, r1
     42c:	19 f4       	brne	.+6      	; 0x434 <can_handle_joystick_message+0x32>
		pwm_set_servo(msg.data[0]);
     42e:	81 2f       	mov	r24, r17
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	2c d3       	rcall	.+1624   	; 0xa8c <pwm_set_servo>
	}
}
     434:	2b 96       	adiw	r28, 0x0b	; 11
     436:	0f b6       	in	r0, 0x3f	; 63
     438:	f8 94       	cli
     43a:	de bf       	out	0x3e, r29	; 62
     43c:	0f be       	out	0x3f, r0	; 63
     43e:	cd bf       	out	0x3d, r28	; 61
     440:	df 91       	pop	r29
     442:	cf 91       	pop	r28
     444:	1f 91       	pop	r17
     446:	0f 91       	pop	r16
     448:	ff 90       	pop	r15
     44a:	ef 90       	pop	r14
     44c:	08 95       	ret

0000044e <can_handle_score_message>:
void can_handle_score_message(can_message msg){
     44e:	ef 92       	push	r14
     450:	ff 92       	push	r15
     452:	0f 93       	push	r16
     454:	1f 93       	push	r17
     456:	cf 93       	push	r28
     458:	df 93       	push	r29
     45a:	cd b7       	in	r28, 0x3d	; 61
     45c:	de b7       	in	r29, 0x3e	; 62
     45e:	2b 97       	sbiw	r28, 0x0b	; 11
     460:	0f b6       	in	r0, 0x3f	; 63
     462:	f8 94       	cli
     464:	de bf       	out	0x3e, r29	; 62
     466:	0f be       	out	0x3f, r0	; 63
     468:	cd bf       	out	0x3d, r28	; 61
     46a:	e9 82       	std	Y+1, r14	; 0x01
     46c:	fa 82       	std	Y+2, r15	; 0x02
     46e:	0b 83       	std	Y+3, r16	; 0x03
     470:	1c 83       	std	Y+4, r17	; 0x04
     472:	2d 83       	std	Y+5, r18	; 0x05
     474:	3e 83       	std	Y+6, r19	; 0x06
     476:	4f 83       	std	Y+7, r20	; 0x07
     478:	58 87       	std	Y+8, r21	; 0x08
     47a:	69 87       	std	Y+9, r22	; 0x09
     47c:	7a 87       	std	Y+10, r23	; 0x0a
     47e:	8b 87       	std	Y+11, r24	; 0x0b
	if(msg.id == MCP_BUTTON_PRESS){
     480:	89 81       	ldd	r24, Y+1	; 0x01
     482:	9a 81       	ldd	r25, Y+2	; 0x02
     484:	87 37       	cpi	r24, 0x77	; 119
     486:	91 05       	cpc	r25, r1
     488:	29 f4       	brne	.+10     	; 0x494 <can_handle_score_message+0x46>
		if(msg.data[0]){
     48a:	11 23       	and	r17, r17
     48c:	11 f0       	breq	.+4      	; 0x492 <can_handle_score_message+0x44>
			PORTA |= (1<<PA2); //stop relay
     48e:	12 9a       	sbi	0x02, 2	; 2
     490:	01 c0       	rjmp	.+2      	; 0x494 <can_handle_score_message+0x46>
		}
		else{
			PORTA &= ~(1<<PA2); //activate relay
     492:	12 98       	cbi	0x02, 2	; 2
		}
	}
}
     494:	2b 96       	adiw	r28, 0x0b	; 11
     496:	0f b6       	in	r0, 0x3f	; 63
     498:	f8 94       	cli
     49a:	de bf       	out	0x3e, r29	; 62
     49c:	0f be       	out	0x3f, r0	; 63
     49e:	cd bf       	out	0x3d, r28	; 61
     4a0:	df 91       	pop	r29
     4a2:	cf 91       	pop	r28
     4a4:	1f 91       	pop	r17
     4a6:	0f 91       	pop	r16
     4a8:	ff 90       	pop	r15
     4aa:	ef 90       	pop	r14
     4ac:	08 95       	ret

000004ae <can_handle_slider_message>:

extern float max_encoder_value;

void can_handle_slider_message(can_message msg){
     4ae:	8f 92       	push	r8
     4b0:	9f 92       	push	r9
     4b2:	af 92       	push	r10
     4b4:	bf 92       	push	r11
     4b6:	ef 92       	push	r14
     4b8:	ff 92       	push	r15
     4ba:	0f 93       	push	r16
     4bc:	1f 93       	push	r17
     4be:	cf 93       	push	r28
     4c0:	df 93       	push	r29
     4c2:	cd b7       	in	r28, 0x3d	; 61
     4c4:	de b7       	in	r29, 0x3e	; 62
     4c6:	2b 97       	sbiw	r28, 0x0b	; 11
     4c8:	0f b6       	in	r0, 0x3f	; 63
     4ca:	f8 94       	cli
     4cc:	de bf       	out	0x3e, r29	; 62
     4ce:	0f be       	out	0x3f, r0	; 63
     4d0:	cd bf       	out	0x3d, r28	; 61
     4d2:	e9 82       	std	Y+1, r14	; 0x01
     4d4:	fa 82       	std	Y+2, r15	; 0x02
	if(msg.id == MCP_SLIDER_MESSAGE){
     4d6:	89 81       	ldd	r24, Y+1	; 0x01
     4d8:	9a 81       	ldd	r25, Y+2	; 0x02
     4da:	88 38       	cpi	r24, 0x88	; 136
     4dc:	91 05       	cpc	r25, r1
     4de:	09 f0       	breq	.+2      	; 0x4e2 <can_handle_slider_message+0x34>
     4e0:	5b c0       	rjmp	.+182    	; 0x598 <can_handle_slider_message+0xea>
		printf("In can: %d\n", msg.data[0]);
     4e2:	a1 2e       	mov	r10, r17
     4e4:	b1 2c       	mov	r11, r1
     4e6:	1f 92       	push	r1
     4e8:	1f 93       	push	r17
     4ea:	87 e0       	ldi	r24, 0x07	; 7
     4ec:	92 e0       	ldi	r25, 0x02	; 2
     4ee:	9f 93       	push	r25
     4f0:	8f 93       	push	r24
     4f2:	0e 94 40 0d 	call	0x1a80	; 0x1a80 <printf>
		uint8_t slider_value = msg.data[0];
		float r = (255 - slider_value)*(max_encoder_value/255.0);
     4f6:	6f ef       	ldi	r22, 0xFF	; 255
     4f8:	70 e0       	ldi	r23, 0x00	; 0
     4fa:	6a 19       	sub	r22, r10
     4fc:	7b 09       	sbc	r23, r11
     4fe:	88 27       	eor	r24, r24
     500:	77 fd       	sbrc	r23, 7
     502:	80 95       	com	r24
     504:	98 2f       	mov	r25, r24
     506:	c7 d4       	rcall	.+2446   	; 0xe96 <__floatsisf>
     508:	4b 01       	movw	r8, r22
     50a:	5c 01       	movw	r10, r24
     50c:	20 e0       	ldi	r18, 0x00	; 0
     50e:	30 e0       	ldi	r19, 0x00	; 0
     510:	4f e7       	ldi	r20, 0x7F	; 127
     512:	53 e4       	ldi	r21, 0x43	; 67
     514:	60 91 a6 02 	lds	r22, 0x02A6
     518:	70 91 a7 02 	lds	r23, 0x02A7
     51c:	80 91 a8 02 	lds	r24, 0x02A8
     520:	90 91 a9 02 	lds	r25, 0x02A9
     524:	1d d4       	rcall	.+2106   	; 0xd60 <__divsf3>
     526:	9b 01       	movw	r18, r22
     528:	ac 01       	movw	r20, r24
     52a:	c5 01       	movw	r24, r10
     52c:	b4 01       	movw	r22, r8
     52e:	3f d5       	rcall	.+2686   	; 0xfae <__mulsf3>
     530:	4b 01       	movw	r8, r22
     532:	5c 01       	movw	r10, r24
		//r = max_encoder_value / 2;
		float y = motor_encoder_read();
     534:	11 d1       	rcall	.+546    	; 0x758 <motor_encoder_read>
     536:	bc 01       	movw	r22, r24
     538:	88 27       	eor	r24, r24
     53a:	77 fd       	sbrc	r23, 7
     53c:	80 95       	com	r24
     53e:	98 2f       	mov	r25, r24
     540:	aa d4       	rcall	.+2388   	; 0xe96 <__floatsisf>
     542:	9b 01       	movw	r18, r22
     544:	ac 01       	movw	r20, r24
		float u = pid_generate(r, y, 0.01) / ((max_encoder_value+1)/255);
     546:	1a e0       	ldi	r17, 0x0A	; 10
     548:	e1 2e       	mov	r14, r17
     54a:	17 ed       	ldi	r17, 0xD7	; 215
     54c:	f1 2e       	mov	r15, r17
     54e:	03 e2       	ldi	r16, 0x23	; 35
     550:	1c e3       	ldi	r17, 0x3C	; 60
     552:	c5 01       	movw	r24, r10
     554:	b4 01       	movw	r22, r8
     556:	03 d2       	rcall	.+1030   	; 0x95e <pid_generate>
     558:	4b 01       	movw	r8, r22
     55a:	5c 01       	movw	r10, r24
     55c:	20 e0       	ldi	r18, 0x00	; 0
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	40 e8       	ldi	r20, 0x80	; 128
     562:	5f e3       	ldi	r21, 0x3F	; 63
     564:	60 91 a6 02 	lds	r22, 0x02A6
     568:	70 91 a7 02 	lds	r23, 0x02A7
     56c:	80 91 a8 02 	lds	r24, 0x02A8
     570:	90 91 a9 02 	lds	r25, 0x02A9
     574:	91 d3       	rcall	.+1826   	; 0xc98 <__addsf3>
     576:	20 e0       	ldi	r18, 0x00	; 0
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	4f e7       	ldi	r20, 0x7F	; 127
     57c:	53 e4       	ldi	r21, 0x43	; 67
     57e:	f0 d3       	rcall	.+2016   	; 0xd60 <__divsf3>
     580:	9b 01       	movw	r18, r22
     582:	ac 01       	movw	r20, r24
     584:	c5 01       	movw	r24, r10
     586:	b4 01       	movw	r22, r8
     588:	eb d3       	rcall	.+2006   	; 0xd60 <__divsf3>
				
		//printf("r: %.3f   ", r);
		//printf("y: %.3f   ", y);
		//printf("u: %.3f\n", u);
				
		motor_speed(u);
     58a:	52 d4       	rcall	.+2212   	; 0xe30 <__fixsfsi>
     58c:	cb 01       	movw	r24, r22
     58e:	b4 d0       	rcall	.+360    	; 0x6f8 <motor_speed>
     590:	0f 90       	pop	r0
     592:	0f 90       	pop	r0
     594:	0f 90       	pop	r0
     596:	0f 90       	pop	r0
	}
}
     598:	2b 96       	adiw	r28, 0x0b	; 11
     59a:	0f b6       	in	r0, 0x3f	; 63
     59c:	f8 94       	cli
     59e:	de bf       	out	0x3e, r29	; 62
     5a0:	0f be       	out	0x3f, r0	; 63
     5a2:	cd bf       	out	0x3d, r28	; 61
     5a4:	df 91       	pop	r29
     5a6:	cf 91       	pop	r28
     5a8:	1f 91       	pop	r17
     5aa:	0f 91       	pop	r16
     5ac:	ff 90       	pop	r15
     5ae:	ef 90       	pop	r14
     5b0:	bf 90       	pop	r11
     5b2:	af 90       	pop	r10
     5b4:	9f 90       	pop	r9
     5b6:	8f 90       	pop	r8
     5b8:	08 95       	ret

000005ba <dac_initialize>:
#include <stdint.h>

#define MAX520_TWI_ADDR_BASE 0b01010000
static uint8_t twi_address = 0x00;

void dac_initialize(uint8_t MAX520_addr){
     5ba:	cf 93       	push	r28
     5bc:	c8 2f       	mov	r28, r24
	TWI_Master_Initialise();
     5be:	9d d2       	rcall	.+1338   	; 0xafa <TWI_Master_Initialise>
	sei();
     5c0:	78 94       	sei
	
	twi_address = MAX520_addr;
     5c2:	c0 93 9e 02 	sts	0x029E, r28
}	
     5c6:	cf 91       	pop	r28
     5c8:	08 95       	ret

000005ca <dac_write>:


void dac_write(uint8_t channel, uint8_t val){
     5ca:	cf 93       	push	r28
     5cc:	df 93       	push	r29
     5ce:	00 d0       	rcall	.+0      	; 0x5d0 <dac_write+0x6>
     5d0:	cd b7       	in	r28, 0x3d	; 61
     5d2:	de b7       	in	r29, 0x3e	; 62
	uint8_t message[3] = {	MAX520_TWI_ADDR_BASE | ((twi_address & 0x07) << 1), //Set address
     5d4:	90 91 9e 02 	lds	r25, 0x029E
     5d8:	97 70       	andi	r25, 0x07	; 7
     5da:	99 0f       	add	r25, r25
     5dc:	90 65       	ori	r25, 0x50	; 80
     5de:	99 83       	std	Y+1, r25	; 0x01
     5e0:	87 70       	andi	r24, 0x07	; 7
     5e2:	8a 83       	std	Y+2, r24	; 0x02
     5e4:	6b 83       	std	Y+3, r22	; 0x03
							channel & 0x07, //Channel no higher than 0x07
							val		};
							
	TWI_Start_Transceiver_With_Data(message, 3);
     5e6:	63 e0       	ldi	r22, 0x03	; 3
     5e8:	ce 01       	movw	r24, r28
     5ea:	01 96       	adiw	r24, 0x01	; 1
     5ec:	90 d2       	rcall	.+1312   	; 0xb0e <TWI_Start_Transceiver_With_Data>
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	df 91       	pop	r29
     5f6:	cf 91       	pop	r28
     5f8:	08 95       	ret

000005fa <new_score>:
	can_message msg;
	msg = new_can_message(MCP_GAME_SCORE_MESSAGE, 1, &score->score);
	can_write(&msg, MCP_TXB0CTRL);
}

game_score new_score(uint8_t antallMaalinger, uint16_t sum, uint8_t boolState, uint8_t val){
     5fa:	cf 93       	push	r28
     5fc:	df 93       	push	r29
     5fe:	00 d0       	rcall	.+0      	; 0x600 <new_score+0x6>
     600:	1f 92       	push	r1
     602:	1f 92       	push	r1
     604:	cd b7       	in	r28, 0x3d	; 61
     606:	de b7       	in	r29, 0x3e	; 62
     608:	36 2f       	mov	r19, r22
     60a:	54 2f       	mov	r21, r20
     60c:	62 2f       	mov	r22, r18
	score.antallMaalinger = antallMaalinger;
	score.sum = sum;
	score.boolState = boolState;
	score.score = val;
	
	return score;
     60e:	47 2f       	mov	r20, r23
     610:	28 2f       	mov	r18, r24
     612:	70 e0       	ldi	r23, 0x00	; 0
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	0f 90       	pop	r0
     61a:	0f 90       	pop	r0
     61c:	0f 90       	pop	r0
     61e:	0f 90       	pop	r0
     620:	0f 90       	pop	r0
     622:	df 91       	pop	r29
     624:	cf 91       	pop	r28
     626:	08 95       	ret

00000628 <mcp_read>:
	SPI_transmit(MCP_READ_STATUS);
	uint8_t status = SPI_transmit(0x00);
	PORTB |= (1<< MCP_CS);
	
	return status;
}
     628:	cf 93       	push	r28
     62a:	c8 2f       	mov	r28, r24
     62c:	28 98       	cbi	0x05, 0	; 5
     62e:	83 e0       	ldi	r24, 0x03	; 3
     630:	5e d2       	rcall	.+1212   	; 0xaee <SPI_transmit>
     632:	8c 2f       	mov	r24, r28
     634:	5c d2       	rcall	.+1208   	; 0xaee <SPI_transmit>
     636:	80 e0       	ldi	r24, 0x00	; 0
     638:	5a d2       	rcall	.+1204   	; 0xaee <SPI_transmit>
     63a:	28 9a       	sbi	0x05, 0	; 5
     63c:	cf 91       	pop	r28
     63e:	08 95       	ret

00000640 <mcp_reset>:
     640:	28 98       	cbi	0x05, 0	; 5
     642:	80 ec       	ldi	r24, 0xC0	; 192
     644:	54 d2       	rcall	.+1192   	; 0xaee <SPI_transmit>
     646:	28 9a       	sbi	0x05, 0	; 5
     648:	08 95       	ret

0000064a <mcp_bitModify>:
     64a:	1f 93       	push	r17
     64c:	cf 93       	push	r28
     64e:	df 93       	push	r29
     650:	18 2f       	mov	r17, r24
     652:	d6 2f       	mov	r29, r22
     654:	c4 2f       	mov	r28, r20
     656:	28 98       	cbi	0x05, 0	; 5
     658:	85 e0       	ldi	r24, 0x05	; 5
     65a:	49 d2       	rcall	.+1170   	; 0xaee <SPI_transmit>
     65c:	81 2f       	mov	r24, r17
     65e:	47 d2       	rcall	.+1166   	; 0xaee <SPI_transmit>
     660:	8d 2f       	mov	r24, r29
     662:	45 d2       	rcall	.+1162   	; 0xaee <SPI_transmit>
     664:	8c 2f       	mov	r24, r28
     666:	43 d2       	rcall	.+1158   	; 0xaee <SPI_transmit>
     668:	28 9a       	sbi	0x05, 0	; 5
     66a:	df 91       	pop	r29
     66c:	cf 91       	pop	r28
     66e:	1f 91       	pop	r17
     670:	08 95       	ret

00000672 <mcp_init>:

void mcp_init(void){
	SPI_masterInit();
     672:	37 d2       	rcall	.+1134   	; 0xae2 <SPI_masterInit>
	mcp_reset();
     674:	e5 cf       	rjmp	.-54     	; 0x640 <mcp_reset>
     676:	08 95       	ret

00000678 <controller_init>:
	
	//New speed of the controller
	return -((float)(k_p*(reference_position-current_position) + k_i*(*error))*255)/max_encoder_value;
}

uint16_t controller_init(){
     678:	cf 93       	push	r28
     67a:	df 93       	push	r29
	motor_speed(75);
     67c:	8b e4       	ldi	r24, 0x4B	; 75
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	3b d0       	rcall	.+118    	; 0x6f8 <motor_speed>
	uint16_t enc_val = 0, prev_enc_val = -1;
	while(enc_val != prev_enc_val){
		enc_val = motor_encoder_read();
     682:	6a d0       	rcall	.+212    	; 0x758 <motor_encoder_read>
     684:	ec 01       	movw	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     686:	87 ea       	ldi	r24, 0xA7	; 167
     688:	91 e6       	ldi	r25, 0x61	; 97
     68a:	01 97       	sbiw	r24, 0x01	; 1
     68c:	f1 f7       	brne	.-4      	; 0x68a <controller_init+0x12>
     68e:	00 c0       	rjmp	.+0      	; 0x690 <controller_init+0x18>
     690:	00 00       	nop
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
     692:	62 d0       	rcall	.+196    	; 0x758 <motor_encoder_read>
}

uint16_t controller_init(){
	motor_speed(75);
	uint16_t enc_val = 0, prev_enc_val = -1;
	while(enc_val != prev_enc_val){
     694:	c8 17       	cp	r28, r24
     696:	d9 07       	cpc	r29, r25
     698:	a1 f7       	brne	.-24     	; 0x682 <controller_init+0xa>
		enc_val = motor_encoder_read();
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
	}
	motor_speed(0);
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	2c d0       	rcall	.+88     	; 0x6f8 <motor_speed>
	motor_encoder_reset();
     6a0:	16 d0       	rcall	.+44     	; 0x6ce <motor_encoder_reset>
	
	motor_speed(-75);
     6a2:	85 eb       	ldi	r24, 0xB5	; 181
     6a4:	9f ef       	ldi	r25, 0xFF	; 255
     6a6:	28 d0       	rcall	.+80     	; 0x6f8 <motor_speed>
	enc_val = 0, prev_enc_val = -1;
	while(enc_val != prev_enc_val){
		enc_val = motor_encoder_read();
     6a8:	57 d0       	rcall	.+174    	; 0x758 <motor_encoder_read>
     6aa:	ec 01       	movw	r28, r24
     6ac:	87 ea       	ldi	r24, 0xA7	; 167
     6ae:	91 e6       	ldi	r25, 0x61	; 97
     6b0:	01 97       	sbiw	r24, 0x01	; 1
     6b2:	f1 f7       	brne	.-4      	; 0x6b0 <controller_init+0x38>
     6b4:	00 c0       	rjmp	.+0      	; 0x6b6 <controller_init+0x3e>
     6b6:	00 00       	nop
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
     6b8:	4f d0       	rcall	.+158    	; 0x758 <motor_encoder_read>
	motor_speed(0);
	motor_encoder_reset();
	
	motor_speed(-75);
	enc_val = 0, prev_enc_val = -1;
	while(enc_val != prev_enc_val){
     6ba:	c8 17       	cp	r28, r24
     6bc:	d9 07       	cpc	r29, r25
     6be:	a1 f7       	brne	.-24     	; 0x6a8 <controller_init+0x30>
		enc_val = motor_encoder_read();
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
	}
	motor_speed(0);
     6c0:	80 e0       	ldi	r24, 0x00	; 0
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	19 d0       	rcall	.+50     	; 0x6f8 <motor_speed>
	
	//Find max value of encoder.
	return enc_val;
     6c6:	ce 01       	movw	r24, r28
     6c8:	df 91       	pop	r29
     6ca:	cf 91       	pop	r28
     6cc:	08 95       	ret

000006ce <motor_encoder_reset>:
     6ce:	8e 98       	cbi	0x11, 6	; 17
     6d0:	8a e6       	ldi	r24, 0x6A	; 106
     6d2:	8a 95       	dec	r24
     6d4:	f1 f7       	brne	.-4      	; 0x6d2 <motor_encoder_reset+0x4>
     6d6:	00 c0       	rjmp	.+0      	; 0x6d8 <motor_encoder_reset+0xa>
     6d8:	8e 9a       	sbi	0x11, 6	; 17
     6da:	08 95       	ret

000006dc <motor_init>:
     6dc:	80 b3       	in	r24, 0x10	; 16
     6de:	88 6f       	ori	r24, 0xF8	; 248
     6e0:	80 bb       	out	0x10, r24	; 16
     6e2:	10 92 07 01 	sts	0x0107, r1
     6e6:	8c 9a       	sbi	0x11, 4	; 17
     6e8:	f2 cf       	rjmp	.-28     	; 0x6ce <motor_encoder_reset>
     6ea:	08 95       	ret

000006ec <motor_direction>:
     6ec:	89 2b       	or	r24, r25
     6ee:	11 f0       	breq	.+4      	; 0x6f4 <motor_direction+0x8>
     6f0:	8b 98       	cbi	0x11, 3	; 17
     6f2:	08 95       	ret
     6f4:	8b 9a       	sbi	0x11, 3	; 17
     6f6:	08 95       	ret

000006f8 <motor_speed>:
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	ec 01       	movw	r28, r24
     6fe:	18 16       	cp	r1, r24
     700:	19 06       	cpc	r1, r25
     702:	24 f4       	brge	.+8      	; 0x70c <motor_speed+0x14>
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	f1 df       	rcall	.-30     	; 0x6ec <motor_direction>
     70a:	08 c0       	rjmp	.+16     	; 0x71c <motor_speed+0x24>
     70c:	81 e0       	ldi	r24, 0x01	; 1
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	ed df       	rcall	.-38     	; 0x6ec <motor_direction>
     712:	dd 23       	and	r29, r29
     714:	1c f4       	brge	.+6      	; 0x71c <motor_speed+0x24>
     716:	d1 95       	neg	r29
     718:	c1 95       	neg	r28
     71a:	d1 09       	sbc	r29, r1
     71c:	be 01       	movw	r22, r28
     71e:	cf 3f       	cpi	r28, 0xFF	; 255
     720:	d1 05       	cpc	r29, r1
     722:	19 f0       	breq	.+6      	; 0x72a <motor_speed+0x32>
     724:	14 f0       	brlt	.+4      	; 0x72a <motor_speed+0x32>
     726:	6f ef       	ldi	r22, 0xFF	; 255
     728:	70 e0       	ldi	r23, 0x00	; 0
     72a:	80 e0       	ldi	r24, 0x00	; 0
     72c:	4e df       	rcall	.-356    	; 0x5ca <dac_write>
     72e:	df 91       	pop	r29
     730:	cf 91       	pop	r28
     732:	08 95       	ret

00000734 <reverse>:
	_delay_ms(500);

}

uint8_t reverse(uint8_t x){
	x = (((x & 0xaa) >> 1) | ((x & 0x55) << 1));
     734:	28 2f       	mov	r18, r24
     736:	25 75       	andi	r18, 0x55	; 85
     738:	22 0f       	add	r18, r18
     73a:	98 2f       	mov	r25, r24
     73c:	9a 7a       	andi	r25, 0xAA	; 170
     73e:	96 95       	lsr	r25
     740:	92 2b       	or	r25, r18
	x = (((x & 0xcc) >> 2) | ((x & 0x33) << 2));
     742:	29 2f       	mov	r18, r25
     744:	23 73       	andi	r18, 0x33	; 51
     746:	22 0f       	add	r18, r18
     748:	22 0f       	add	r18, r18
     74a:	89 2f       	mov	r24, r25
     74c:	8c 7c       	andi	r24, 0xCC	; 204
     74e:	86 95       	lsr	r24
     750:	86 95       	lsr	r24
     752:	82 2b       	or	r24, r18
	x = (((x & 0xf0) >> 4) | ((x & 0x0f) << 4));
	return x;
}
     754:	82 95       	swap	r24
     756:	08 95       	ret

00000758 <motor_encoder_read>:
	PORTF |= (1 << MOTOR_EN);
	motor_encoder_reset();
	
}

int16_t motor_encoder_read(void){
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
	uint16_t data;
	
	//Enable output and send high byte on PORT K
	PORTF &=	~((1 << MOTOR_OE) |
     75c:	81 b3       	in	r24, 0x11	; 17
     75e:	8f 75       	andi	r24, 0x5F	; 95
     760:	81 bb       	out	0x11, r24	; 17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     762:	2a e6       	ldi	r18, 0x6A	; 106
     764:	2a 95       	dec	r18
     766:	f1 f7       	brne	.-4      	; 0x764 <motor_encoder_read+0xc>
     768:	00 c0       	rjmp	.+0      	; 0x76a <motor_encoder_read+0x12>
			(1 << MOTOR_SEL));
	_delay_us(20);
	data = (reverse(PINK) << 8);
     76a:	80 91 06 01 	lds	r24, 0x0106
     76e:	e2 df       	rcall	.-60     	; 0x734 <reverse>
     770:	c8 2f       	mov	r28, r24
     772:	d0 e0       	ldi	r29, 0x00	; 0
     774:	dc 2f       	mov	r29, r28
     776:	cc 27       	eor	r28, r28
	
	//Send low byte on PORT K
	PORTF |= (1 << MOTOR_SEL);
     778:	8d 9a       	sbi	0x11, 5	; 17
     77a:	3a e6       	ldi	r19, 0x6A	; 106
     77c:	3a 95       	dec	r19
     77e:	f1 f7       	brne	.-4      	; 0x77c <motor_encoder_read+0x24>
     780:	00 c0       	rjmp	.+0      	; 0x782 <motor_encoder_read+0x2a>
	_delay_us(20);
	data += reverse(PINK);
     782:	80 91 06 01 	lds	r24, 0x0106
     786:	d6 df       	rcall	.-84     	; 0x734 <reverse>
	
	//Toggle reset and disable output
	PORTF |= (1 << MOTOR_OE);
     788:	8f 9a       	sbi	0x11, 7	; 17
	
	return data;
}
     78a:	9e 01       	movw	r18, r28
     78c:	28 0f       	add	r18, r24
     78e:	31 1d       	adc	r19, r1
     790:	c9 01       	movw	r24, r18
     792:	df 91       	pop	r29
     794:	cf 91       	pop	r28
     796:	08 95       	ret

00000798 <main>:
#include "pid.h"

float max_encoder_value;

int main(void)
{
     798:	cf 93       	push	r28
     79a:	df 93       	push	r29
     79c:	cd b7       	in	r28, 0x3d	; 61
     79e:	de b7       	in	r29, 0x3e	; 62
     7a0:	60 97       	sbiw	r28, 0x10	; 16
     7a2:	0f b6       	in	r0, 0x3f	; 63
     7a4:	f8 94       	cli
     7a6:	de bf       	out	0x3e, r29	; 62
     7a8:	0f be       	out	0x3f, r0	; 63
     7aa:	cd bf       	out	0x3d, r28	; 61
	sei();
     7ac:	78 94       	sei
	USART_Init(MYUBRR);
     7ae:	87 e6       	ldi	r24, 0x67	; 103
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	52 d2       	rcall	.+1188   	; 0xc58 <USART_Init>
	fdevopen((int (*)(char,  struct __file *))USART_Transmit, (int (*)(struct __file *))USART_Receive);
     7b4:	63 e4       	ldi	r22, 0x43	; 67
     7b6:	76 e0       	ldi	r23, 0x06	; 6
     7b8:	8b e3       	ldi	r24, 0x3B	; 59
     7ba:	96 e0       	ldi	r25, 0x06	; 6
     7bc:	0e 94 c4 0c 	call	0x1988	; 0x1988 <fdevopen>
	printf("UART setup done\n");
     7c0:	83 e1       	ldi	r24, 0x13	; 19
     7c2:	92 e0       	ldi	r25, 0x02	; 2
     7c4:	0e 94 51 0d 	call	0x1aa2	; 0x1aa2 <puts>
	can_init();
     7c8:	8e dd       	rcall	.-1252   	; 0x2e6 <can_init>
	printf("CAN setup done\n");
     7ca:	83 e2       	ldi	r24, 0x23	; 35
     7cc:	92 e0       	ldi	r25, 0x02	; 2
     7ce:	0e 94 51 0d 	call	0x1aa2	; 0x1aa2 <puts>
	pwm_init();
     7d2:	44 d1       	rcall	.+648    	; 0xa5c <pwm_init>
	printf("PWM setup done\n");
     7d4:	82 e3       	ldi	r24, 0x32	; 50
     7d6:	92 e0       	ldi	r25, 0x02	; 2
     7d8:	0e 94 51 0d 	call	0x1aa2	; 0x1aa2 <puts>
	adc_init();
     7dc:	76 dd       	rcall	.-1300   	; 0x2ca <adc_init>
	printf("ADC setup done\n");
     7de:	81 e4       	ldi	r24, 0x41	; 65
     7e0:	92 e0       	ldi	r25, 0x02	; 2
     7e2:	0e 94 51 0d 	call	0x1aa2	; 0x1aa2 <puts>
	motor_init();
     7e6:	7a df       	rcall	.-268    	; 0x6dc <motor_init>
	printf("Motor setup done\n");
     7e8:	80 e5       	ldi	r24, 0x50	; 80
     7ea:	92 e0       	ldi	r25, 0x02	; 2
     7ec:	0e 94 51 0d 	call	0x1aa2	; 0x1aa2 <puts>
	dac_initialize(0b111);
     7f0:	87 e0       	ldi	r24, 0x07	; 7
     7f2:	e3 de       	rcall	.-570    	; 0x5ba <dac_initialize>
	printf("DAC setup done\n");
     7f4:	81 e6       	ldi	r24, 0x61	; 97
     7f6:	92 e0       	ldi	r25, 0x02	; 2
     7f8:	0e 94 51 0d 	call	0x1aa2	; 0x1aa2 <puts>
	printf("Initialization done\n");
     7fc:	80 e7       	ldi	r24, 0x70	; 112
     7fe:	92 e0       	ldi	r25, 0x02	; 2
     800:	0e 94 51 0d 	call	0x1aa2	; 0x1aa2 <puts>
	
	DDRA |=(1<<PA2); //for solenoid
     804:	0a 9a       	sbi	0x01, 2	; 1
	//Joystick joy;
	can_message msg = {0};
     806:	fe 01       	movw	r30, r28
     808:	31 96       	adiw	r30, 0x01	; 1
     80a:	8b e0       	ldi	r24, 0x0B	; 11
     80c:	df 01       	movw	r26, r30
     80e:	1d 92       	st	X+, r1
     810:	8a 95       	dec	r24
     812:	e9 f7       	brne	.-6      	; 0x80e <main+0x76>
	game_score score = new_score(0, 0, 0, 0);
     814:	20 e0       	ldi	r18, 0x00	; 0
     816:	40 e0       	ldi	r20, 0x00	; 0
     818:	60 e0       	ldi	r22, 0x00	; 0
     81a:	70 e0       	ldi	r23, 0x00	; 0
     81c:	80 e0       	ldi	r24, 0x00	; 0
     81e:	ed de       	rcall	.-550    	; 0x5fa <new_score>
     820:	2c 87       	std	Y+12, r18	; 0x0c
     822:	3d 87       	std	Y+13, r19	; 0x0d
     824:	4e 87       	std	Y+14, r20	; 0x0e
     826:	5f 87       	std	Y+15, r21	; 0x0f
     828:	68 8b       	std	Y+16, r22	; 0x10
	max_encoder_value = controller_init();
     82a:	26 df       	rcall	.-436    	; 0x678 <controller_init>
     82c:	bc 01       	movw	r22, r24
     82e:	80 e0       	ldi	r24, 0x00	; 0
     830:	90 e0       	ldi	r25, 0x00	; 0
     832:	2f d3       	rcall	.+1630   	; 0xe92 <__floatunsisf>
     834:	26 2f       	mov	r18, r22
     836:	37 2f       	mov	r19, r23
     838:	46 2f       	mov	r20, r22
     83a:	57 2f       	mov	r21, r23
     83c:	68 2f       	mov	r22, r24
     83e:	79 2f       	mov	r23, r25
     840:	40 93 a6 02 	sts	0x02A6, r20
     844:	50 93 a7 02 	sts	0x02A7, r21
     848:	60 93 a8 02 	sts	0x02A8, r22
     84c:	70 93 a9 02 	sts	0x02A9, r23
	
	printf("max_encoder_value: %.3f\n", max_encoder_value);
     850:	9f 93       	push	r25
     852:	8f 93       	push	r24
     854:	3f 93       	push	r19
     856:	2f 93       	push	r18
     858:	84 e8       	ldi	r24, 0x84	; 132
     85a:	92 e0       	ldi	r25, 0x02	; 2
     85c:	9f 93       	push	r25
     85e:	8f 93       	push	r24
     860:	0e 94 40 0d 	call	0x1a80	; 0x1a80 <printf>
	
	
	pid_init(-1, -2, -0.0);
     864:	e1 2c       	mov	r14, r1
     866:	f1 2c       	mov	r15, r1
     868:	00 e0       	ldi	r16, 0x00	; 0
     86a:	10 e8       	ldi	r17, 0x80	; 128
     86c:	20 e0       	ldi	r18, 0x00	; 0
     86e:	30 e0       	ldi	r19, 0x00	; 0
     870:	40 e0       	ldi	r20, 0x00	; 0
     872:	50 ec       	ldi	r21, 0xC0	; 192
     874:	60 e0       	ldi	r22, 0x00	; 0
     876:	70 e0       	ldi	r23, 0x00	; 0
     878:	80 e8       	ldi	r24, 0x80	; 128
     87a:	9f eb       	ldi	r25, 0xBF	; 191
     87c:	37 d0       	rcall	.+110    	; 0x8ec <pid_init>
     87e:	0f 90       	pop	r0
     880:	0f 90       	pop	r0
     882:	0f 90       	pop	r0
     884:	0f 90       	pop	r0
     886:	0f 90       	pop	r0
     888:	0f 90       	pop	r0
	
	
	//motor_speed(100);
	while(1)
	{
		if(can_pollInterrupt()){
     88a:	3f dd       	rcall	.-1410   	; 0x30a <can_pollInterrupt>
     88c:	88 23       	and	r24, r24
     88e:	19 f0       	breq	.+6      	; 0x896 <main+0xfe>
			msg = can_read();
     890:	ce 01       	movw	r24, r28
     892:	01 96       	adiw	r24, 0x01	; 1
     894:	50 dd       	rcall	.-1376   	; 0x336 <can_read>
		}
		
		//Kanskje bruke en switch
		can_handle_joystick_message(msg);
     896:	e9 80       	ldd	r14, Y+1	; 0x01
     898:	fa 80       	ldd	r15, Y+2	; 0x02
     89a:	0b 81       	ldd	r16, Y+3	; 0x03
     89c:	1c 81       	ldd	r17, Y+4	; 0x04
     89e:	2d 81       	ldd	r18, Y+5	; 0x05
     8a0:	3e 81       	ldd	r19, Y+6	; 0x06
     8a2:	4f 81       	ldd	r20, Y+7	; 0x07
     8a4:	58 85       	ldd	r21, Y+8	; 0x08
     8a6:	69 85       	ldd	r22, Y+9	; 0x09
     8a8:	7a 85       	ldd	r23, Y+10	; 0x0a
     8aa:	8b 85       	ldd	r24, Y+11	; 0x0b
     8ac:	aa dd       	rcall	.-1196   	; 0x402 <can_handle_joystick_message>
		can_handle_score_message(msg);
     8ae:	e9 80       	ldd	r14, Y+1	; 0x01
     8b0:	fa 80       	ldd	r15, Y+2	; 0x02
     8b2:	0b 81       	ldd	r16, Y+3	; 0x03
     8b4:	1c 81       	ldd	r17, Y+4	; 0x04
     8b6:	2d 81       	ldd	r18, Y+5	; 0x05
     8b8:	3e 81       	ldd	r19, Y+6	; 0x06
     8ba:	4f 81       	ldd	r20, Y+7	; 0x07
     8bc:	58 85       	ldd	r21, Y+8	; 0x08
     8be:	69 85       	ldd	r22, Y+9	; 0x09
     8c0:	7a 85       	ldd	r23, Y+10	; 0x0a
     8c2:	8b 85       	ldd	r24, Y+11	; 0x0b
     8c4:	c4 dd       	rcall	.-1144   	; 0x44e <can_handle_score_message>
		can_handle_slider_message(msg);
     8c6:	e9 80       	ldd	r14, Y+1	; 0x01
     8c8:	fa 80       	ldd	r15, Y+2	; 0x02
     8ca:	0b 81       	ldd	r16, Y+3	; 0x03
     8cc:	1c 81       	ldd	r17, Y+4	; 0x04
     8ce:	2d 81       	ldd	r18, Y+5	; 0x05
     8d0:	3e 81       	ldd	r19, Y+6	; 0x06
     8d2:	4f 81       	ldd	r20, Y+7	; 0x07
     8d4:	58 85       	ldd	r21, Y+8	; 0x08
     8d6:	69 85       	ldd	r22, Y+9	; 0x09
     8d8:	7a 85       	ldd	r23, Y+10	; 0x0a
     8da:	8b 85       	ldd	r24, Y+11	; 0x0b
     8dc:	e8 dd       	rcall	.-1072   	; 0x4ae <can_handle_slider_message>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8de:	8f e3       	ldi	r24, 0x3F	; 63
     8e0:	9c e9       	ldi	r25, 0x9C	; 156
     8e2:	01 97       	sbiw	r24, 0x01	; 1
     8e4:	f1 f7       	brne	.-4      	; 0x8e2 <main+0x14a>
     8e6:	00 c0       	rjmp	.+0      	; 0x8e8 <main+0x150>
     8e8:	00 00       	nop
     8ea:	cf cf       	rjmp	.-98     	; 0x88a <main+0xf2>

000008ec <pid_init>:

float reference;
float integral;
float prev_error;

void pid_init(float _kp, float _ki, float _kd){
     8ec:	ef 92       	push	r14
     8ee:	ff 92       	push	r15
     8f0:	0f 93       	push	r16
     8f2:	1f 93       	push	r17
	kp = _kp;
     8f4:	60 93 be 02 	sts	0x02BE, r22
     8f8:	70 93 bf 02 	sts	0x02BF, r23
     8fc:	80 93 c0 02 	sts	0x02C0, r24
     900:	90 93 c1 02 	sts	0x02C1, r25
	ki = _ki;
     904:	20 93 b2 02 	sts	0x02B2, r18
     908:	30 93 b3 02 	sts	0x02B3, r19
     90c:	40 93 b4 02 	sts	0x02B4, r20
     910:	50 93 b5 02 	sts	0x02B5, r21
	kd = _kd;
     914:	e0 92 aa 02 	sts	0x02AA, r14
     918:	f0 92 ab 02 	sts	0x02AB, r15
     91c:	00 93 ac 02 	sts	0x02AC, r16
     920:	10 93 ad 02 	sts	0x02AD, r17
	
	reference	= 0;
     924:	10 92 ae 02 	sts	0x02AE, r1
     928:	10 92 af 02 	sts	0x02AF, r1
     92c:	10 92 b0 02 	sts	0x02B0, r1
     930:	10 92 b1 02 	sts	0x02B1, r1
	integral	= 0;
     934:	10 92 ba 02 	sts	0x02BA, r1
     938:	10 92 bb 02 	sts	0x02BB, r1
     93c:	10 92 bc 02 	sts	0x02BC, r1
     940:	10 92 bd 02 	sts	0x02BD, r1
	prev_error	= 0;
     944:	10 92 b6 02 	sts	0x02B6, r1
     948:	10 92 b7 02 	sts	0x02B7, r1
     94c:	10 92 b8 02 	sts	0x02B8, r1
     950:	10 92 b9 02 	sts	0x02B9, r1
	
}
     954:	1f 91       	pop	r17
     956:	0f 91       	pop	r16
     958:	ff 90       	pop	r15
     95a:	ef 90       	pop	r14
     95c:	08 95       	ret

0000095e <pid_generate>:


float pid_generate(float r, float y, float dt){
     95e:	4f 92       	push	r4
     960:	5f 92       	push	r5
     962:	6f 92       	push	r6
     964:	7f 92       	push	r7
     966:	8f 92       	push	r8
     968:	9f 92       	push	r9
     96a:	af 92       	push	r10
     96c:	bf 92       	push	r11
     96e:	cf 92       	push	r12
     970:	df 92       	push	r13
     972:	ef 92       	push	r14
     974:	ff 92       	push	r15
     976:	0f 93       	push	r16
     978:	1f 93       	push	r17
     97a:	27 01       	movw	r4, r14
     97c:	38 01       	movw	r6, r16
	
	float error = r - y;
     97e:	8b d1       	rcall	.+790    	; 0xc96 <__subsf3>
     980:	6b 01       	movw	r12, r22
     982:	7c 01       	movw	r14, r24
	integral += error * dt;
     984:	a3 01       	movw	r20, r6
     986:	92 01       	movw	r18, r4
     988:	12 d3       	rcall	.+1572   	; 0xfae <__mulsf3>
     98a:	20 91 ba 02 	lds	r18, 0x02BA
     98e:	30 91 bb 02 	lds	r19, 0x02BB
     992:	40 91 bc 02 	lds	r20, 0x02BC
     996:	50 91 bd 02 	lds	r21, 0x02BD
     99a:	7e d1       	rcall	.+764    	; 0xc98 <__addsf3>
     99c:	4b 01       	movw	r8, r22
     99e:	5c 01       	movw	r10, r24
     9a0:	60 93 ba 02 	sts	0x02BA, r22
     9a4:	70 93 bb 02 	sts	0x02BB, r23
     9a8:	80 93 bc 02 	sts	0x02BC, r24
     9ac:	90 93 bd 02 	sts	0x02BD, r25
	float derivative = (error - prev_error) / dt;
     9b0:	20 91 b6 02 	lds	r18, 0x02B6
     9b4:	30 91 b7 02 	lds	r19, 0x02B7
     9b8:	40 91 b8 02 	lds	r20, 0x02B8
     9bc:	50 91 b9 02 	lds	r21, 0x02B9
     9c0:	c7 01       	movw	r24, r14
     9c2:	b6 01       	movw	r22, r12
     9c4:	68 d1       	rcall	.+720    	; 0xc96 <__subsf3>
     9c6:	a3 01       	movw	r20, r6
     9c8:	92 01       	movw	r18, r4
     9ca:	ca d1       	rcall	.+916    	; 0xd60 <__divsf3>
     9cc:	2b 01       	movw	r4, r22
     9ce:	3c 01       	movw	r6, r24
	
	prev_error = error;
     9d0:	c0 92 b6 02 	sts	0x02B6, r12
     9d4:	d0 92 b7 02 	sts	0x02B7, r13
     9d8:	e0 92 b8 02 	sts	0x02B8, r14
     9dc:	f0 92 b9 02 	sts	0x02B9, r15
	
	return kp*error + ki*integral + kd*derivative;
     9e0:	20 91 be 02 	lds	r18, 0x02BE
     9e4:	30 91 bf 02 	lds	r19, 0x02BF
     9e8:	40 91 c0 02 	lds	r20, 0x02C0
     9ec:	50 91 c1 02 	lds	r21, 0x02C1
     9f0:	c7 01       	movw	r24, r14
     9f2:	b6 01       	movw	r22, r12
     9f4:	dc d2       	rcall	.+1464   	; 0xfae <__mulsf3>
     9f6:	6b 01       	movw	r12, r22
     9f8:	7c 01       	movw	r14, r24
     9fa:	20 91 b2 02 	lds	r18, 0x02B2
     9fe:	30 91 b3 02 	lds	r19, 0x02B3
     a02:	40 91 b4 02 	lds	r20, 0x02B4
     a06:	50 91 b5 02 	lds	r21, 0x02B5
     a0a:	c5 01       	movw	r24, r10
     a0c:	b4 01       	movw	r22, r8
     a0e:	cf d2       	rcall	.+1438   	; 0xfae <__mulsf3>
     a10:	9b 01       	movw	r18, r22
     a12:	ac 01       	movw	r20, r24
     a14:	c7 01       	movw	r24, r14
     a16:	b6 01       	movw	r22, r12
     a18:	3f d1       	rcall	.+638    	; 0xc98 <__addsf3>
     a1a:	6b 01       	movw	r12, r22
     a1c:	7c 01       	movw	r14, r24
     a1e:	20 91 aa 02 	lds	r18, 0x02AA
     a22:	30 91 ab 02 	lds	r19, 0x02AB
     a26:	40 91 ac 02 	lds	r20, 0x02AC
     a2a:	50 91 ad 02 	lds	r21, 0x02AD
     a2e:	c3 01       	movw	r24, r6
     a30:	b2 01       	movw	r22, r4
     a32:	bd d2       	rcall	.+1402   	; 0xfae <__mulsf3>
     a34:	9b 01       	movw	r18, r22
     a36:	ac 01       	movw	r20, r24
     a38:	c7 01       	movw	r24, r14
     a3a:	b6 01       	movw	r22, r12
     a3c:	2d d1       	rcall	.+602    	; 0xc98 <__addsf3>
     a3e:	1f 91       	pop	r17
     a40:	0f 91       	pop	r16
     a42:	ff 90       	pop	r15
     a44:	ef 90       	pop	r14
     a46:	df 90       	pop	r13
     a48:	cf 90       	pop	r12
     a4a:	bf 90       	pop	r11
     a4c:	af 90       	pop	r10
     a4e:	9f 90       	pop	r9
     a50:	8f 90       	pop	r8
     a52:	7f 90       	pop	r7
     a54:	6f 90       	pop	r6
     a56:	5f 90       	pop	r5
     a58:	4f 90       	pop	r4
     a5a:	08 95       	ret

00000a5c <pwm_init>:
	OCR4A = 2/1000*F_CPU/prescaler;
	*/
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     a5c:	6b 9a       	sbi	0x0d, 3	; 13
     a5e:	e0 e9       	ldi	r30, 0x90	; 144
     a60:	f0 e0       	ldi	r31, 0x00	; 0
     a62:	80 81       	ld	r24, Z
     a64:	8e 7b       	andi	r24, 0xBE	; 190
     a66:	80 83       	st	Z, r24
     a68:	80 81       	ld	r24, Z
     a6a:	82 68       	ori	r24, 0x82	; 130
     a6c:	80 83       	st	Z, r24
     a6e:	e1 e9       	ldi	r30, 0x91	; 145
     a70:	f0 e0       	ldi	r31, 0x00	; 0
     a72:	80 81       	ld	r24, Z
     a74:	8d 61       	ori	r24, 0x1D	; 29
     a76:	80 83       	st	Z, r24
     a78:	80 81       	ld	r24, Z
     a7a:	8d 7f       	andi	r24, 0xFD	; 253
     a7c:	80 83       	st	Z, r24
     a7e:	88 e3       	ldi	r24, 0x38	; 56
     a80:	91 e0       	ldi	r25, 0x01	; 1
     a82:	90 93 97 00 	sts	0x0097, r25
     a86:	80 93 96 00 	sts	0x0096, r24
     a8a:	08 95       	ret

00000a8c <pwm_set_servo>:
}

void pwm_set_servo(unsigned int val){
	val = (val*19)/255 + servo_min;
     a8c:	43 e1       	ldi	r20, 0x13	; 19
     a8e:	48 9f       	mul	r20, r24
     a90:	90 01       	movw	r18, r0
     a92:	49 9f       	mul	r20, r25
     a94:	30 0d       	add	r19, r0
     a96:	11 24       	eor	r1, r1
     a98:	a1 e8       	ldi	r26, 0x81	; 129
     a9a:	b0 e8       	ldi	r27, 0x80	; 128
     a9c:	78 d6       	rcall	.+3312   	; 0x178e <__umulhisi3>
     a9e:	88 0f       	add	r24, r24
     aa0:	89 2f       	mov	r24, r25
     aa2:	88 1f       	adc	r24, r24
     aa4:	99 0b       	sbc	r25, r25
     aa6:	91 95       	neg	r25
	if((val <= (servo_mid + 1)) && (val >= (servo_mid - 1))){
     aa8:	9c 01       	movw	r18, r24
     aaa:	2b 50       	subi	r18, 0x0B	; 11
     aac:	31 09       	sbc	r19, r1
     aae:	23 30       	cpi	r18, 0x03	; 3
     ab0:	31 05       	cpc	r19, r1
     ab2:	38 f4       	brcc	.+14     	; 0xac2 <pwm_set_servo+0x36>
	OCR4A = 2/1000*F_CPU/prescaler;
	*/
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     ab4:	89 e1       	ldi	r24, 0x19	; 25
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	90 93 99 00 	sts	0x0099, r25
     abc:	80 93 98 00 	sts	0x0098, r24
     ac0:	08 95       	ret
	val = (val*19)/255 + servo_min;
	if((val <= (servo_mid + 1)) && (val >= (servo_mid - 1))){
		pwm_set_value(servo_mid);
	}
	
	else if((val >= servo_min) && (val <= servo_max)){
     ac2:	89 31       	cpi	r24, 0x19	; 25
     ac4:	91 05       	cpc	r25, r1
     ac6:	30 f4       	brcc	.+12     	; 0xad4 <pwm_set_servo+0x48>
void pwm_set_value(unsigned int val){
	OCR3A = val;
}

void pwm_set_servo(unsigned int val){
	val = (val*19)/255 + servo_min;
     ac8:	0d 96       	adiw	r24, 0x0d	; 13
	OCR4A = 2/1000*F_CPU/prescaler;
	*/
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     aca:	90 93 99 00 	sts	0x0099, r25
     ace:	80 93 98 00 	sts	0x0098, r24
     ad2:	08 95       	ret
     ad4:	89 e1       	ldi	r24, 0x19	; 25
     ad6:	90 e0       	ldi	r25, 0x00	; 0
     ad8:	90 93 99 00 	sts	0x0099, r25
     adc:	80 93 98 00 	sts	0x0098, r24
     ae0:	08 95       	ret

00000ae2 <SPI_masterInit>:
#include <stdio.h>
#include <stdlib.h>

void SPI_masterInit(void){
	/* Set MOSI and SCK output, all others input */
	DDRB = (1 << PB2)|(1 << PB1)|(1 << PB0); //0 = SS, 3 = SI, 2 = SCK
     ae2:	87 e0       	ldi	r24, 0x07	; 7
     ae4:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //SO
     ae6:	23 98       	cbi	0x04, 3	; 4
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     ae8:	81 e5       	ldi	r24, 0x51	; 81
     aea:	8c bd       	out	0x2c, r24	; 44
     aec:	08 95       	ret

00000aee <SPI_transmit>:
}
uint8_t SPI_transmit(char cData){
	/* Start transmission */
	SPDR = cData;
     aee:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
     af0:	0d b4       	in	r0, 0x2d	; 45
     af2:	07 fe       	sbrs	r0, 7
     af4:	fd cf       	rjmp	.-6      	; 0xaf0 <SPI_transmit+0x2>
	return SPDR;
     af6:	8e b5       	in	r24, 0x2e	; 46
     af8:	08 95       	ret

00000afa <TWI_Master_Initialise>:
		{
			msg[ i ] = TWI_buf[ i ];
		}
	}
	return( TWI_statusReg.lastTransOK );
}
     afa:	8c e0       	ldi	r24, 0x0C	; 12
     afc:	80 93 b8 00 	sts	0x00B8, r24
     b00:	8f ef       	ldi	r24, 0xFF	; 255
     b02:	80 93 bb 00 	sts	0x00BB, r24
     b06:	84 e0       	ldi	r24, 0x04	; 4
     b08:	80 93 bc 00 	sts	0x00BC, r24
     b0c:	08 95       	ret

00000b0e <TWI_Start_Transceiver_With_Data>:
     b0e:	ec eb       	ldi	r30, 0xBC	; 188
     b10:	f0 e0       	ldi	r31, 0x00	; 0
     b12:	20 81       	ld	r18, Z
     b14:	20 fd       	sbrc	r18, 0
     b16:	fd cf       	rjmp	.-6      	; 0xb12 <TWI_Start_Transceiver_With_Data+0x4>
     b18:	60 93 a1 02 	sts	0x02A1, r22
     b1c:	fc 01       	movw	r30, r24
     b1e:	20 81       	ld	r18, Z
     b20:	20 93 a2 02 	sts	0x02A2, r18
     b24:	20 fd       	sbrc	r18, 0
     b26:	0c c0       	rjmp	.+24     	; 0xb40 <TWI_Start_Transceiver_With_Data+0x32>
     b28:	62 30       	cpi	r22, 0x02	; 2
     b2a:	50 f0       	brcs	.+20     	; 0xb40 <TWI_Start_Transceiver_With_Data+0x32>
     b2c:	dc 01       	movw	r26, r24
     b2e:	11 96       	adiw	r26, 0x01	; 1
     b30:	e3 ea       	ldi	r30, 0xA3	; 163
     b32:	f2 e0       	ldi	r31, 0x02	; 2
     b34:	81 e0       	ldi	r24, 0x01	; 1
     b36:	9d 91       	ld	r25, X+
     b38:	91 93       	st	Z+, r25
     b3a:	8f 5f       	subi	r24, 0xFF	; 255
     b3c:	86 13       	cpse	r24, r22
     b3e:	fb cf       	rjmp	.-10     	; 0xb36 <TWI_Start_Transceiver_With_Data+0x28>
     b40:	10 92 a0 02 	sts	0x02A0, r1
     b44:	88 ef       	ldi	r24, 0xF8	; 248
     b46:	80 93 06 02 	sts	0x0206, r24
     b4a:	85 ea       	ldi	r24, 0xA5	; 165
     b4c:	80 93 bc 00 	sts	0x00BC, r24
     b50:	08 95       	ret

00000b52 <__vector_39>:
This function is the Interrupt Service Routine (ISR), and called when the TWI interrupt is triggered;
that is whenever a TWI event has occurred. This function should not be called directly from the main
application.
****************************************************************************/
ISR(TWI_vect)
{
     b52:	1f 92       	push	r1
     b54:	0f 92       	push	r0
     b56:	0f b6       	in	r0, 0x3f	; 63
     b58:	0f 92       	push	r0
     b5a:	11 24       	eor	r1, r1
     b5c:	0b b6       	in	r0, 0x3b	; 59
     b5e:	0f 92       	push	r0
     b60:	2f 93       	push	r18
     b62:	3f 93       	push	r19
     b64:	8f 93       	push	r24
     b66:	9f 93       	push	r25
     b68:	af 93       	push	r26
     b6a:	bf 93       	push	r27
     b6c:	ef 93       	push	r30
     b6e:	ff 93       	push	r31
	static unsigned char TWI_bufPtr;
	
	switch (TWSR)
     b70:	80 91 b9 00 	lds	r24, 0x00B9
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	fc 01       	movw	r30, r24
     b78:	38 97       	sbiw	r30, 0x08	; 8
     b7a:	e1 35       	cpi	r30, 0x51	; 81
     b7c:	f1 05       	cpc	r31, r1
     b7e:	08 f0       	brcs	.+2      	; 0xb82 <__vector_39+0x30>
     b80:	55 c0       	rjmp	.+170    	; 0xc2c <__vector_39+0xda>
     b82:	ee 58       	subi	r30, 0x8E	; 142
     b84:	ff 4f       	sbci	r31, 0xFF	; 255
     b86:	fd c5       	rjmp	.+3066   	; 0x1782 <__tablejump2__>
	{
		case TWI_START:             // START has been transmitted
		case TWI_REP_START:         // Repeated START has been transmitted
		TWI_bufPtr = 0;                                     // Set buffer pointer to the TWI Address location
     b88:	10 92 9f 02 	sts	0x029F, r1
		case TWI_MTX_ADR_ACK:       // SLA+W has been tramsmitted and ACK received
		case TWI_MTX_DATA_ACK:      // Data byte has been tramsmitted and ACK received
		if (TWI_bufPtr < TWI_msgSize)
     b8c:	e0 91 9f 02 	lds	r30, 0x029F
     b90:	80 91 a1 02 	lds	r24, 0x02A1
     b94:	e8 17       	cp	r30, r24
     b96:	70 f4       	brcc	.+28     	; 0xbb4 <__vector_39+0x62>
		{
			TWDR = TWI_buf[TWI_bufPtr++];
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	8e 0f       	add	r24, r30
     b9c:	80 93 9f 02 	sts	0x029F, r24
     ba0:	f0 e0       	ldi	r31, 0x00	; 0
     ba2:	ee 55       	subi	r30, 0x5E	; 94
     ba4:	fd 4f       	sbci	r31, 0xFD	; 253
     ba6:	80 81       	ld	r24, Z
     ba8:	80 93 bb 00 	sts	0x00BB, r24
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     bac:	85 e8       	ldi	r24, 0x85	; 133
     bae:	80 93 bc 00 	sts	0x00BC, r24
     bb2:	43 c0       	rjmp	.+134    	; 0xc3a <__vector_39+0xe8>
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to send byte
			(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           //
			(0<<TWWC);                                 //
		}else                    // Send STOP after last byte
		{
			TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully.
     bb4:	80 91 a0 02 	lds	r24, 0x02A0
     bb8:	81 60       	ori	r24, 0x01	; 1
     bba:	80 93 a0 02 	sts	0x02A0, r24
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     bbe:	84 e9       	ldi	r24, 0x94	; 148
     bc0:	80 93 bc 00 	sts	0x00BC, r24
     bc4:	3a c0       	rjmp	.+116    	; 0xc3a <__vector_39+0xe8>
			(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
			(0<<TWWC);                                 //
		}
		break;
		case TWI_MRX_DATA_ACK:      // Data byte has been received and ACK tramsmitted
		TWI_buf[TWI_bufPtr++] = TWDR;
     bc6:	e0 91 9f 02 	lds	r30, 0x029F
     bca:	81 e0       	ldi	r24, 0x01	; 1
     bcc:	8e 0f       	add	r24, r30
     bce:	80 93 9f 02 	sts	0x029F, r24
     bd2:	80 91 bb 00 	lds	r24, 0x00BB
     bd6:	f0 e0       	ldi	r31, 0x00	; 0
     bd8:	ee 55       	subi	r30, 0x5E	; 94
     bda:	fd 4f       	sbci	r31, 0xFD	; 253
     bdc:	80 83       	st	Z, r24
		case TWI_MRX_ADR_ACK:       // SLA+R has been tramsmitted and ACK received
		if (TWI_bufPtr < (TWI_msgSize-1) )                  // Detect the last byte to NACK it.
     bde:	20 91 9f 02 	lds	r18, 0x029F
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	80 91 a1 02 	lds	r24, 0x02A1
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	01 97       	sbiw	r24, 0x01	; 1
     bec:	28 17       	cp	r18, r24
     bee:	39 07       	cpc	r19, r25
     bf0:	24 f4       	brge	.+8      	; 0xbfa <__vector_39+0xa8>
		{
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     bf2:	85 ec       	ldi	r24, 0xC5	; 197
     bf4:	80 93 bc 00 	sts	0x00BC, r24
     bf8:	20 c0       	rjmp	.+64     	; 0xc3a <__vector_39+0xe8>
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to read next byte
			(1<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send ACK after reception
			(0<<TWWC);                                 //
		}else                    // Send NACK after next reception
		{
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     bfa:	85 e8       	ldi	r24, 0x85	; 133
     bfc:	80 93 bc 00 	sts	0x00BC, r24
     c00:	1c c0       	rjmp	.+56     	; 0xc3a <__vector_39+0xe8>
			(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send NACK after reception
			(0<<TWWC);                                 //
		}
		break;
		case TWI_MRX_DATA_NACK:     // Data byte has been received and NACK tramsmitted
		TWI_buf[TWI_bufPtr] = TWDR;
     c02:	80 91 bb 00 	lds	r24, 0x00BB
     c06:	e0 91 9f 02 	lds	r30, 0x029F
     c0a:	f0 e0       	ldi	r31, 0x00	; 0
     c0c:	ee 55       	subi	r30, 0x5E	; 94
     c0e:	fd 4f       	sbci	r31, 0xFD	; 253
     c10:	80 83       	st	Z, r24
		TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully.
     c12:	80 91 a0 02 	lds	r24, 0x02A0
     c16:	81 60       	ori	r24, 0x01	; 1
     c18:	80 93 a0 02 	sts	0x02A0, r24
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     c1c:	84 e9       	ldi	r24, 0x94	; 148
     c1e:	80 93 bc 00 	sts	0x00BC, r24
		(0<<TWIE)|(1<<TWINT)|                      // Disable TWI Interrupt and clear the flag
		(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
		(0<<TWWC);                                 //
		break;
     c22:	0b c0       	rjmp	.+22     	; 0xc3a <__vector_39+0xe8>
		case TWI_ARB_LOST:          // Arbitration lost
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     c24:	85 ea       	ldi	r24, 0xA5	; 165
     c26:	80 93 bc 00 	sts	0x00BC, r24
		(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag
		(0<<TWEA)|(1<<TWSTA)|(0<<TWSTO)|           // Initiate a (RE)START condition.
		(0<<TWWC);                                 //
		break;
     c2a:	07 c0       	rjmp	.+14     	; 0xc3a <__vector_39+0xe8>
		case TWI_MRX_ADR_NACK:      // SLA+R has been tramsmitted and NACK received
		case TWI_MTX_DATA_NACK:     // Data byte has been tramsmitted and NACK received
		//    case TWI_NO_STATE              // No relevant state information available; TWINT = ?0?
		case TWI_BUS_ERROR:         // Bus error due to an illegal START or STOP condition
		default:
		TWI_state = TWSR;                                 // Store TWSR and automatically sets clears noErrors bit.
     c2c:	80 91 b9 00 	lds	r24, 0x00B9
     c30:	80 93 06 02 	sts	0x0206, r24
		// Reset TWI Interface
		TWCR = (1<<TWEN)|                                 // Enable TWI-interface and release TWI pins
     c34:	84 e0       	ldi	r24, 0x04	; 4
     c36:	80 93 bc 00 	sts	0x00BC, r24
		(0<<TWIE)|(0<<TWINT)|                      // Disable Interupt
		(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // No Signal requests
		(0<<TWWC);                                 //
	}
     c3a:	ff 91       	pop	r31
     c3c:	ef 91       	pop	r30
     c3e:	bf 91       	pop	r27
     c40:	af 91       	pop	r26
     c42:	9f 91       	pop	r25
     c44:	8f 91       	pop	r24
     c46:	3f 91       	pop	r19
     c48:	2f 91       	pop	r18
     c4a:	0f 90       	pop	r0
     c4c:	0b be       	out	0x3b, r0	; 59
     c4e:	0f 90       	pop	r0
     c50:	0f be       	out	0x3f, r0	; 63
     c52:	0f 90       	pop	r0
     c54:	1f 90       	pop	r1
     c56:	18 95       	reti

00000c58 <USART_Init>:
	_delay_ms(100);
}
void USART_Init(unsigned int ubrr)
{
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
     c58:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
     c5c:	80 93 c4 00 	sts	0x00C4, r24
	
	//Enable receiver and transmitter
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
     c60:	e1 ec       	ldi	r30, 0xC1	; 193
     c62:	f0 e0       	ldi	r31, 0x00	; 0
     c64:	80 81       	ld	r24, Z
     c66:	88 61       	ori	r24, 0x18	; 24
     c68:	80 83       	st	Z, r24
	
	//Set frame format: 8data, 1stop bit
	UCSR0C |= (3<<UCSZ00);
     c6a:	e2 ec       	ldi	r30, 0xC2	; 194
     c6c:	f0 e0       	ldi	r31, 0x00	; 0
     c6e:	80 81       	ld	r24, Z
     c70:	86 60       	ori	r24, 0x06	; 6
     c72:	80 83       	st	Z, r24
     c74:	08 95       	ret

00000c76 <USART_Transmit>:
}
void USART_Transmit(unsigned char data){
	/*Wait for empty transmit buffer*/
	while( !(UCSR0A & (1<<UDRE0)) );
     c76:	e0 ec       	ldi	r30, 0xC0	; 192
     c78:	f0 e0       	ldi	r31, 0x00	; 0
     c7a:	90 81       	ld	r25, Z
     c7c:	95 ff       	sbrs	r25, 5
     c7e:	fd cf       	rjmp	.-6      	; 0xc7a <USART_Transmit+0x4>
	
	/*Put data into buffer, sends the data*/
	UDR0 = data;
     c80:	80 93 c6 00 	sts	0x00C6, r24
     c84:	08 95       	ret

00000c86 <USART_Receive>:
}
unsigned char USART_Receive(void){
	/*Wait for data to be received*/
	while( !(UCSR0A & (1<<RXC0)) );
     c86:	e0 ec       	ldi	r30, 0xC0	; 192
     c88:	f0 e0       	ldi	r31, 0x00	; 0
     c8a:	80 81       	ld	r24, Z
     c8c:	88 23       	and	r24, r24
     c8e:	ec f7       	brge	.-6      	; 0xc8a <USART_Receive+0x4>
	
	
	/*Get and return received data from buffer*/
	return UDR0;
     c90:	80 91 c6 00 	lds	r24, 0x00C6
     c94:	08 95       	ret

00000c96 <__subsf3>:
     c96:	50 58       	subi	r21, 0x80	; 128

00000c98 <__addsf3>:
     c98:	bb 27       	eor	r27, r27
     c9a:	aa 27       	eor	r26, r26
     c9c:	0e d0       	rcall	.+28     	; 0xcba <__addsf3x>
     c9e:	4d c1       	rjmp	.+666    	; 0xf3a <__fp_round>
     ca0:	3e d1       	rcall	.+636    	; 0xf1e <__fp_pscA>
     ca2:	30 f0       	brcs	.+12     	; 0xcb0 <__addsf3+0x18>
     ca4:	43 d1       	rcall	.+646    	; 0xf2c <__fp_pscB>
     ca6:	20 f0       	brcs	.+8      	; 0xcb0 <__addsf3+0x18>
     ca8:	31 f4       	brne	.+12     	; 0xcb6 <__addsf3+0x1e>
     caa:	9f 3f       	cpi	r25, 0xFF	; 255
     cac:	11 f4       	brne	.+4      	; 0xcb2 <__addsf3+0x1a>
     cae:	1e f4       	brtc	.+6      	; 0xcb6 <__addsf3+0x1e>
     cb0:	33 c1       	rjmp	.+614    	; 0xf18 <__fp_nan>
     cb2:	0e f4       	brtc	.+2      	; 0xcb6 <__addsf3+0x1e>
     cb4:	e0 95       	com	r30
     cb6:	e7 fb       	bst	r30, 7
     cb8:	29 c1       	rjmp	.+594    	; 0xf0c <__fp_inf>

00000cba <__addsf3x>:
     cba:	e9 2f       	mov	r30, r25
     cbc:	4f d1       	rcall	.+670    	; 0xf5c <__fp_split3>
     cbe:	80 f3       	brcs	.-32     	; 0xca0 <__addsf3+0x8>
     cc0:	ba 17       	cp	r27, r26
     cc2:	62 07       	cpc	r22, r18
     cc4:	73 07       	cpc	r23, r19
     cc6:	84 07       	cpc	r24, r20
     cc8:	95 07       	cpc	r25, r21
     cca:	18 f0       	brcs	.+6      	; 0xcd2 <__addsf3x+0x18>
     ccc:	71 f4       	brne	.+28     	; 0xcea <__addsf3x+0x30>
     cce:	9e f5       	brtc	.+102    	; 0xd36 <__addsf3x+0x7c>
     cd0:	67 c1       	rjmp	.+718    	; 0xfa0 <__fp_zero>
     cd2:	0e f4       	brtc	.+2      	; 0xcd6 <__addsf3x+0x1c>
     cd4:	e0 95       	com	r30
     cd6:	0b 2e       	mov	r0, r27
     cd8:	ba 2f       	mov	r27, r26
     cda:	a0 2d       	mov	r26, r0
     cdc:	0b 01       	movw	r0, r22
     cde:	b9 01       	movw	r22, r18
     ce0:	90 01       	movw	r18, r0
     ce2:	0c 01       	movw	r0, r24
     ce4:	ca 01       	movw	r24, r20
     ce6:	a0 01       	movw	r20, r0
     ce8:	11 24       	eor	r1, r1
     cea:	ff 27       	eor	r31, r31
     cec:	59 1b       	sub	r21, r25
     cee:	99 f0       	breq	.+38     	; 0xd16 <__addsf3x+0x5c>
     cf0:	59 3f       	cpi	r21, 0xF9	; 249
     cf2:	50 f4       	brcc	.+20     	; 0xd08 <__addsf3x+0x4e>
     cf4:	50 3e       	cpi	r21, 0xE0	; 224
     cf6:	68 f1       	brcs	.+90     	; 0xd52 <__addsf3x+0x98>
     cf8:	1a 16       	cp	r1, r26
     cfa:	f0 40       	sbci	r31, 0x00	; 0
     cfc:	a2 2f       	mov	r26, r18
     cfe:	23 2f       	mov	r18, r19
     d00:	34 2f       	mov	r19, r20
     d02:	44 27       	eor	r20, r20
     d04:	58 5f       	subi	r21, 0xF8	; 248
     d06:	f3 cf       	rjmp	.-26     	; 0xcee <__addsf3x+0x34>
     d08:	46 95       	lsr	r20
     d0a:	37 95       	ror	r19
     d0c:	27 95       	ror	r18
     d0e:	a7 95       	ror	r26
     d10:	f0 40       	sbci	r31, 0x00	; 0
     d12:	53 95       	inc	r21
     d14:	c9 f7       	brne	.-14     	; 0xd08 <__addsf3x+0x4e>
     d16:	7e f4       	brtc	.+30     	; 0xd36 <__addsf3x+0x7c>
     d18:	1f 16       	cp	r1, r31
     d1a:	ba 0b       	sbc	r27, r26
     d1c:	62 0b       	sbc	r22, r18
     d1e:	73 0b       	sbc	r23, r19
     d20:	84 0b       	sbc	r24, r20
     d22:	ba f0       	brmi	.+46     	; 0xd52 <__addsf3x+0x98>
     d24:	91 50       	subi	r25, 0x01	; 1
     d26:	a1 f0       	breq	.+40     	; 0xd50 <__addsf3x+0x96>
     d28:	ff 0f       	add	r31, r31
     d2a:	bb 1f       	adc	r27, r27
     d2c:	66 1f       	adc	r22, r22
     d2e:	77 1f       	adc	r23, r23
     d30:	88 1f       	adc	r24, r24
     d32:	c2 f7       	brpl	.-16     	; 0xd24 <__addsf3x+0x6a>
     d34:	0e c0       	rjmp	.+28     	; 0xd52 <__addsf3x+0x98>
     d36:	ba 0f       	add	r27, r26
     d38:	62 1f       	adc	r22, r18
     d3a:	73 1f       	adc	r23, r19
     d3c:	84 1f       	adc	r24, r20
     d3e:	48 f4       	brcc	.+18     	; 0xd52 <__addsf3x+0x98>
     d40:	87 95       	ror	r24
     d42:	77 95       	ror	r23
     d44:	67 95       	ror	r22
     d46:	b7 95       	ror	r27
     d48:	f7 95       	ror	r31
     d4a:	9e 3f       	cpi	r25, 0xFE	; 254
     d4c:	08 f0       	brcs	.+2      	; 0xd50 <__addsf3x+0x96>
     d4e:	b3 cf       	rjmp	.-154    	; 0xcb6 <__addsf3+0x1e>
     d50:	93 95       	inc	r25
     d52:	88 0f       	add	r24, r24
     d54:	08 f0       	brcs	.+2      	; 0xd58 <__addsf3x+0x9e>
     d56:	99 27       	eor	r25, r25
     d58:	ee 0f       	add	r30, r30
     d5a:	97 95       	ror	r25
     d5c:	87 95       	ror	r24
     d5e:	08 95       	ret

00000d60 <__divsf3>:
     d60:	0c d0       	rcall	.+24     	; 0xd7a <__divsf3x>
     d62:	eb c0       	rjmp	.+470    	; 0xf3a <__fp_round>
     d64:	e3 d0       	rcall	.+454    	; 0xf2c <__fp_pscB>
     d66:	40 f0       	brcs	.+16     	; 0xd78 <__divsf3+0x18>
     d68:	da d0       	rcall	.+436    	; 0xf1e <__fp_pscA>
     d6a:	30 f0       	brcs	.+12     	; 0xd78 <__divsf3+0x18>
     d6c:	21 f4       	brne	.+8      	; 0xd76 <__divsf3+0x16>
     d6e:	5f 3f       	cpi	r21, 0xFF	; 255
     d70:	19 f0       	breq	.+6      	; 0xd78 <__divsf3+0x18>
     d72:	cc c0       	rjmp	.+408    	; 0xf0c <__fp_inf>
     d74:	51 11       	cpse	r21, r1
     d76:	15 c1       	rjmp	.+554    	; 0xfa2 <__fp_szero>
     d78:	cf c0       	rjmp	.+414    	; 0xf18 <__fp_nan>

00000d7a <__divsf3x>:
     d7a:	f0 d0       	rcall	.+480    	; 0xf5c <__fp_split3>
     d7c:	98 f3       	brcs	.-26     	; 0xd64 <__divsf3+0x4>

00000d7e <__divsf3_pse>:
     d7e:	99 23       	and	r25, r25
     d80:	c9 f3       	breq	.-14     	; 0xd74 <__divsf3+0x14>
     d82:	55 23       	and	r21, r21
     d84:	b1 f3       	breq	.-20     	; 0xd72 <__divsf3+0x12>
     d86:	95 1b       	sub	r25, r21
     d88:	55 0b       	sbc	r21, r21
     d8a:	bb 27       	eor	r27, r27
     d8c:	aa 27       	eor	r26, r26
     d8e:	62 17       	cp	r22, r18
     d90:	73 07       	cpc	r23, r19
     d92:	84 07       	cpc	r24, r20
     d94:	38 f0       	brcs	.+14     	; 0xda4 <__divsf3_pse+0x26>
     d96:	9f 5f       	subi	r25, 0xFF	; 255
     d98:	5f 4f       	sbci	r21, 0xFF	; 255
     d9a:	22 0f       	add	r18, r18
     d9c:	33 1f       	adc	r19, r19
     d9e:	44 1f       	adc	r20, r20
     da0:	aa 1f       	adc	r26, r26
     da2:	a9 f3       	breq	.-22     	; 0xd8e <__divsf3_pse+0x10>
     da4:	33 d0       	rcall	.+102    	; 0xe0c <__divsf3_pse+0x8e>
     da6:	0e 2e       	mov	r0, r30
     da8:	3a f0       	brmi	.+14     	; 0xdb8 <__divsf3_pse+0x3a>
     daa:	e0 e8       	ldi	r30, 0x80	; 128
     dac:	30 d0       	rcall	.+96     	; 0xe0e <__divsf3_pse+0x90>
     dae:	91 50       	subi	r25, 0x01	; 1
     db0:	50 40       	sbci	r21, 0x00	; 0
     db2:	e6 95       	lsr	r30
     db4:	00 1c       	adc	r0, r0
     db6:	ca f7       	brpl	.-14     	; 0xdaa <__divsf3_pse+0x2c>
     db8:	29 d0       	rcall	.+82     	; 0xe0c <__divsf3_pse+0x8e>
     dba:	fe 2f       	mov	r31, r30
     dbc:	27 d0       	rcall	.+78     	; 0xe0c <__divsf3_pse+0x8e>
     dbe:	66 0f       	add	r22, r22
     dc0:	77 1f       	adc	r23, r23
     dc2:	88 1f       	adc	r24, r24
     dc4:	bb 1f       	adc	r27, r27
     dc6:	26 17       	cp	r18, r22
     dc8:	37 07       	cpc	r19, r23
     dca:	48 07       	cpc	r20, r24
     dcc:	ab 07       	cpc	r26, r27
     dce:	b0 e8       	ldi	r27, 0x80	; 128
     dd0:	09 f0       	breq	.+2      	; 0xdd4 <__divsf3_pse+0x56>
     dd2:	bb 0b       	sbc	r27, r27
     dd4:	80 2d       	mov	r24, r0
     dd6:	bf 01       	movw	r22, r30
     dd8:	ff 27       	eor	r31, r31
     dda:	93 58       	subi	r25, 0x83	; 131
     ddc:	5f 4f       	sbci	r21, 0xFF	; 255
     dde:	2a f0       	brmi	.+10     	; 0xdea <__divsf3_pse+0x6c>
     de0:	9e 3f       	cpi	r25, 0xFE	; 254
     de2:	51 05       	cpc	r21, r1
     de4:	68 f0       	brcs	.+26     	; 0xe00 <__divsf3_pse+0x82>
     de6:	92 c0       	rjmp	.+292    	; 0xf0c <__fp_inf>
     de8:	dc c0       	rjmp	.+440    	; 0xfa2 <__fp_szero>
     dea:	5f 3f       	cpi	r21, 0xFF	; 255
     dec:	ec f3       	brlt	.-6      	; 0xde8 <__divsf3_pse+0x6a>
     dee:	98 3e       	cpi	r25, 0xE8	; 232
     df0:	dc f3       	brlt	.-10     	; 0xde8 <__divsf3_pse+0x6a>
     df2:	86 95       	lsr	r24
     df4:	77 95       	ror	r23
     df6:	67 95       	ror	r22
     df8:	b7 95       	ror	r27
     dfa:	f7 95       	ror	r31
     dfc:	9f 5f       	subi	r25, 0xFF	; 255
     dfe:	c9 f7       	brne	.-14     	; 0xdf2 <__divsf3_pse+0x74>
     e00:	88 0f       	add	r24, r24
     e02:	91 1d       	adc	r25, r1
     e04:	96 95       	lsr	r25
     e06:	87 95       	ror	r24
     e08:	97 f9       	bld	r25, 7
     e0a:	08 95       	ret
     e0c:	e1 e0       	ldi	r30, 0x01	; 1
     e0e:	66 0f       	add	r22, r22
     e10:	77 1f       	adc	r23, r23
     e12:	88 1f       	adc	r24, r24
     e14:	bb 1f       	adc	r27, r27
     e16:	62 17       	cp	r22, r18
     e18:	73 07       	cpc	r23, r19
     e1a:	84 07       	cpc	r24, r20
     e1c:	ba 07       	cpc	r27, r26
     e1e:	20 f0       	brcs	.+8      	; 0xe28 <__divsf3_pse+0xaa>
     e20:	62 1b       	sub	r22, r18
     e22:	73 0b       	sbc	r23, r19
     e24:	84 0b       	sbc	r24, r20
     e26:	ba 0b       	sbc	r27, r26
     e28:	ee 1f       	adc	r30, r30
     e2a:	88 f7       	brcc	.-30     	; 0xe0e <__divsf3_pse+0x90>
     e2c:	e0 95       	com	r30
     e2e:	08 95       	ret

00000e30 <__fixsfsi>:
     e30:	04 d0       	rcall	.+8      	; 0xe3a <__fixunssfsi>
     e32:	68 94       	set
     e34:	b1 11       	cpse	r27, r1
     e36:	b5 c0       	rjmp	.+362    	; 0xfa2 <__fp_szero>
     e38:	08 95       	ret

00000e3a <__fixunssfsi>:
     e3a:	98 d0       	rcall	.+304    	; 0xf6c <__fp_splitA>
     e3c:	88 f0       	brcs	.+34     	; 0xe60 <__fixunssfsi+0x26>
     e3e:	9f 57       	subi	r25, 0x7F	; 127
     e40:	90 f0       	brcs	.+36     	; 0xe66 <__fixunssfsi+0x2c>
     e42:	b9 2f       	mov	r27, r25
     e44:	99 27       	eor	r25, r25
     e46:	b7 51       	subi	r27, 0x17	; 23
     e48:	a0 f0       	brcs	.+40     	; 0xe72 <__fixunssfsi+0x38>
     e4a:	d1 f0       	breq	.+52     	; 0xe80 <__fixunssfsi+0x46>
     e4c:	66 0f       	add	r22, r22
     e4e:	77 1f       	adc	r23, r23
     e50:	88 1f       	adc	r24, r24
     e52:	99 1f       	adc	r25, r25
     e54:	1a f0       	brmi	.+6      	; 0xe5c <__fixunssfsi+0x22>
     e56:	ba 95       	dec	r27
     e58:	c9 f7       	brne	.-14     	; 0xe4c <__fixunssfsi+0x12>
     e5a:	12 c0       	rjmp	.+36     	; 0xe80 <__fixunssfsi+0x46>
     e5c:	b1 30       	cpi	r27, 0x01	; 1
     e5e:	81 f0       	breq	.+32     	; 0xe80 <__fixunssfsi+0x46>
     e60:	9f d0       	rcall	.+318    	; 0xfa0 <__fp_zero>
     e62:	b1 e0       	ldi	r27, 0x01	; 1
     e64:	08 95       	ret
     e66:	9c c0       	rjmp	.+312    	; 0xfa0 <__fp_zero>
     e68:	67 2f       	mov	r22, r23
     e6a:	78 2f       	mov	r23, r24
     e6c:	88 27       	eor	r24, r24
     e6e:	b8 5f       	subi	r27, 0xF8	; 248
     e70:	39 f0       	breq	.+14     	; 0xe80 <__fixunssfsi+0x46>
     e72:	b9 3f       	cpi	r27, 0xF9	; 249
     e74:	cc f3       	brlt	.-14     	; 0xe68 <__fixunssfsi+0x2e>
     e76:	86 95       	lsr	r24
     e78:	77 95       	ror	r23
     e7a:	67 95       	ror	r22
     e7c:	b3 95       	inc	r27
     e7e:	d9 f7       	brne	.-10     	; 0xe76 <__fixunssfsi+0x3c>
     e80:	3e f4       	brtc	.+14     	; 0xe90 <__fixunssfsi+0x56>
     e82:	90 95       	com	r25
     e84:	80 95       	com	r24
     e86:	70 95       	com	r23
     e88:	61 95       	neg	r22
     e8a:	7f 4f       	sbci	r23, 0xFF	; 255
     e8c:	8f 4f       	sbci	r24, 0xFF	; 255
     e8e:	9f 4f       	sbci	r25, 0xFF	; 255
     e90:	08 95       	ret

00000e92 <__floatunsisf>:
     e92:	e8 94       	clt
     e94:	09 c0       	rjmp	.+18     	; 0xea8 <__floatsisf+0x12>

00000e96 <__floatsisf>:
     e96:	97 fb       	bst	r25, 7
     e98:	3e f4       	brtc	.+14     	; 0xea8 <__floatsisf+0x12>
     e9a:	90 95       	com	r25
     e9c:	80 95       	com	r24
     e9e:	70 95       	com	r23
     ea0:	61 95       	neg	r22
     ea2:	7f 4f       	sbci	r23, 0xFF	; 255
     ea4:	8f 4f       	sbci	r24, 0xFF	; 255
     ea6:	9f 4f       	sbci	r25, 0xFF	; 255
     ea8:	99 23       	and	r25, r25
     eaa:	a9 f0       	breq	.+42     	; 0xed6 <__floatsisf+0x40>
     eac:	f9 2f       	mov	r31, r25
     eae:	96 e9       	ldi	r25, 0x96	; 150
     eb0:	bb 27       	eor	r27, r27
     eb2:	93 95       	inc	r25
     eb4:	f6 95       	lsr	r31
     eb6:	87 95       	ror	r24
     eb8:	77 95       	ror	r23
     eba:	67 95       	ror	r22
     ebc:	b7 95       	ror	r27
     ebe:	f1 11       	cpse	r31, r1
     ec0:	f8 cf       	rjmp	.-16     	; 0xeb2 <__floatsisf+0x1c>
     ec2:	fa f4       	brpl	.+62     	; 0xf02 <__floatsisf+0x6c>
     ec4:	bb 0f       	add	r27, r27
     ec6:	11 f4       	brne	.+4      	; 0xecc <__floatsisf+0x36>
     ec8:	60 ff       	sbrs	r22, 0
     eca:	1b c0       	rjmp	.+54     	; 0xf02 <__floatsisf+0x6c>
     ecc:	6f 5f       	subi	r22, 0xFF	; 255
     ece:	7f 4f       	sbci	r23, 0xFF	; 255
     ed0:	8f 4f       	sbci	r24, 0xFF	; 255
     ed2:	9f 4f       	sbci	r25, 0xFF	; 255
     ed4:	16 c0       	rjmp	.+44     	; 0xf02 <__floatsisf+0x6c>
     ed6:	88 23       	and	r24, r24
     ed8:	11 f0       	breq	.+4      	; 0xede <__floatsisf+0x48>
     eda:	96 e9       	ldi	r25, 0x96	; 150
     edc:	11 c0       	rjmp	.+34     	; 0xf00 <__floatsisf+0x6a>
     ede:	77 23       	and	r23, r23
     ee0:	21 f0       	breq	.+8      	; 0xeea <__floatsisf+0x54>
     ee2:	9e e8       	ldi	r25, 0x8E	; 142
     ee4:	87 2f       	mov	r24, r23
     ee6:	76 2f       	mov	r23, r22
     ee8:	05 c0       	rjmp	.+10     	; 0xef4 <__floatsisf+0x5e>
     eea:	66 23       	and	r22, r22
     eec:	71 f0       	breq	.+28     	; 0xf0a <__floatsisf+0x74>
     eee:	96 e8       	ldi	r25, 0x86	; 134
     ef0:	86 2f       	mov	r24, r22
     ef2:	70 e0       	ldi	r23, 0x00	; 0
     ef4:	60 e0       	ldi	r22, 0x00	; 0
     ef6:	2a f0       	brmi	.+10     	; 0xf02 <__floatsisf+0x6c>
     ef8:	9a 95       	dec	r25
     efa:	66 0f       	add	r22, r22
     efc:	77 1f       	adc	r23, r23
     efe:	88 1f       	adc	r24, r24
     f00:	da f7       	brpl	.-10     	; 0xef8 <__floatsisf+0x62>
     f02:	88 0f       	add	r24, r24
     f04:	96 95       	lsr	r25
     f06:	87 95       	ror	r24
     f08:	97 f9       	bld	r25, 7
     f0a:	08 95       	ret

00000f0c <__fp_inf>:
     f0c:	97 f9       	bld	r25, 7
     f0e:	9f 67       	ori	r25, 0x7F	; 127
     f10:	80 e8       	ldi	r24, 0x80	; 128
     f12:	70 e0       	ldi	r23, 0x00	; 0
     f14:	60 e0       	ldi	r22, 0x00	; 0
     f16:	08 95       	ret

00000f18 <__fp_nan>:
     f18:	9f ef       	ldi	r25, 0xFF	; 255
     f1a:	80 ec       	ldi	r24, 0xC0	; 192
     f1c:	08 95       	ret

00000f1e <__fp_pscA>:
     f1e:	00 24       	eor	r0, r0
     f20:	0a 94       	dec	r0
     f22:	16 16       	cp	r1, r22
     f24:	17 06       	cpc	r1, r23
     f26:	18 06       	cpc	r1, r24
     f28:	09 06       	cpc	r0, r25
     f2a:	08 95       	ret

00000f2c <__fp_pscB>:
     f2c:	00 24       	eor	r0, r0
     f2e:	0a 94       	dec	r0
     f30:	12 16       	cp	r1, r18
     f32:	13 06       	cpc	r1, r19
     f34:	14 06       	cpc	r1, r20
     f36:	05 06       	cpc	r0, r21
     f38:	08 95       	ret

00000f3a <__fp_round>:
     f3a:	09 2e       	mov	r0, r25
     f3c:	03 94       	inc	r0
     f3e:	00 0c       	add	r0, r0
     f40:	11 f4       	brne	.+4      	; 0xf46 <__fp_round+0xc>
     f42:	88 23       	and	r24, r24
     f44:	52 f0       	brmi	.+20     	; 0xf5a <__fp_round+0x20>
     f46:	bb 0f       	add	r27, r27
     f48:	40 f4       	brcc	.+16     	; 0xf5a <__fp_round+0x20>
     f4a:	bf 2b       	or	r27, r31
     f4c:	11 f4       	brne	.+4      	; 0xf52 <__fp_round+0x18>
     f4e:	60 ff       	sbrs	r22, 0
     f50:	04 c0       	rjmp	.+8      	; 0xf5a <__fp_round+0x20>
     f52:	6f 5f       	subi	r22, 0xFF	; 255
     f54:	7f 4f       	sbci	r23, 0xFF	; 255
     f56:	8f 4f       	sbci	r24, 0xFF	; 255
     f58:	9f 4f       	sbci	r25, 0xFF	; 255
     f5a:	08 95       	ret

00000f5c <__fp_split3>:
     f5c:	57 fd       	sbrc	r21, 7
     f5e:	90 58       	subi	r25, 0x80	; 128
     f60:	44 0f       	add	r20, r20
     f62:	55 1f       	adc	r21, r21
     f64:	59 f0       	breq	.+22     	; 0xf7c <__fp_splitA+0x10>
     f66:	5f 3f       	cpi	r21, 0xFF	; 255
     f68:	71 f0       	breq	.+28     	; 0xf86 <__fp_splitA+0x1a>
     f6a:	47 95       	ror	r20

00000f6c <__fp_splitA>:
     f6c:	88 0f       	add	r24, r24
     f6e:	97 fb       	bst	r25, 7
     f70:	99 1f       	adc	r25, r25
     f72:	61 f0       	breq	.+24     	; 0xf8c <__fp_splitA+0x20>
     f74:	9f 3f       	cpi	r25, 0xFF	; 255
     f76:	79 f0       	breq	.+30     	; 0xf96 <__fp_splitA+0x2a>
     f78:	87 95       	ror	r24
     f7a:	08 95       	ret
     f7c:	12 16       	cp	r1, r18
     f7e:	13 06       	cpc	r1, r19
     f80:	14 06       	cpc	r1, r20
     f82:	55 1f       	adc	r21, r21
     f84:	f2 cf       	rjmp	.-28     	; 0xf6a <__fp_split3+0xe>
     f86:	46 95       	lsr	r20
     f88:	f1 df       	rcall	.-30     	; 0xf6c <__fp_splitA>
     f8a:	08 c0       	rjmp	.+16     	; 0xf9c <__fp_splitA+0x30>
     f8c:	16 16       	cp	r1, r22
     f8e:	17 06       	cpc	r1, r23
     f90:	18 06       	cpc	r1, r24
     f92:	99 1f       	adc	r25, r25
     f94:	f1 cf       	rjmp	.-30     	; 0xf78 <__fp_splitA+0xc>
     f96:	86 95       	lsr	r24
     f98:	71 05       	cpc	r23, r1
     f9a:	61 05       	cpc	r22, r1
     f9c:	08 94       	sec
     f9e:	08 95       	ret

00000fa0 <__fp_zero>:
     fa0:	e8 94       	clt

00000fa2 <__fp_szero>:
     fa2:	bb 27       	eor	r27, r27
     fa4:	66 27       	eor	r22, r22
     fa6:	77 27       	eor	r23, r23
     fa8:	cb 01       	movw	r24, r22
     faa:	97 f9       	bld	r25, 7
     fac:	08 95       	ret

00000fae <__mulsf3>:
     fae:	0b d0       	rcall	.+22     	; 0xfc6 <__mulsf3x>
     fb0:	c4 cf       	rjmp	.-120    	; 0xf3a <__fp_round>
     fb2:	b5 df       	rcall	.-150    	; 0xf1e <__fp_pscA>
     fb4:	28 f0       	brcs	.+10     	; 0xfc0 <__mulsf3+0x12>
     fb6:	ba df       	rcall	.-140    	; 0xf2c <__fp_pscB>
     fb8:	18 f0       	brcs	.+6      	; 0xfc0 <__mulsf3+0x12>
     fba:	95 23       	and	r25, r21
     fbc:	09 f0       	breq	.+2      	; 0xfc0 <__mulsf3+0x12>
     fbe:	a6 cf       	rjmp	.-180    	; 0xf0c <__fp_inf>
     fc0:	ab cf       	rjmp	.-170    	; 0xf18 <__fp_nan>
     fc2:	11 24       	eor	r1, r1
     fc4:	ee cf       	rjmp	.-36     	; 0xfa2 <__fp_szero>

00000fc6 <__mulsf3x>:
     fc6:	ca df       	rcall	.-108    	; 0xf5c <__fp_split3>
     fc8:	a0 f3       	brcs	.-24     	; 0xfb2 <__mulsf3+0x4>

00000fca <__mulsf3_pse>:
     fca:	95 9f       	mul	r25, r21
     fcc:	d1 f3       	breq	.-12     	; 0xfc2 <__mulsf3+0x14>
     fce:	95 0f       	add	r25, r21
     fd0:	50 e0       	ldi	r21, 0x00	; 0
     fd2:	55 1f       	adc	r21, r21
     fd4:	62 9f       	mul	r22, r18
     fd6:	f0 01       	movw	r30, r0
     fd8:	72 9f       	mul	r23, r18
     fda:	bb 27       	eor	r27, r27
     fdc:	f0 0d       	add	r31, r0
     fde:	b1 1d       	adc	r27, r1
     fe0:	63 9f       	mul	r22, r19
     fe2:	aa 27       	eor	r26, r26
     fe4:	f0 0d       	add	r31, r0
     fe6:	b1 1d       	adc	r27, r1
     fe8:	aa 1f       	adc	r26, r26
     fea:	64 9f       	mul	r22, r20
     fec:	66 27       	eor	r22, r22
     fee:	b0 0d       	add	r27, r0
     ff0:	a1 1d       	adc	r26, r1
     ff2:	66 1f       	adc	r22, r22
     ff4:	82 9f       	mul	r24, r18
     ff6:	22 27       	eor	r18, r18
     ff8:	b0 0d       	add	r27, r0
     ffa:	a1 1d       	adc	r26, r1
     ffc:	62 1f       	adc	r22, r18
     ffe:	73 9f       	mul	r23, r19
    1000:	b0 0d       	add	r27, r0
    1002:	a1 1d       	adc	r26, r1
    1004:	62 1f       	adc	r22, r18
    1006:	83 9f       	mul	r24, r19
    1008:	a0 0d       	add	r26, r0
    100a:	61 1d       	adc	r22, r1
    100c:	22 1f       	adc	r18, r18
    100e:	74 9f       	mul	r23, r20
    1010:	33 27       	eor	r19, r19
    1012:	a0 0d       	add	r26, r0
    1014:	61 1d       	adc	r22, r1
    1016:	23 1f       	adc	r18, r19
    1018:	84 9f       	mul	r24, r20
    101a:	60 0d       	add	r22, r0
    101c:	21 1d       	adc	r18, r1
    101e:	82 2f       	mov	r24, r18
    1020:	76 2f       	mov	r23, r22
    1022:	6a 2f       	mov	r22, r26
    1024:	11 24       	eor	r1, r1
    1026:	9f 57       	subi	r25, 0x7F	; 127
    1028:	50 40       	sbci	r21, 0x00	; 0
    102a:	8a f0       	brmi	.+34     	; 0x104e <__mulsf3_pse+0x84>
    102c:	e1 f0       	breq	.+56     	; 0x1066 <__mulsf3_pse+0x9c>
    102e:	88 23       	and	r24, r24
    1030:	4a f0       	brmi	.+18     	; 0x1044 <__mulsf3_pse+0x7a>
    1032:	ee 0f       	add	r30, r30
    1034:	ff 1f       	adc	r31, r31
    1036:	bb 1f       	adc	r27, r27
    1038:	66 1f       	adc	r22, r22
    103a:	77 1f       	adc	r23, r23
    103c:	88 1f       	adc	r24, r24
    103e:	91 50       	subi	r25, 0x01	; 1
    1040:	50 40       	sbci	r21, 0x00	; 0
    1042:	a9 f7       	brne	.-22     	; 0x102e <__mulsf3_pse+0x64>
    1044:	9e 3f       	cpi	r25, 0xFE	; 254
    1046:	51 05       	cpc	r21, r1
    1048:	70 f0       	brcs	.+28     	; 0x1066 <__mulsf3_pse+0x9c>
    104a:	60 cf       	rjmp	.-320    	; 0xf0c <__fp_inf>
    104c:	aa cf       	rjmp	.-172    	; 0xfa2 <__fp_szero>
    104e:	5f 3f       	cpi	r21, 0xFF	; 255
    1050:	ec f3       	brlt	.-6      	; 0x104c <__mulsf3_pse+0x82>
    1052:	98 3e       	cpi	r25, 0xE8	; 232
    1054:	dc f3       	brlt	.-10     	; 0x104c <__mulsf3_pse+0x82>
    1056:	86 95       	lsr	r24
    1058:	77 95       	ror	r23
    105a:	67 95       	ror	r22
    105c:	b7 95       	ror	r27
    105e:	f7 95       	ror	r31
    1060:	e7 95       	ror	r30
    1062:	9f 5f       	subi	r25, 0xFF	; 255
    1064:	c1 f7       	brne	.-16     	; 0x1056 <__mulsf3_pse+0x8c>
    1066:	fe 2b       	or	r31, r30
    1068:	88 0f       	add	r24, r24
    106a:	91 1d       	adc	r25, r1
    106c:	96 95       	lsr	r25
    106e:	87 95       	ror	r24
    1070:	97 f9       	bld	r25, 7
    1072:	08 95       	ret

00001074 <vfprintf>:
    1074:	2f 92       	push	r2
    1076:	3f 92       	push	r3
    1078:	4f 92       	push	r4
    107a:	5f 92       	push	r5
    107c:	6f 92       	push	r6
    107e:	7f 92       	push	r7
    1080:	8f 92       	push	r8
    1082:	9f 92       	push	r9
    1084:	af 92       	push	r10
    1086:	bf 92       	push	r11
    1088:	cf 92       	push	r12
    108a:	df 92       	push	r13
    108c:	ef 92       	push	r14
    108e:	ff 92       	push	r15
    1090:	0f 93       	push	r16
    1092:	1f 93       	push	r17
    1094:	cf 93       	push	r28
    1096:	df 93       	push	r29
    1098:	cd b7       	in	r28, 0x3d	; 61
    109a:	de b7       	in	r29, 0x3e	; 62
    109c:	63 97       	sbiw	r28, 0x13	; 19
    109e:	0f b6       	in	r0, 0x3f	; 63
    10a0:	f8 94       	cli
    10a2:	de bf       	out	0x3e, r29	; 62
    10a4:	0f be       	out	0x3f, r0	; 63
    10a6:	cd bf       	out	0x3d, r28	; 61
    10a8:	7c 01       	movw	r14, r24
    10aa:	1b 01       	movw	r2, r22
    10ac:	6a 01       	movw	r12, r20
    10ae:	fc 01       	movw	r30, r24
    10b0:	17 82       	std	Z+7, r1	; 0x07
    10b2:	16 82       	std	Z+6, r1	; 0x06
    10b4:	83 81       	ldd	r24, Z+3	; 0x03
    10b6:	81 ff       	sbrs	r24, 1
    10b8:	49 c3       	rjmp	.+1682   	; 0x174c <vfprintf+0x6d8>
    10ba:	be 01       	movw	r22, r28
    10bc:	6f 5f       	subi	r22, 0xFF	; 255
    10be:	7f 4f       	sbci	r23, 0xFF	; 255
    10c0:	4b 01       	movw	r8, r22
    10c2:	f7 01       	movw	r30, r14
    10c4:	93 81       	ldd	r25, Z+3	; 0x03
    10c6:	f1 01       	movw	r30, r2
    10c8:	93 fd       	sbrc	r25, 3
    10ca:	85 91       	lpm	r24, Z+
    10cc:	93 ff       	sbrs	r25, 3
    10ce:	81 91       	ld	r24, Z+
    10d0:	1f 01       	movw	r2, r30
    10d2:	88 23       	and	r24, r24
    10d4:	09 f4       	brne	.+2      	; 0x10d8 <vfprintf+0x64>
    10d6:	36 c3       	rjmp	.+1644   	; 0x1744 <vfprintf+0x6d0>
    10d8:	85 32       	cpi	r24, 0x25	; 37
    10da:	39 f4       	brne	.+14     	; 0x10ea <vfprintf+0x76>
    10dc:	93 fd       	sbrc	r25, 3
    10de:	85 91       	lpm	r24, Z+
    10e0:	93 ff       	sbrs	r25, 3
    10e2:	81 91       	ld	r24, Z+
    10e4:	1f 01       	movw	r2, r30
    10e6:	85 32       	cpi	r24, 0x25	; 37
    10e8:	31 f4       	brne	.+12     	; 0x10f6 <vfprintf+0x82>
    10ea:	b7 01       	movw	r22, r14
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	96 d4       	rcall	.+2348   	; 0x1a1c <fputc>
    10f0:	56 01       	movw	r10, r12
    10f2:	65 01       	movw	r12, r10
    10f4:	e6 cf       	rjmp	.-52     	; 0x10c2 <vfprintf+0x4e>
    10f6:	10 e0       	ldi	r17, 0x00	; 0
    10f8:	51 2c       	mov	r5, r1
    10fa:	20 e0       	ldi	r18, 0x00	; 0
    10fc:	20 32       	cpi	r18, 0x20	; 32
    10fe:	a0 f4       	brcc	.+40     	; 0x1128 <vfprintf+0xb4>
    1100:	8b 32       	cpi	r24, 0x2B	; 43
    1102:	69 f0       	breq	.+26     	; 0x111e <vfprintf+0xaa>
    1104:	30 f4       	brcc	.+12     	; 0x1112 <vfprintf+0x9e>
    1106:	80 32       	cpi	r24, 0x20	; 32
    1108:	59 f0       	breq	.+22     	; 0x1120 <vfprintf+0xac>
    110a:	83 32       	cpi	r24, 0x23	; 35
    110c:	69 f4       	brne	.+26     	; 0x1128 <vfprintf+0xb4>
    110e:	20 61       	ori	r18, 0x10	; 16
    1110:	2c c0       	rjmp	.+88     	; 0x116a <vfprintf+0xf6>
    1112:	8d 32       	cpi	r24, 0x2D	; 45
    1114:	39 f0       	breq	.+14     	; 0x1124 <vfprintf+0xb0>
    1116:	80 33       	cpi	r24, 0x30	; 48
    1118:	39 f4       	brne	.+14     	; 0x1128 <vfprintf+0xb4>
    111a:	21 60       	ori	r18, 0x01	; 1
    111c:	26 c0       	rjmp	.+76     	; 0x116a <vfprintf+0xf6>
    111e:	22 60       	ori	r18, 0x02	; 2
    1120:	24 60       	ori	r18, 0x04	; 4
    1122:	23 c0       	rjmp	.+70     	; 0x116a <vfprintf+0xf6>
    1124:	28 60       	ori	r18, 0x08	; 8
    1126:	21 c0       	rjmp	.+66     	; 0x116a <vfprintf+0xf6>
    1128:	27 fd       	sbrc	r18, 7
    112a:	27 c0       	rjmp	.+78     	; 0x117a <vfprintf+0x106>
    112c:	30 ed       	ldi	r19, 0xD0	; 208
    112e:	38 0f       	add	r19, r24
    1130:	3a 30       	cpi	r19, 0x0A	; 10
    1132:	78 f4       	brcc	.+30     	; 0x1152 <vfprintf+0xde>
    1134:	26 ff       	sbrs	r18, 6
    1136:	06 c0       	rjmp	.+12     	; 0x1144 <vfprintf+0xd0>
    1138:	fa e0       	ldi	r31, 0x0A	; 10
    113a:	1f 9f       	mul	r17, r31
    113c:	30 0d       	add	r19, r0
    113e:	11 24       	eor	r1, r1
    1140:	13 2f       	mov	r17, r19
    1142:	13 c0       	rjmp	.+38     	; 0x116a <vfprintf+0xf6>
    1144:	6a e0       	ldi	r22, 0x0A	; 10
    1146:	56 9e       	mul	r5, r22
    1148:	30 0d       	add	r19, r0
    114a:	11 24       	eor	r1, r1
    114c:	53 2e       	mov	r5, r19
    114e:	20 62       	ori	r18, 0x20	; 32
    1150:	0c c0       	rjmp	.+24     	; 0x116a <vfprintf+0xf6>
    1152:	8e 32       	cpi	r24, 0x2E	; 46
    1154:	21 f4       	brne	.+8      	; 0x115e <vfprintf+0xea>
    1156:	26 fd       	sbrc	r18, 6
    1158:	f5 c2       	rjmp	.+1514   	; 0x1744 <vfprintf+0x6d0>
    115a:	20 64       	ori	r18, 0x40	; 64
    115c:	06 c0       	rjmp	.+12     	; 0x116a <vfprintf+0xf6>
    115e:	8c 36       	cpi	r24, 0x6C	; 108
    1160:	11 f4       	brne	.+4      	; 0x1166 <vfprintf+0xf2>
    1162:	20 68       	ori	r18, 0x80	; 128
    1164:	02 c0       	rjmp	.+4      	; 0x116a <vfprintf+0xf6>
    1166:	88 36       	cpi	r24, 0x68	; 104
    1168:	41 f4       	brne	.+16     	; 0x117a <vfprintf+0x106>
    116a:	f1 01       	movw	r30, r2
    116c:	93 fd       	sbrc	r25, 3
    116e:	85 91       	lpm	r24, Z+
    1170:	93 ff       	sbrs	r25, 3
    1172:	81 91       	ld	r24, Z+
    1174:	1f 01       	movw	r2, r30
    1176:	81 11       	cpse	r24, r1
    1178:	c1 cf       	rjmp	.-126    	; 0x10fc <vfprintf+0x88>
    117a:	9b eb       	ldi	r25, 0xBB	; 187
    117c:	98 0f       	add	r25, r24
    117e:	93 30       	cpi	r25, 0x03	; 3
    1180:	18 f4       	brcc	.+6      	; 0x1188 <vfprintf+0x114>
    1182:	20 61       	ori	r18, 0x10	; 16
    1184:	80 5e       	subi	r24, 0xE0	; 224
    1186:	06 c0       	rjmp	.+12     	; 0x1194 <vfprintf+0x120>
    1188:	9b e9       	ldi	r25, 0x9B	; 155
    118a:	98 0f       	add	r25, r24
    118c:	93 30       	cpi	r25, 0x03	; 3
    118e:	08 f0       	brcs	.+2      	; 0x1192 <vfprintf+0x11e>
    1190:	9a c1       	rjmp	.+820    	; 0x14c6 <vfprintf+0x452>
    1192:	2f 7e       	andi	r18, 0xEF	; 239
    1194:	26 ff       	sbrs	r18, 6
    1196:	16 e0       	ldi	r17, 0x06	; 6
    1198:	2f 73       	andi	r18, 0x3F	; 63
    119a:	72 2e       	mov	r7, r18
    119c:	85 36       	cpi	r24, 0x65	; 101
    119e:	21 f4       	brne	.+8      	; 0x11a8 <vfprintf+0x134>
    11a0:	f2 2f       	mov	r31, r18
    11a2:	f0 64       	ori	r31, 0x40	; 64
    11a4:	7f 2e       	mov	r7, r31
    11a6:	08 c0       	rjmp	.+16     	; 0x11b8 <vfprintf+0x144>
    11a8:	86 36       	cpi	r24, 0x66	; 102
    11aa:	21 f4       	brne	.+8      	; 0x11b4 <vfprintf+0x140>
    11ac:	62 2f       	mov	r22, r18
    11ae:	60 68       	ori	r22, 0x80	; 128
    11b0:	76 2e       	mov	r7, r22
    11b2:	02 c0       	rjmp	.+4      	; 0x11b8 <vfprintf+0x144>
    11b4:	11 11       	cpse	r17, r1
    11b6:	11 50       	subi	r17, 0x01	; 1
    11b8:	77 fe       	sbrs	r7, 7
    11ba:	07 c0       	rjmp	.+14     	; 0x11ca <vfprintf+0x156>
    11bc:	1c 33       	cpi	r17, 0x3C	; 60
    11be:	48 f4       	brcc	.+18     	; 0x11d2 <vfprintf+0x15e>
    11c0:	44 24       	eor	r4, r4
    11c2:	43 94       	inc	r4
    11c4:	41 0e       	add	r4, r17
    11c6:	27 e0       	ldi	r18, 0x07	; 7
    11c8:	0b c0       	rjmp	.+22     	; 0x11e0 <vfprintf+0x16c>
    11ca:	18 30       	cpi	r17, 0x08	; 8
    11cc:	30 f4       	brcc	.+12     	; 0x11da <vfprintf+0x166>
    11ce:	21 2f       	mov	r18, r17
    11d0:	06 c0       	rjmp	.+12     	; 0x11de <vfprintf+0x16a>
    11d2:	27 e0       	ldi	r18, 0x07	; 7
    11d4:	4c e3       	ldi	r20, 0x3C	; 60
    11d6:	44 2e       	mov	r4, r20
    11d8:	03 c0       	rjmp	.+6      	; 0x11e0 <vfprintf+0x16c>
    11da:	27 e0       	ldi	r18, 0x07	; 7
    11dc:	17 e0       	ldi	r17, 0x07	; 7
    11de:	41 2c       	mov	r4, r1
    11e0:	56 01       	movw	r10, r12
    11e2:	74 e0       	ldi	r23, 0x04	; 4
    11e4:	a7 0e       	add	r10, r23
    11e6:	b1 1c       	adc	r11, r1
    11e8:	f6 01       	movw	r30, r12
    11ea:	60 81       	ld	r22, Z
    11ec:	71 81       	ldd	r23, Z+1	; 0x01
    11ee:	82 81       	ldd	r24, Z+2	; 0x02
    11f0:	93 81       	ldd	r25, Z+3	; 0x03
    11f2:	04 2d       	mov	r16, r4
    11f4:	a4 01       	movw	r20, r8
    11f6:	da d2       	rcall	.+1460   	; 0x17ac <__ftoa_engine>
    11f8:	6c 01       	movw	r12, r24
    11fa:	09 81       	ldd	r16, Y+1	; 0x01
    11fc:	00 ff       	sbrs	r16, 0
    11fe:	02 c0       	rjmp	.+4      	; 0x1204 <vfprintf+0x190>
    1200:	03 ff       	sbrs	r16, 3
    1202:	06 c0       	rjmp	.+12     	; 0x1210 <vfprintf+0x19c>
    1204:	71 fc       	sbrc	r7, 1
    1206:	07 c0       	rjmp	.+14     	; 0x1216 <vfprintf+0x1a2>
    1208:	72 fc       	sbrc	r7, 2
    120a:	08 c0       	rjmp	.+16     	; 0x121c <vfprintf+0x1a8>
    120c:	61 2c       	mov	r6, r1
    120e:	08 c0       	rjmp	.+16     	; 0x1220 <vfprintf+0x1ac>
    1210:	3d e2       	ldi	r19, 0x2D	; 45
    1212:	63 2e       	mov	r6, r19
    1214:	05 c0       	rjmp	.+10     	; 0x1220 <vfprintf+0x1ac>
    1216:	2b e2       	ldi	r18, 0x2B	; 43
    1218:	62 2e       	mov	r6, r18
    121a:	02 c0       	rjmp	.+4      	; 0x1220 <vfprintf+0x1ac>
    121c:	90 e2       	ldi	r25, 0x20	; 32
    121e:	69 2e       	mov	r6, r25
    1220:	80 2f       	mov	r24, r16
    1222:	8c 70       	andi	r24, 0x0C	; 12
    1224:	81 f1       	breq	.+96     	; 0x1286 <vfprintf+0x212>
    1226:	66 20       	and	r6, r6
    1228:	11 f0       	breq	.+4      	; 0x122e <vfprintf+0x1ba>
    122a:	84 e0       	ldi	r24, 0x04	; 4
    122c:	01 c0       	rjmp	.+2      	; 0x1230 <vfprintf+0x1bc>
    122e:	83 e0       	ldi	r24, 0x03	; 3
    1230:	85 15       	cp	r24, r5
    1232:	10 f0       	brcs	.+4      	; 0x1238 <vfprintf+0x1c4>
    1234:	51 2c       	mov	r5, r1
    1236:	0a c0       	rjmp	.+20     	; 0x124c <vfprintf+0x1d8>
    1238:	58 1a       	sub	r5, r24
    123a:	73 fc       	sbrc	r7, 3
    123c:	07 c0       	rjmp	.+14     	; 0x124c <vfprintf+0x1d8>
    123e:	b7 01       	movw	r22, r14
    1240:	80 e2       	ldi	r24, 0x20	; 32
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	eb d3       	rcall	.+2006   	; 0x1a1c <fputc>
    1246:	5a 94       	dec	r5
    1248:	d1 f7       	brne	.-12     	; 0x123e <vfprintf+0x1ca>
    124a:	f4 cf       	rjmp	.-24     	; 0x1234 <vfprintf+0x1c0>
    124c:	66 20       	and	r6, r6
    124e:	21 f0       	breq	.+8      	; 0x1258 <vfprintf+0x1e4>
    1250:	b7 01       	movw	r22, r14
    1252:	86 2d       	mov	r24, r6
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	e2 d3       	rcall	.+1988   	; 0x1a1c <fputc>
    1258:	03 fd       	sbrc	r16, 3
    125a:	03 c0       	rjmp	.+6      	; 0x1262 <vfprintf+0x1ee>
    125c:	0a e8       	ldi	r16, 0x8A	; 138
    125e:	11 e0       	ldi	r17, 0x01	; 1
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <vfprintf+0x1f2>
    1262:	06 e8       	ldi	r16, 0x86	; 134
    1264:	11 e0       	ldi	r17, 0x01	; 1
    1266:	f7 2d       	mov	r31, r7
    1268:	f0 71       	andi	r31, 0x10	; 16
    126a:	7f 2e       	mov	r7, r31
    126c:	f8 01       	movw	r30, r16
    126e:	84 91       	lpm	r24, Z
    1270:	88 23       	and	r24, r24
    1272:	09 f4       	brne	.+2      	; 0x1276 <vfprintf+0x202>
    1274:	5e c2       	rjmp	.+1212   	; 0x1732 <vfprintf+0x6be>
    1276:	71 10       	cpse	r7, r1
    1278:	80 52       	subi	r24, 0x20	; 32
    127a:	b7 01       	movw	r22, r14
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	ce d3       	rcall	.+1948   	; 0x1a1c <fputc>
    1280:	0f 5f       	subi	r16, 0xFF	; 255
    1282:	1f 4f       	sbci	r17, 0xFF	; 255
    1284:	f3 cf       	rjmp	.-26     	; 0x126c <vfprintf+0x1f8>
    1286:	77 fe       	sbrs	r7, 7
    1288:	0f c0       	rjmp	.+30     	; 0x12a8 <vfprintf+0x234>
    128a:	4c 0c       	add	r4, r12
    128c:	04 ff       	sbrs	r16, 4
    128e:	04 c0       	rjmp	.+8      	; 0x1298 <vfprintf+0x224>
    1290:	8a 81       	ldd	r24, Y+2	; 0x02
    1292:	81 33       	cpi	r24, 0x31	; 49
    1294:	09 f4       	brne	.+2      	; 0x1298 <vfprintf+0x224>
    1296:	4a 94       	dec	r4
    1298:	14 14       	cp	r1, r4
    129a:	74 f5       	brge	.+92     	; 0x12f8 <vfprintf+0x284>
    129c:	f8 e0       	ldi	r31, 0x08	; 8
    129e:	f4 15       	cp	r31, r4
    12a0:	78 f5       	brcc	.+94     	; 0x1300 <vfprintf+0x28c>
    12a2:	88 e0       	ldi	r24, 0x08	; 8
    12a4:	48 2e       	mov	r4, r24
    12a6:	2c c0       	rjmp	.+88     	; 0x1300 <vfprintf+0x28c>
    12a8:	76 fc       	sbrc	r7, 6
    12aa:	2a c0       	rjmp	.+84     	; 0x1300 <vfprintf+0x28c>
    12ac:	81 2f       	mov	r24, r17
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	8c 15       	cp	r24, r12
    12b2:	9d 05       	cpc	r25, r13
    12b4:	9c f0       	brlt	.+38     	; 0x12dc <vfprintf+0x268>
    12b6:	6c ef       	ldi	r22, 0xFC	; 252
    12b8:	c6 16       	cp	r12, r22
    12ba:	6f ef       	ldi	r22, 0xFF	; 255
    12bc:	d6 06       	cpc	r13, r22
    12be:	74 f0       	brlt	.+28     	; 0x12dc <vfprintf+0x268>
    12c0:	77 2d       	mov	r23, r7
    12c2:	70 68       	ori	r23, 0x80	; 128
    12c4:	77 2e       	mov	r7, r23
    12c6:	0a c0       	rjmp	.+20     	; 0x12dc <vfprintf+0x268>
    12c8:	e2 e0       	ldi	r30, 0x02	; 2
    12ca:	f0 e0       	ldi	r31, 0x00	; 0
    12cc:	ec 0f       	add	r30, r28
    12ce:	fd 1f       	adc	r31, r29
    12d0:	e1 0f       	add	r30, r17
    12d2:	f1 1d       	adc	r31, r1
    12d4:	80 81       	ld	r24, Z
    12d6:	80 33       	cpi	r24, 0x30	; 48
    12d8:	19 f4       	brne	.+6      	; 0x12e0 <vfprintf+0x26c>
    12da:	11 50       	subi	r17, 0x01	; 1
    12dc:	11 11       	cpse	r17, r1
    12de:	f4 cf       	rjmp	.-24     	; 0x12c8 <vfprintf+0x254>
    12e0:	77 fe       	sbrs	r7, 7
    12e2:	0e c0       	rjmp	.+28     	; 0x1300 <vfprintf+0x28c>
    12e4:	44 24       	eor	r4, r4
    12e6:	43 94       	inc	r4
    12e8:	41 0e       	add	r4, r17
    12ea:	81 2f       	mov	r24, r17
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	c8 16       	cp	r12, r24
    12f0:	d9 06       	cpc	r13, r25
    12f2:	2c f4       	brge	.+10     	; 0x12fe <vfprintf+0x28a>
    12f4:	1c 19       	sub	r17, r12
    12f6:	04 c0       	rjmp	.+8      	; 0x1300 <vfprintf+0x28c>
    12f8:	44 24       	eor	r4, r4
    12fa:	43 94       	inc	r4
    12fc:	01 c0       	rjmp	.+2      	; 0x1300 <vfprintf+0x28c>
    12fe:	10 e0       	ldi	r17, 0x00	; 0
    1300:	77 fe       	sbrs	r7, 7
    1302:	07 c0       	rjmp	.+14     	; 0x1312 <vfprintf+0x29e>
    1304:	1c 14       	cp	r1, r12
    1306:	1d 04       	cpc	r1, r13
    1308:	3c f4       	brge	.+14     	; 0x1318 <vfprintf+0x2a4>
    130a:	96 01       	movw	r18, r12
    130c:	2f 5f       	subi	r18, 0xFF	; 255
    130e:	3f 4f       	sbci	r19, 0xFF	; 255
    1310:	05 c0       	rjmp	.+10     	; 0x131c <vfprintf+0x2a8>
    1312:	25 e0       	ldi	r18, 0x05	; 5
    1314:	30 e0       	ldi	r19, 0x00	; 0
    1316:	02 c0       	rjmp	.+4      	; 0x131c <vfprintf+0x2a8>
    1318:	21 e0       	ldi	r18, 0x01	; 1
    131a:	30 e0       	ldi	r19, 0x00	; 0
    131c:	66 20       	and	r6, r6
    131e:	11 f0       	breq	.+4      	; 0x1324 <vfprintf+0x2b0>
    1320:	2f 5f       	subi	r18, 0xFF	; 255
    1322:	3f 4f       	sbci	r19, 0xFF	; 255
    1324:	11 23       	and	r17, r17
    1326:	31 f0       	breq	.+12     	; 0x1334 <vfprintf+0x2c0>
    1328:	41 2f       	mov	r20, r17
    132a:	50 e0       	ldi	r21, 0x00	; 0
    132c:	4f 5f       	subi	r20, 0xFF	; 255
    132e:	5f 4f       	sbci	r21, 0xFF	; 255
    1330:	24 0f       	add	r18, r20
    1332:	35 1f       	adc	r19, r21
    1334:	45 2d       	mov	r20, r5
    1336:	50 e0       	ldi	r21, 0x00	; 0
    1338:	24 17       	cp	r18, r20
    133a:	35 07       	cpc	r19, r21
    133c:	14 f4       	brge	.+4      	; 0x1342 <vfprintf+0x2ce>
    133e:	52 1a       	sub	r5, r18
    1340:	01 c0       	rjmp	.+2      	; 0x1344 <vfprintf+0x2d0>
    1342:	51 2c       	mov	r5, r1
    1344:	87 2d       	mov	r24, r7
    1346:	89 70       	andi	r24, 0x09	; 9
    1348:	41 f4       	brne	.+16     	; 0x135a <vfprintf+0x2e6>
    134a:	55 20       	and	r5, r5
    134c:	31 f0       	breq	.+12     	; 0x135a <vfprintf+0x2e6>
    134e:	b7 01       	movw	r22, r14
    1350:	80 e2       	ldi	r24, 0x20	; 32
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	63 d3       	rcall	.+1734   	; 0x1a1c <fputc>
    1356:	5a 94       	dec	r5
    1358:	f8 cf       	rjmp	.-16     	; 0x134a <vfprintf+0x2d6>
    135a:	66 20       	and	r6, r6
    135c:	21 f0       	breq	.+8      	; 0x1366 <vfprintf+0x2f2>
    135e:	b7 01       	movw	r22, r14
    1360:	86 2d       	mov	r24, r6
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	5b d3       	rcall	.+1718   	; 0x1a1c <fputc>
    1366:	73 fc       	sbrc	r7, 3
    1368:	08 c0       	rjmp	.+16     	; 0x137a <vfprintf+0x306>
    136a:	55 20       	and	r5, r5
    136c:	31 f0       	breq	.+12     	; 0x137a <vfprintf+0x306>
    136e:	b7 01       	movw	r22, r14
    1370:	80 e3       	ldi	r24, 0x30	; 48
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	53 d3       	rcall	.+1702   	; 0x1a1c <fputc>
    1376:	5a 94       	dec	r5
    1378:	f8 cf       	rjmp	.-16     	; 0x136a <vfprintf+0x2f6>
    137a:	77 fe       	sbrs	r7, 7
    137c:	5d c0       	rjmp	.+186    	; 0x1438 <vfprintf+0x3c4>
    137e:	9c 2d       	mov	r25, r12
    1380:	8d 2d       	mov	r24, r13
    1382:	d7 fe       	sbrs	r13, 7
    1384:	02 c0       	rjmp	.+4      	; 0x138a <vfprintf+0x316>
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	80 e0       	ldi	r24, 0x00	; 0
    138a:	69 2e       	mov	r6, r25
    138c:	78 2e       	mov	r7, r24
    138e:	40 e0       	ldi	r20, 0x00	; 0
    1390:	50 e0       	ldi	r21, 0x00	; 0
    1392:	c6 01       	movw	r24, r12
    1394:	84 19       	sub	r24, r4
    1396:	91 09       	sbc	r25, r1
    1398:	9d 87       	std	Y+13, r25	; 0x0d
    139a:	8c 87       	std	Y+12, r24	; 0x0c
    139c:	96 01       	movw	r18, r12
    139e:	26 19       	sub	r18, r6
    13a0:	37 09       	sbc	r19, r7
    13a2:	28 0d       	add	r18, r8
    13a4:	39 1d       	adc	r19, r9
    13a6:	81 2f       	mov	r24, r17
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	ee 27       	eor	r30, r30
    13ac:	ff 27       	eor	r31, r31
    13ae:	e8 1b       	sub	r30, r24
    13b0:	f9 0b       	sbc	r31, r25
    13b2:	ff 87       	std	Y+15, r31	; 0x0f
    13b4:	ee 87       	std	Y+14, r30	; 0x0e
    13b6:	ff ef       	ldi	r31, 0xFF	; 255
    13b8:	6f 16       	cp	r6, r31
    13ba:	7f 06       	cpc	r7, r31
    13bc:	61 f4       	brne	.+24     	; 0x13d6 <vfprintf+0x362>
    13be:	b7 01       	movw	r22, r14
    13c0:	8e e2       	ldi	r24, 0x2E	; 46
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	2b 8b       	std	Y+19, r18	; 0x13
    13c6:	3a 8b       	std	Y+18, r19	; 0x12
    13c8:	48 8b       	std	Y+16, r20	; 0x10
    13ca:	59 8b       	std	Y+17, r21	; 0x11
    13cc:	27 d3       	rcall	.+1614   	; 0x1a1c <fputc>
    13ce:	59 89       	ldd	r21, Y+17	; 0x11
    13d0:	48 89       	ldd	r20, Y+16	; 0x10
    13d2:	3a 89       	ldd	r19, Y+18	; 0x12
    13d4:	2b 89       	ldd	r18, Y+19	; 0x13
    13d6:	c6 14       	cp	r12, r6
    13d8:	d7 04       	cpc	r13, r7
    13da:	54 f0       	brlt	.+20     	; 0x13f0 <vfprintf+0x37c>
    13dc:	6c 85       	ldd	r22, Y+12	; 0x0c
    13de:	7d 85       	ldd	r23, Y+13	; 0x0d
    13e0:	66 15       	cp	r22, r6
    13e2:	77 05       	cpc	r23, r7
    13e4:	2c f4       	brge	.+10     	; 0x13f0 <vfprintf+0x37c>
    13e6:	f9 01       	movw	r30, r18
    13e8:	e4 0f       	add	r30, r20
    13ea:	f5 1f       	adc	r31, r21
    13ec:	81 81       	ldd	r24, Z+1	; 0x01
    13ee:	01 c0       	rjmp	.+2      	; 0x13f2 <vfprintf+0x37e>
    13f0:	80 e3       	ldi	r24, 0x30	; 48
    13f2:	71 e0       	ldi	r23, 0x01	; 1
    13f4:	67 1a       	sub	r6, r23
    13f6:	71 08       	sbc	r7, r1
    13f8:	4f 5f       	subi	r20, 0xFF	; 255
    13fa:	5f 4f       	sbci	r21, 0xFF	; 255
    13fc:	ee 85       	ldd	r30, Y+14	; 0x0e
    13fe:	ff 85       	ldd	r31, Y+15	; 0x0f
    1400:	6e 16       	cp	r6, r30
    1402:	7f 06       	cpc	r7, r31
    1404:	64 f0       	brlt	.+24     	; 0x141e <vfprintf+0x3aa>
    1406:	b7 01       	movw	r22, r14
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	2b 8b       	std	Y+19, r18	; 0x13
    140c:	3a 8b       	std	Y+18, r19	; 0x12
    140e:	48 8b       	std	Y+16, r20	; 0x10
    1410:	59 8b       	std	Y+17, r21	; 0x11
    1412:	04 d3       	rcall	.+1544   	; 0x1a1c <fputc>
    1414:	2b 89       	ldd	r18, Y+19	; 0x13
    1416:	3a 89       	ldd	r19, Y+18	; 0x12
    1418:	48 89       	ldd	r20, Y+16	; 0x10
    141a:	59 89       	ldd	r21, Y+17	; 0x11
    141c:	cc cf       	rjmp	.-104    	; 0x13b6 <vfprintf+0x342>
    141e:	6c 14       	cp	r6, r12
    1420:	7d 04       	cpc	r7, r13
    1422:	39 f4       	brne	.+14     	; 0x1432 <vfprintf+0x3be>
    1424:	9a 81       	ldd	r25, Y+2	; 0x02
    1426:	96 33       	cpi	r25, 0x36	; 54
    1428:	18 f4       	brcc	.+6      	; 0x1430 <vfprintf+0x3bc>
    142a:	95 33       	cpi	r25, 0x35	; 53
    142c:	11 f4       	brne	.+4      	; 0x1432 <vfprintf+0x3be>
    142e:	04 ff       	sbrs	r16, 4
    1430:	81 e3       	ldi	r24, 0x31	; 49
    1432:	b7 01       	movw	r22, r14
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	45 c0       	rjmp	.+138    	; 0x14c2 <vfprintf+0x44e>
    1438:	8a 81       	ldd	r24, Y+2	; 0x02
    143a:	81 33       	cpi	r24, 0x31	; 49
    143c:	09 f0       	breq	.+2      	; 0x1440 <vfprintf+0x3cc>
    143e:	0f 7e       	andi	r16, 0xEF	; 239
    1440:	b7 01       	movw	r22, r14
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	eb d2       	rcall	.+1494   	; 0x1a1c <fputc>
    1446:	11 11       	cpse	r17, r1
    1448:	05 c0       	rjmp	.+10     	; 0x1454 <vfprintf+0x3e0>
    144a:	74 fe       	sbrs	r7, 4
    144c:	16 c0       	rjmp	.+44     	; 0x147a <vfprintf+0x406>
    144e:	85 e4       	ldi	r24, 0x45	; 69
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	15 c0       	rjmp	.+42     	; 0x147e <vfprintf+0x40a>
    1454:	b7 01       	movw	r22, r14
    1456:	8e e2       	ldi	r24, 0x2E	; 46
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	e0 d2       	rcall	.+1472   	; 0x1a1c <fputc>
    145c:	82 e0       	ldi	r24, 0x02	; 2
    145e:	66 24       	eor	r6, r6
    1460:	63 94       	inc	r6
    1462:	68 0e       	add	r6, r24
    1464:	f4 01       	movw	r30, r8
    1466:	e8 0f       	add	r30, r24
    1468:	f1 1d       	adc	r31, r1
    146a:	80 81       	ld	r24, Z
    146c:	b7 01       	movw	r22, r14
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	d5 d2       	rcall	.+1450   	; 0x1a1c <fputc>
    1472:	11 50       	subi	r17, 0x01	; 1
    1474:	51 f3       	breq	.-44     	; 0x144a <vfprintf+0x3d6>
    1476:	86 2d       	mov	r24, r6
    1478:	f2 cf       	rjmp	.-28     	; 0x145e <vfprintf+0x3ea>
    147a:	85 e6       	ldi	r24, 0x65	; 101
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	b7 01       	movw	r22, r14
    1480:	cd d2       	rcall	.+1434   	; 0x1a1c <fputc>
    1482:	d7 fc       	sbrc	r13, 7
    1484:	05 c0       	rjmp	.+10     	; 0x1490 <vfprintf+0x41c>
    1486:	c1 14       	cp	r12, r1
    1488:	d1 04       	cpc	r13, r1
    148a:	39 f4       	brne	.+14     	; 0x149a <vfprintf+0x426>
    148c:	04 ff       	sbrs	r16, 4
    148e:	05 c0       	rjmp	.+10     	; 0x149a <vfprintf+0x426>
    1490:	d1 94       	neg	r13
    1492:	c1 94       	neg	r12
    1494:	d1 08       	sbc	r13, r1
    1496:	8d e2       	ldi	r24, 0x2D	; 45
    1498:	01 c0       	rjmp	.+2      	; 0x149c <vfprintf+0x428>
    149a:	8b e2       	ldi	r24, 0x2B	; 43
    149c:	b7 01       	movw	r22, r14
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	bd d2       	rcall	.+1402   	; 0x1a1c <fputc>
    14a2:	80 e3       	ldi	r24, 0x30	; 48
    14a4:	6a e0       	ldi	r22, 0x0A	; 10
    14a6:	c6 16       	cp	r12, r22
    14a8:	d1 04       	cpc	r13, r1
    14aa:	2c f0       	brlt	.+10     	; 0x14b6 <vfprintf+0x442>
    14ac:	8f 5f       	subi	r24, 0xFF	; 255
    14ae:	fa e0       	ldi	r31, 0x0A	; 10
    14b0:	cf 1a       	sub	r12, r31
    14b2:	d1 08       	sbc	r13, r1
    14b4:	f7 cf       	rjmp	.-18     	; 0x14a4 <vfprintf+0x430>
    14b6:	b7 01       	movw	r22, r14
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	b0 d2       	rcall	.+1376   	; 0x1a1c <fputc>
    14bc:	b7 01       	movw	r22, r14
    14be:	c6 01       	movw	r24, r12
    14c0:	c0 96       	adiw	r24, 0x30	; 48
    14c2:	ac d2       	rcall	.+1368   	; 0x1a1c <fputc>
    14c4:	36 c1       	rjmp	.+620    	; 0x1732 <vfprintf+0x6be>
    14c6:	83 36       	cpi	r24, 0x63	; 99
    14c8:	31 f0       	breq	.+12     	; 0x14d6 <vfprintf+0x462>
    14ca:	83 37       	cpi	r24, 0x73	; 115
    14cc:	79 f0       	breq	.+30     	; 0x14ec <vfprintf+0x478>
    14ce:	83 35       	cpi	r24, 0x53	; 83
    14d0:	09 f0       	breq	.+2      	; 0x14d4 <vfprintf+0x460>
    14d2:	54 c0       	rjmp	.+168    	; 0x157c <vfprintf+0x508>
    14d4:	20 c0       	rjmp	.+64     	; 0x1516 <vfprintf+0x4a2>
    14d6:	56 01       	movw	r10, r12
    14d8:	72 e0       	ldi	r23, 0x02	; 2
    14da:	a7 0e       	add	r10, r23
    14dc:	b1 1c       	adc	r11, r1
    14de:	f6 01       	movw	r30, r12
    14e0:	80 81       	ld	r24, Z
    14e2:	89 83       	std	Y+1, r24	; 0x01
    14e4:	01 e0       	ldi	r16, 0x01	; 1
    14e6:	10 e0       	ldi	r17, 0x00	; 0
    14e8:	64 01       	movw	r12, r8
    14ea:	13 c0       	rjmp	.+38     	; 0x1512 <vfprintf+0x49e>
    14ec:	56 01       	movw	r10, r12
    14ee:	f2 e0       	ldi	r31, 0x02	; 2
    14f0:	af 0e       	add	r10, r31
    14f2:	b1 1c       	adc	r11, r1
    14f4:	f6 01       	movw	r30, r12
    14f6:	c0 80       	ld	r12, Z
    14f8:	d1 80       	ldd	r13, Z+1	; 0x01
    14fa:	26 ff       	sbrs	r18, 6
    14fc:	03 c0       	rjmp	.+6      	; 0x1504 <vfprintf+0x490>
    14fe:	61 2f       	mov	r22, r17
    1500:	70 e0       	ldi	r23, 0x00	; 0
    1502:	02 c0       	rjmp	.+4      	; 0x1508 <vfprintf+0x494>
    1504:	6f ef       	ldi	r22, 0xFF	; 255
    1506:	7f ef       	ldi	r23, 0xFF	; 255
    1508:	c6 01       	movw	r24, r12
    150a:	2b 8b       	std	Y+19, r18	; 0x13
    150c:	32 d2       	rcall	.+1124   	; 0x1972 <strnlen>
    150e:	8c 01       	movw	r16, r24
    1510:	2b 89       	ldd	r18, Y+19	; 0x13
    1512:	2f 77       	andi	r18, 0x7F	; 127
    1514:	14 c0       	rjmp	.+40     	; 0x153e <vfprintf+0x4ca>
    1516:	56 01       	movw	r10, r12
    1518:	f2 e0       	ldi	r31, 0x02	; 2
    151a:	af 0e       	add	r10, r31
    151c:	b1 1c       	adc	r11, r1
    151e:	f6 01       	movw	r30, r12
    1520:	c0 80       	ld	r12, Z
    1522:	d1 80       	ldd	r13, Z+1	; 0x01
    1524:	26 ff       	sbrs	r18, 6
    1526:	03 c0       	rjmp	.+6      	; 0x152e <vfprintf+0x4ba>
    1528:	61 2f       	mov	r22, r17
    152a:	70 e0       	ldi	r23, 0x00	; 0
    152c:	02 c0       	rjmp	.+4      	; 0x1532 <vfprintf+0x4be>
    152e:	6f ef       	ldi	r22, 0xFF	; 255
    1530:	7f ef       	ldi	r23, 0xFF	; 255
    1532:	c6 01       	movw	r24, r12
    1534:	2b 8b       	std	Y+19, r18	; 0x13
    1536:	12 d2       	rcall	.+1060   	; 0x195c <strnlen_P>
    1538:	8c 01       	movw	r16, r24
    153a:	2b 89       	ldd	r18, Y+19	; 0x13
    153c:	20 68       	ori	r18, 0x80	; 128
    153e:	72 2e       	mov	r7, r18
    1540:	23 fd       	sbrc	r18, 3
    1542:	18 c0       	rjmp	.+48     	; 0x1574 <vfprintf+0x500>
    1544:	85 2d       	mov	r24, r5
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	08 17       	cp	r16, r24
    154a:	19 07       	cpc	r17, r25
    154c:	98 f4       	brcc	.+38     	; 0x1574 <vfprintf+0x500>
    154e:	b7 01       	movw	r22, r14
    1550:	80 e2       	ldi	r24, 0x20	; 32
    1552:	90 e0       	ldi	r25, 0x00	; 0
    1554:	63 d2       	rcall	.+1222   	; 0x1a1c <fputc>
    1556:	5a 94       	dec	r5
    1558:	f5 cf       	rjmp	.-22     	; 0x1544 <vfprintf+0x4d0>
    155a:	f6 01       	movw	r30, r12
    155c:	77 fc       	sbrc	r7, 7
    155e:	85 91       	lpm	r24, Z+
    1560:	77 fe       	sbrs	r7, 7
    1562:	81 91       	ld	r24, Z+
    1564:	6f 01       	movw	r12, r30
    1566:	b7 01       	movw	r22, r14
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	58 d2       	rcall	.+1200   	; 0x1a1c <fputc>
    156c:	51 10       	cpse	r5, r1
    156e:	5a 94       	dec	r5
    1570:	01 50       	subi	r16, 0x01	; 1
    1572:	11 09       	sbc	r17, r1
    1574:	01 15       	cp	r16, r1
    1576:	11 05       	cpc	r17, r1
    1578:	81 f7       	brne	.-32     	; 0x155a <vfprintf+0x4e6>
    157a:	db c0       	rjmp	.+438    	; 0x1732 <vfprintf+0x6be>
    157c:	84 36       	cpi	r24, 0x64	; 100
    157e:	11 f0       	breq	.+4      	; 0x1584 <vfprintf+0x510>
    1580:	89 36       	cpi	r24, 0x69	; 105
    1582:	49 f5       	brne	.+82     	; 0x15d6 <vfprintf+0x562>
    1584:	56 01       	movw	r10, r12
    1586:	27 ff       	sbrs	r18, 7
    1588:	09 c0       	rjmp	.+18     	; 0x159c <vfprintf+0x528>
    158a:	f4 e0       	ldi	r31, 0x04	; 4
    158c:	af 0e       	add	r10, r31
    158e:	b1 1c       	adc	r11, r1
    1590:	f6 01       	movw	r30, r12
    1592:	60 81       	ld	r22, Z
    1594:	71 81       	ldd	r23, Z+1	; 0x01
    1596:	82 81       	ldd	r24, Z+2	; 0x02
    1598:	93 81       	ldd	r25, Z+3	; 0x03
    159a:	0a c0       	rjmp	.+20     	; 0x15b0 <vfprintf+0x53c>
    159c:	f2 e0       	ldi	r31, 0x02	; 2
    159e:	af 0e       	add	r10, r31
    15a0:	b1 1c       	adc	r11, r1
    15a2:	f6 01       	movw	r30, r12
    15a4:	60 81       	ld	r22, Z
    15a6:	71 81       	ldd	r23, Z+1	; 0x01
    15a8:	88 27       	eor	r24, r24
    15aa:	77 fd       	sbrc	r23, 7
    15ac:	80 95       	com	r24
    15ae:	98 2f       	mov	r25, r24
    15b0:	02 2f       	mov	r16, r18
    15b2:	0f 76       	andi	r16, 0x6F	; 111
    15b4:	97 ff       	sbrs	r25, 7
    15b6:	08 c0       	rjmp	.+16     	; 0x15c8 <vfprintf+0x554>
    15b8:	90 95       	com	r25
    15ba:	80 95       	com	r24
    15bc:	70 95       	com	r23
    15be:	61 95       	neg	r22
    15c0:	7f 4f       	sbci	r23, 0xFF	; 255
    15c2:	8f 4f       	sbci	r24, 0xFF	; 255
    15c4:	9f 4f       	sbci	r25, 0xFF	; 255
    15c6:	00 68       	ori	r16, 0x80	; 128
    15c8:	2a e0       	ldi	r18, 0x0A	; 10
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	a4 01       	movw	r20, r8
    15ce:	96 d2       	rcall	.+1324   	; 0x1afc <__ultoa_invert>
    15d0:	c8 2e       	mov	r12, r24
    15d2:	c8 18       	sub	r12, r8
    15d4:	3d c0       	rjmp	.+122    	; 0x1650 <vfprintf+0x5dc>
    15d6:	02 2f       	mov	r16, r18
    15d8:	85 37       	cpi	r24, 0x75	; 117
    15da:	21 f4       	brne	.+8      	; 0x15e4 <vfprintf+0x570>
    15dc:	0f 7e       	andi	r16, 0xEF	; 239
    15de:	2a e0       	ldi	r18, 0x0A	; 10
    15e0:	30 e0       	ldi	r19, 0x00	; 0
    15e2:	1d c0       	rjmp	.+58     	; 0x161e <vfprintf+0x5aa>
    15e4:	09 7f       	andi	r16, 0xF9	; 249
    15e6:	8f 36       	cpi	r24, 0x6F	; 111
    15e8:	91 f0       	breq	.+36     	; 0x160e <vfprintf+0x59a>
    15ea:	18 f4       	brcc	.+6      	; 0x15f2 <vfprintf+0x57e>
    15ec:	88 35       	cpi	r24, 0x58	; 88
    15ee:	59 f0       	breq	.+22     	; 0x1606 <vfprintf+0x592>
    15f0:	a9 c0       	rjmp	.+338    	; 0x1744 <vfprintf+0x6d0>
    15f2:	80 37       	cpi	r24, 0x70	; 112
    15f4:	19 f0       	breq	.+6      	; 0x15fc <vfprintf+0x588>
    15f6:	88 37       	cpi	r24, 0x78	; 120
    15f8:	11 f0       	breq	.+4      	; 0x15fe <vfprintf+0x58a>
    15fa:	a4 c0       	rjmp	.+328    	; 0x1744 <vfprintf+0x6d0>
    15fc:	00 61       	ori	r16, 0x10	; 16
    15fe:	04 ff       	sbrs	r16, 4
    1600:	09 c0       	rjmp	.+18     	; 0x1614 <vfprintf+0x5a0>
    1602:	04 60       	ori	r16, 0x04	; 4
    1604:	07 c0       	rjmp	.+14     	; 0x1614 <vfprintf+0x5a0>
    1606:	24 ff       	sbrs	r18, 4
    1608:	08 c0       	rjmp	.+16     	; 0x161a <vfprintf+0x5a6>
    160a:	06 60       	ori	r16, 0x06	; 6
    160c:	06 c0       	rjmp	.+12     	; 0x161a <vfprintf+0x5a6>
    160e:	28 e0       	ldi	r18, 0x08	; 8
    1610:	30 e0       	ldi	r19, 0x00	; 0
    1612:	05 c0       	rjmp	.+10     	; 0x161e <vfprintf+0x5aa>
    1614:	20 e1       	ldi	r18, 0x10	; 16
    1616:	30 e0       	ldi	r19, 0x00	; 0
    1618:	02 c0       	rjmp	.+4      	; 0x161e <vfprintf+0x5aa>
    161a:	20 e1       	ldi	r18, 0x10	; 16
    161c:	32 e0       	ldi	r19, 0x02	; 2
    161e:	56 01       	movw	r10, r12
    1620:	07 ff       	sbrs	r16, 7
    1622:	09 c0       	rjmp	.+18     	; 0x1636 <vfprintf+0x5c2>
    1624:	f4 e0       	ldi	r31, 0x04	; 4
    1626:	af 0e       	add	r10, r31
    1628:	b1 1c       	adc	r11, r1
    162a:	f6 01       	movw	r30, r12
    162c:	60 81       	ld	r22, Z
    162e:	71 81       	ldd	r23, Z+1	; 0x01
    1630:	82 81       	ldd	r24, Z+2	; 0x02
    1632:	93 81       	ldd	r25, Z+3	; 0x03
    1634:	08 c0       	rjmp	.+16     	; 0x1646 <vfprintf+0x5d2>
    1636:	f2 e0       	ldi	r31, 0x02	; 2
    1638:	af 0e       	add	r10, r31
    163a:	b1 1c       	adc	r11, r1
    163c:	f6 01       	movw	r30, r12
    163e:	60 81       	ld	r22, Z
    1640:	71 81       	ldd	r23, Z+1	; 0x01
    1642:	80 e0       	ldi	r24, 0x00	; 0
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	a4 01       	movw	r20, r8
    1648:	59 d2       	rcall	.+1202   	; 0x1afc <__ultoa_invert>
    164a:	c8 2e       	mov	r12, r24
    164c:	c8 18       	sub	r12, r8
    164e:	0f 77       	andi	r16, 0x7F	; 127
    1650:	06 ff       	sbrs	r16, 6
    1652:	0b c0       	rjmp	.+22     	; 0x166a <vfprintf+0x5f6>
    1654:	20 2f       	mov	r18, r16
    1656:	2e 7f       	andi	r18, 0xFE	; 254
    1658:	c1 16       	cp	r12, r17
    165a:	50 f4       	brcc	.+20     	; 0x1670 <vfprintf+0x5fc>
    165c:	04 ff       	sbrs	r16, 4
    165e:	0a c0       	rjmp	.+20     	; 0x1674 <vfprintf+0x600>
    1660:	02 fd       	sbrc	r16, 2
    1662:	08 c0       	rjmp	.+16     	; 0x1674 <vfprintf+0x600>
    1664:	20 2f       	mov	r18, r16
    1666:	2e 7e       	andi	r18, 0xEE	; 238
    1668:	05 c0       	rjmp	.+10     	; 0x1674 <vfprintf+0x600>
    166a:	dc 2c       	mov	r13, r12
    166c:	20 2f       	mov	r18, r16
    166e:	03 c0       	rjmp	.+6      	; 0x1676 <vfprintf+0x602>
    1670:	dc 2c       	mov	r13, r12
    1672:	01 c0       	rjmp	.+2      	; 0x1676 <vfprintf+0x602>
    1674:	d1 2e       	mov	r13, r17
    1676:	24 ff       	sbrs	r18, 4
    1678:	0d c0       	rjmp	.+26     	; 0x1694 <vfprintf+0x620>
    167a:	fe 01       	movw	r30, r28
    167c:	ec 0d       	add	r30, r12
    167e:	f1 1d       	adc	r31, r1
    1680:	80 81       	ld	r24, Z
    1682:	80 33       	cpi	r24, 0x30	; 48
    1684:	11 f4       	brne	.+4      	; 0x168a <vfprintf+0x616>
    1686:	29 7e       	andi	r18, 0xE9	; 233
    1688:	09 c0       	rjmp	.+18     	; 0x169c <vfprintf+0x628>
    168a:	22 ff       	sbrs	r18, 2
    168c:	06 c0       	rjmp	.+12     	; 0x169a <vfprintf+0x626>
    168e:	d3 94       	inc	r13
    1690:	d3 94       	inc	r13
    1692:	04 c0       	rjmp	.+8      	; 0x169c <vfprintf+0x628>
    1694:	82 2f       	mov	r24, r18
    1696:	86 78       	andi	r24, 0x86	; 134
    1698:	09 f0       	breq	.+2      	; 0x169c <vfprintf+0x628>
    169a:	d3 94       	inc	r13
    169c:	23 fd       	sbrc	r18, 3
    169e:	12 c0       	rjmp	.+36     	; 0x16c4 <vfprintf+0x650>
    16a0:	20 ff       	sbrs	r18, 0
    16a2:	06 c0       	rjmp	.+12     	; 0x16b0 <vfprintf+0x63c>
    16a4:	1c 2d       	mov	r17, r12
    16a6:	d5 14       	cp	r13, r5
    16a8:	18 f4       	brcc	.+6      	; 0x16b0 <vfprintf+0x63c>
    16aa:	15 0d       	add	r17, r5
    16ac:	1d 19       	sub	r17, r13
    16ae:	d5 2c       	mov	r13, r5
    16b0:	d5 14       	cp	r13, r5
    16b2:	60 f4       	brcc	.+24     	; 0x16cc <vfprintf+0x658>
    16b4:	b7 01       	movw	r22, r14
    16b6:	80 e2       	ldi	r24, 0x20	; 32
    16b8:	90 e0       	ldi	r25, 0x00	; 0
    16ba:	2b 8b       	std	Y+19, r18	; 0x13
    16bc:	af d1       	rcall	.+862    	; 0x1a1c <fputc>
    16be:	d3 94       	inc	r13
    16c0:	2b 89       	ldd	r18, Y+19	; 0x13
    16c2:	f6 cf       	rjmp	.-20     	; 0x16b0 <vfprintf+0x63c>
    16c4:	d5 14       	cp	r13, r5
    16c6:	10 f4       	brcc	.+4      	; 0x16cc <vfprintf+0x658>
    16c8:	5d 18       	sub	r5, r13
    16ca:	01 c0       	rjmp	.+2      	; 0x16ce <vfprintf+0x65a>
    16cc:	51 2c       	mov	r5, r1
    16ce:	24 ff       	sbrs	r18, 4
    16d0:	11 c0       	rjmp	.+34     	; 0x16f4 <vfprintf+0x680>
    16d2:	b7 01       	movw	r22, r14
    16d4:	80 e3       	ldi	r24, 0x30	; 48
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	2b 8b       	std	Y+19, r18	; 0x13
    16da:	a0 d1       	rcall	.+832    	; 0x1a1c <fputc>
    16dc:	2b 89       	ldd	r18, Y+19	; 0x13
    16de:	22 ff       	sbrs	r18, 2
    16e0:	16 c0       	rjmp	.+44     	; 0x170e <vfprintf+0x69a>
    16e2:	21 ff       	sbrs	r18, 1
    16e4:	03 c0       	rjmp	.+6      	; 0x16ec <vfprintf+0x678>
    16e6:	88 e5       	ldi	r24, 0x58	; 88
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	02 c0       	rjmp	.+4      	; 0x16f0 <vfprintf+0x67c>
    16ec:	88 e7       	ldi	r24, 0x78	; 120
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	b7 01       	movw	r22, r14
    16f2:	0c c0       	rjmp	.+24     	; 0x170c <vfprintf+0x698>
    16f4:	82 2f       	mov	r24, r18
    16f6:	86 78       	andi	r24, 0x86	; 134
    16f8:	51 f0       	breq	.+20     	; 0x170e <vfprintf+0x69a>
    16fa:	21 fd       	sbrc	r18, 1
    16fc:	02 c0       	rjmp	.+4      	; 0x1702 <vfprintf+0x68e>
    16fe:	80 e2       	ldi	r24, 0x20	; 32
    1700:	01 c0       	rjmp	.+2      	; 0x1704 <vfprintf+0x690>
    1702:	8b e2       	ldi	r24, 0x2B	; 43
    1704:	27 fd       	sbrc	r18, 7
    1706:	8d e2       	ldi	r24, 0x2D	; 45
    1708:	b7 01       	movw	r22, r14
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	87 d1       	rcall	.+782    	; 0x1a1c <fputc>
    170e:	c1 16       	cp	r12, r17
    1710:	30 f4       	brcc	.+12     	; 0x171e <vfprintf+0x6aa>
    1712:	b7 01       	movw	r22, r14
    1714:	80 e3       	ldi	r24, 0x30	; 48
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	81 d1       	rcall	.+770    	; 0x1a1c <fputc>
    171a:	11 50       	subi	r17, 0x01	; 1
    171c:	f8 cf       	rjmp	.-16     	; 0x170e <vfprintf+0x69a>
    171e:	ca 94       	dec	r12
    1720:	f4 01       	movw	r30, r8
    1722:	ec 0d       	add	r30, r12
    1724:	f1 1d       	adc	r31, r1
    1726:	80 81       	ld	r24, Z
    1728:	b7 01       	movw	r22, r14
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	77 d1       	rcall	.+750    	; 0x1a1c <fputc>
    172e:	c1 10       	cpse	r12, r1
    1730:	f6 cf       	rjmp	.-20     	; 0x171e <vfprintf+0x6aa>
    1732:	55 20       	and	r5, r5
    1734:	09 f4       	brne	.+2      	; 0x1738 <vfprintf+0x6c4>
    1736:	dd cc       	rjmp	.-1606   	; 0x10f2 <vfprintf+0x7e>
    1738:	b7 01       	movw	r22, r14
    173a:	80 e2       	ldi	r24, 0x20	; 32
    173c:	90 e0       	ldi	r25, 0x00	; 0
    173e:	6e d1       	rcall	.+732    	; 0x1a1c <fputc>
    1740:	5a 94       	dec	r5
    1742:	f7 cf       	rjmp	.-18     	; 0x1732 <vfprintf+0x6be>
    1744:	f7 01       	movw	r30, r14
    1746:	86 81       	ldd	r24, Z+6	; 0x06
    1748:	97 81       	ldd	r25, Z+7	; 0x07
    174a:	02 c0       	rjmp	.+4      	; 0x1750 <vfprintf+0x6dc>
    174c:	8f ef       	ldi	r24, 0xFF	; 255
    174e:	9f ef       	ldi	r25, 0xFF	; 255
    1750:	63 96       	adiw	r28, 0x13	; 19
    1752:	0f b6       	in	r0, 0x3f	; 63
    1754:	f8 94       	cli
    1756:	de bf       	out	0x3e, r29	; 62
    1758:	0f be       	out	0x3f, r0	; 63
    175a:	cd bf       	out	0x3d, r28	; 61
    175c:	df 91       	pop	r29
    175e:	cf 91       	pop	r28
    1760:	1f 91       	pop	r17
    1762:	0f 91       	pop	r16
    1764:	ff 90       	pop	r15
    1766:	ef 90       	pop	r14
    1768:	df 90       	pop	r13
    176a:	cf 90       	pop	r12
    176c:	bf 90       	pop	r11
    176e:	af 90       	pop	r10
    1770:	9f 90       	pop	r9
    1772:	8f 90       	pop	r8
    1774:	7f 90       	pop	r7
    1776:	6f 90       	pop	r6
    1778:	5f 90       	pop	r5
    177a:	4f 90       	pop	r4
    177c:	3f 90       	pop	r3
    177e:	2f 90       	pop	r2
    1780:	08 95       	ret

00001782 <__tablejump2__>:
    1782:	ee 0f       	add	r30, r30
    1784:	ff 1f       	adc	r31, r31

00001786 <__tablejump__>:
    1786:	05 90       	lpm	r0, Z+
    1788:	f4 91       	lpm	r31, Z
    178a:	e0 2d       	mov	r30, r0
    178c:	19 94       	eijmp

0000178e <__umulhisi3>:
    178e:	a2 9f       	mul	r26, r18
    1790:	b0 01       	movw	r22, r0
    1792:	b3 9f       	mul	r27, r19
    1794:	c0 01       	movw	r24, r0
    1796:	a3 9f       	mul	r26, r19
    1798:	70 0d       	add	r23, r0
    179a:	81 1d       	adc	r24, r1
    179c:	11 24       	eor	r1, r1
    179e:	91 1d       	adc	r25, r1
    17a0:	b2 9f       	mul	r27, r18
    17a2:	70 0d       	add	r23, r0
    17a4:	81 1d       	adc	r24, r1
    17a6:	11 24       	eor	r1, r1
    17a8:	91 1d       	adc	r25, r1
    17aa:	08 95       	ret

000017ac <__ftoa_engine>:
    17ac:	28 30       	cpi	r18, 0x08	; 8
    17ae:	08 f0       	brcs	.+2      	; 0x17b2 <__ftoa_engine+0x6>
    17b0:	27 e0       	ldi	r18, 0x07	; 7
    17b2:	33 27       	eor	r19, r19
    17b4:	da 01       	movw	r26, r20
    17b6:	99 0f       	add	r25, r25
    17b8:	31 1d       	adc	r19, r1
    17ba:	87 fd       	sbrc	r24, 7
    17bc:	91 60       	ori	r25, 0x01	; 1
    17be:	00 96       	adiw	r24, 0x00	; 0
    17c0:	61 05       	cpc	r22, r1
    17c2:	71 05       	cpc	r23, r1
    17c4:	39 f4       	brne	.+14     	; 0x17d4 <__ftoa_engine+0x28>
    17c6:	32 60       	ori	r19, 0x02	; 2
    17c8:	2e 5f       	subi	r18, 0xFE	; 254
    17ca:	3d 93       	st	X+, r19
    17cc:	30 e3       	ldi	r19, 0x30	; 48
    17ce:	2a 95       	dec	r18
    17d0:	e1 f7       	brne	.-8      	; 0x17ca <__ftoa_engine+0x1e>
    17d2:	08 95       	ret
    17d4:	9f 3f       	cpi	r25, 0xFF	; 255
    17d6:	30 f0       	brcs	.+12     	; 0x17e4 <__ftoa_engine+0x38>
    17d8:	80 38       	cpi	r24, 0x80	; 128
    17da:	71 05       	cpc	r23, r1
    17dc:	61 05       	cpc	r22, r1
    17de:	09 f0       	breq	.+2      	; 0x17e2 <__ftoa_engine+0x36>
    17e0:	3c 5f       	subi	r19, 0xFC	; 252
    17e2:	3c 5f       	subi	r19, 0xFC	; 252
    17e4:	3d 93       	st	X+, r19
    17e6:	91 30       	cpi	r25, 0x01	; 1
    17e8:	08 f0       	brcs	.+2      	; 0x17ec <__ftoa_engine+0x40>
    17ea:	80 68       	ori	r24, 0x80	; 128
    17ec:	91 1d       	adc	r25, r1
    17ee:	df 93       	push	r29
    17f0:	cf 93       	push	r28
    17f2:	1f 93       	push	r17
    17f4:	0f 93       	push	r16
    17f6:	ff 92       	push	r15
    17f8:	ef 92       	push	r14
    17fa:	19 2f       	mov	r17, r25
    17fc:	98 7f       	andi	r25, 0xF8	; 248
    17fe:	96 95       	lsr	r25
    1800:	e9 2f       	mov	r30, r25
    1802:	96 95       	lsr	r25
    1804:	96 95       	lsr	r25
    1806:	e9 0f       	add	r30, r25
    1808:	ff 27       	eor	r31, r31
    180a:	e8 51       	subi	r30, 0x18	; 24
    180c:	fe 4f       	sbci	r31, 0xFE	; 254
    180e:	99 27       	eor	r25, r25
    1810:	33 27       	eor	r19, r19
    1812:	ee 24       	eor	r14, r14
    1814:	ff 24       	eor	r15, r15
    1816:	a7 01       	movw	r20, r14
    1818:	e7 01       	movw	r28, r14
    181a:	05 90       	lpm	r0, Z+
    181c:	08 94       	sec
    181e:	07 94       	ror	r0
    1820:	28 f4       	brcc	.+10     	; 0x182c <__ftoa_engine+0x80>
    1822:	36 0f       	add	r19, r22
    1824:	e7 1e       	adc	r14, r23
    1826:	f8 1e       	adc	r15, r24
    1828:	49 1f       	adc	r20, r25
    182a:	51 1d       	adc	r21, r1
    182c:	66 0f       	add	r22, r22
    182e:	77 1f       	adc	r23, r23
    1830:	88 1f       	adc	r24, r24
    1832:	99 1f       	adc	r25, r25
    1834:	06 94       	lsr	r0
    1836:	a1 f7       	brne	.-24     	; 0x1820 <__ftoa_engine+0x74>
    1838:	05 90       	lpm	r0, Z+
    183a:	07 94       	ror	r0
    183c:	28 f4       	brcc	.+10     	; 0x1848 <__ftoa_engine+0x9c>
    183e:	e7 0e       	add	r14, r23
    1840:	f8 1e       	adc	r15, r24
    1842:	49 1f       	adc	r20, r25
    1844:	56 1f       	adc	r21, r22
    1846:	c1 1d       	adc	r28, r1
    1848:	77 0f       	add	r23, r23
    184a:	88 1f       	adc	r24, r24
    184c:	99 1f       	adc	r25, r25
    184e:	66 1f       	adc	r22, r22
    1850:	06 94       	lsr	r0
    1852:	a1 f7       	brne	.-24     	; 0x183c <__ftoa_engine+0x90>
    1854:	05 90       	lpm	r0, Z+
    1856:	07 94       	ror	r0
    1858:	28 f4       	brcc	.+10     	; 0x1864 <__ftoa_engine+0xb8>
    185a:	f8 0e       	add	r15, r24
    185c:	49 1f       	adc	r20, r25
    185e:	56 1f       	adc	r21, r22
    1860:	c7 1f       	adc	r28, r23
    1862:	d1 1d       	adc	r29, r1
    1864:	88 0f       	add	r24, r24
    1866:	99 1f       	adc	r25, r25
    1868:	66 1f       	adc	r22, r22
    186a:	77 1f       	adc	r23, r23
    186c:	06 94       	lsr	r0
    186e:	a1 f7       	brne	.-24     	; 0x1858 <__ftoa_engine+0xac>
    1870:	05 90       	lpm	r0, Z+
    1872:	07 94       	ror	r0
    1874:	20 f4       	brcc	.+8      	; 0x187e <__ftoa_engine+0xd2>
    1876:	49 0f       	add	r20, r25
    1878:	56 1f       	adc	r21, r22
    187a:	c7 1f       	adc	r28, r23
    187c:	d8 1f       	adc	r29, r24
    187e:	99 0f       	add	r25, r25
    1880:	66 1f       	adc	r22, r22
    1882:	77 1f       	adc	r23, r23
    1884:	88 1f       	adc	r24, r24
    1886:	06 94       	lsr	r0
    1888:	a9 f7       	brne	.-22     	; 0x1874 <__ftoa_engine+0xc8>
    188a:	84 91       	lpm	r24, Z
    188c:	10 95       	com	r17
    188e:	17 70       	andi	r17, 0x07	; 7
    1890:	41 f0       	breq	.+16     	; 0x18a2 <__ftoa_engine+0xf6>
    1892:	d6 95       	lsr	r29
    1894:	c7 95       	ror	r28
    1896:	57 95       	ror	r21
    1898:	47 95       	ror	r20
    189a:	f7 94       	ror	r15
    189c:	e7 94       	ror	r14
    189e:	1a 95       	dec	r17
    18a0:	c1 f7       	brne	.-16     	; 0x1892 <__ftoa_engine+0xe6>
    18a2:	ee e8       	ldi	r30, 0x8E	; 142
    18a4:	f1 e0       	ldi	r31, 0x01	; 1
    18a6:	68 94       	set
    18a8:	15 90       	lpm	r1, Z+
    18aa:	15 91       	lpm	r17, Z+
    18ac:	35 91       	lpm	r19, Z+
    18ae:	65 91       	lpm	r22, Z+
    18b0:	95 91       	lpm	r25, Z+
    18b2:	05 90       	lpm	r0, Z+
    18b4:	7f e2       	ldi	r23, 0x2F	; 47
    18b6:	73 95       	inc	r23
    18b8:	e1 18       	sub	r14, r1
    18ba:	f1 0a       	sbc	r15, r17
    18bc:	43 0b       	sbc	r20, r19
    18be:	56 0b       	sbc	r21, r22
    18c0:	c9 0b       	sbc	r28, r25
    18c2:	d0 09       	sbc	r29, r0
    18c4:	c0 f7       	brcc	.-16     	; 0x18b6 <__ftoa_engine+0x10a>
    18c6:	e1 0c       	add	r14, r1
    18c8:	f1 1e       	adc	r15, r17
    18ca:	43 1f       	adc	r20, r19
    18cc:	56 1f       	adc	r21, r22
    18ce:	c9 1f       	adc	r28, r25
    18d0:	d0 1d       	adc	r29, r0
    18d2:	7e f4       	brtc	.+30     	; 0x18f2 <__ftoa_engine+0x146>
    18d4:	70 33       	cpi	r23, 0x30	; 48
    18d6:	11 f4       	brne	.+4      	; 0x18dc <__ftoa_engine+0x130>
    18d8:	8a 95       	dec	r24
    18da:	e6 cf       	rjmp	.-52     	; 0x18a8 <__ftoa_engine+0xfc>
    18dc:	e8 94       	clt
    18de:	01 50       	subi	r16, 0x01	; 1
    18e0:	30 f0       	brcs	.+12     	; 0x18ee <__ftoa_engine+0x142>
    18e2:	08 0f       	add	r16, r24
    18e4:	0a f4       	brpl	.+2      	; 0x18e8 <__ftoa_engine+0x13c>
    18e6:	00 27       	eor	r16, r16
    18e8:	02 17       	cp	r16, r18
    18ea:	08 f4       	brcc	.+2      	; 0x18ee <__ftoa_engine+0x142>
    18ec:	20 2f       	mov	r18, r16
    18ee:	23 95       	inc	r18
    18f0:	02 2f       	mov	r16, r18
    18f2:	7a 33       	cpi	r23, 0x3A	; 58
    18f4:	28 f0       	brcs	.+10     	; 0x1900 <__ftoa_engine+0x154>
    18f6:	79 e3       	ldi	r23, 0x39	; 57
    18f8:	7d 93       	st	X+, r23
    18fa:	2a 95       	dec	r18
    18fc:	e9 f7       	brne	.-6      	; 0x18f8 <__ftoa_engine+0x14c>
    18fe:	10 c0       	rjmp	.+32     	; 0x1920 <__ftoa_engine+0x174>
    1900:	7d 93       	st	X+, r23
    1902:	2a 95       	dec	r18
    1904:	89 f6       	brne	.-94     	; 0x18a8 <__ftoa_engine+0xfc>
    1906:	06 94       	lsr	r0
    1908:	97 95       	ror	r25
    190a:	67 95       	ror	r22
    190c:	37 95       	ror	r19
    190e:	17 95       	ror	r17
    1910:	17 94       	ror	r1
    1912:	e1 18       	sub	r14, r1
    1914:	f1 0a       	sbc	r15, r17
    1916:	43 0b       	sbc	r20, r19
    1918:	56 0b       	sbc	r21, r22
    191a:	c9 0b       	sbc	r28, r25
    191c:	d0 09       	sbc	r29, r0
    191e:	98 f0       	brcs	.+38     	; 0x1946 <__ftoa_engine+0x19a>
    1920:	23 95       	inc	r18
    1922:	7e 91       	ld	r23, -X
    1924:	73 95       	inc	r23
    1926:	7a 33       	cpi	r23, 0x3A	; 58
    1928:	08 f0       	brcs	.+2      	; 0x192c <__ftoa_engine+0x180>
    192a:	70 e3       	ldi	r23, 0x30	; 48
    192c:	7c 93       	st	X, r23
    192e:	20 13       	cpse	r18, r16
    1930:	b8 f7       	brcc	.-18     	; 0x1920 <__ftoa_engine+0x174>
    1932:	7e 91       	ld	r23, -X
    1934:	70 61       	ori	r23, 0x10	; 16
    1936:	7d 93       	st	X+, r23
    1938:	30 f0       	brcs	.+12     	; 0x1946 <__ftoa_engine+0x19a>
    193a:	83 95       	inc	r24
    193c:	71 e3       	ldi	r23, 0x31	; 49
    193e:	7d 93       	st	X+, r23
    1940:	70 e3       	ldi	r23, 0x30	; 48
    1942:	2a 95       	dec	r18
    1944:	e1 f7       	brne	.-8      	; 0x193e <__ftoa_engine+0x192>
    1946:	11 24       	eor	r1, r1
    1948:	ef 90       	pop	r14
    194a:	ff 90       	pop	r15
    194c:	0f 91       	pop	r16
    194e:	1f 91       	pop	r17
    1950:	cf 91       	pop	r28
    1952:	df 91       	pop	r29
    1954:	99 27       	eor	r25, r25
    1956:	87 fd       	sbrc	r24, 7
    1958:	90 95       	com	r25
    195a:	08 95       	ret

0000195c <strnlen_P>:
    195c:	fc 01       	movw	r30, r24
    195e:	05 90       	lpm	r0, Z+
    1960:	61 50       	subi	r22, 0x01	; 1
    1962:	70 40       	sbci	r23, 0x00	; 0
    1964:	01 10       	cpse	r0, r1
    1966:	d8 f7       	brcc	.-10     	; 0x195e <strnlen_P+0x2>
    1968:	80 95       	com	r24
    196a:	90 95       	com	r25
    196c:	8e 0f       	add	r24, r30
    196e:	9f 1f       	adc	r25, r31
    1970:	08 95       	ret

00001972 <strnlen>:
    1972:	fc 01       	movw	r30, r24
    1974:	61 50       	subi	r22, 0x01	; 1
    1976:	70 40       	sbci	r23, 0x00	; 0
    1978:	01 90       	ld	r0, Z+
    197a:	01 10       	cpse	r0, r1
    197c:	d8 f7       	brcc	.-10     	; 0x1974 <strnlen+0x2>
    197e:	80 95       	com	r24
    1980:	90 95       	com	r25
    1982:	8e 0f       	add	r24, r30
    1984:	9f 1f       	adc	r25, r31
    1986:	08 95       	ret

00001988 <fdevopen>:
    1988:	0f 93       	push	r16
    198a:	1f 93       	push	r17
    198c:	cf 93       	push	r28
    198e:	df 93       	push	r29
    1990:	ec 01       	movw	r28, r24
    1992:	8b 01       	movw	r16, r22
    1994:	00 97       	sbiw	r24, 0x00	; 0
    1996:	31 f4       	brne	.+12     	; 0x19a4 <fdevopen+0x1c>
    1998:	61 15       	cp	r22, r1
    199a:	71 05       	cpc	r23, r1
    199c:	19 f4       	brne	.+6      	; 0x19a4 <fdevopen+0x1c>
    199e:	80 e0       	ldi	r24, 0x00	; 0
    19a0:	90 e0       	ldi	r25, 0x00	; 0
    19a2:	37 c0       	rjmp	.+110    	; 0x1a12 <fdevopen+0x8a>
    19a4:	6e e0       	ldi	r22, 0x0E	; 14
    19a6:	70 e0       	ldi	r23, 0x00	; 0
    19a8:	81 e0       	ldi	r24, 0x01	; 1
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	05 d1       	rcall	.+522    	; 0x1bb8 <calloc>
    19ae:	fc 01       	movw	r30, r24
    19b0:	00 97       	sbiw	r24, 0x00	; 0
    19b2:	a9 f3       	breq	.-22     	; 0x199e <fdevopen+0x16>
    19b4:	80 e8       	ldi	r24, 0x80	; 128
    19b6:	83 83       	std	Z+3, r24	; 0x03
    19b8:	01 15       	cp	r16, r1
    19ba:	11 05       	cpc	r17, r1
    19bc:	71 f0       	breq	.+28     	; 0x19da <fdevopen+0x52>
    19be:	13 87       	std	Z+11, r17	; 0x0b
    19c0:	02 87       	std	Z+10, r16	; 0x0a
    19c2:	81 e8       	ldi	r24, 0x81	; 129
    19c4:	83 83       	std	Z+3, r24	; 0x03
    19c6:	80 91 c2 02 	lds	r24, 0x02C2
    19ca:	90 91 c3 02 	lds	r25, 0x02C3
    19ce:	89 2b       	or	r24, r25
    19d0:	21 f4       	brne	.+8      	; 0x19da <fdevopen+0x52>
    19d2:	f0 93 c3 02 	sts	0x02C3, r31
    19d6:	e0 93 c2 02 	sts	0x02C2, r30
    19da:	20 97       	sbiw	r28, 0x00	; 0
    19dc:	c9 f0       	breq	.+50     	; 0x1a10 <fdevopen+0x88>
    19de:	d1 87       	std	Z+9, r29	; 0x09
    19e0:	c0 87       	std	Z+8, r28	; 0x08
    19e2:	83 81       	ldd	r24, Z+3	; 0x03
    19e4:	82 60       	ori	r24, 0x02	; 2
    19e6:	83 83       	std	Z+3, r24	; 0x03
    19e8:	80 91 c4 02 	lds	r24, 0x02C4
    19ec:	90 91 c5 02 	lds	r25, 0x02C5
    19f0:	89 2b       	or	r24, r25
    19f2:	71 f4       	brne	.+28     	; 0x1a10 <fdevopen+0x88>
    19f4:	f0 93 c5 02 	sts	0x02C5, r31
    19f8:	e0 93 c4 02 	sts	0x02C4, r30
    19fc:	80 91 c6 02 	lds	r24, 0x02C6
    1a00:	90 91 c7 02 	lds	r25, 0x02C7
    1a04:	89 2b       	or	r24, r25
    1a06:	21 f4       	brne	.+8      	; 0x1a10 <fdevopen+0x88>
    1a08:	f0 93 c7 02 	sts	0x02C7, r31
    1a0c:	e0 93 c6 02 	sts	0x02C6, r30
    1a10:	cf 01       	movw	r24, r30
    1a12:	df 91       	pop	r29
    1a14:	cf 91       	pop	r28
    1a16:	1f 91       	pop	r17
    1a18:	0f 91       	pop	r16
    1a1a:	08 95       	ret

00001a1c <fputc>:
    1a1c:	0f 93       	push	r16
    1a1e:	1f 93       	push	r17
    1a20:	cf 93       	push	r28
    1a22:	df 93       	push	r29
    1a24:	18 2f       	mov	r17, r24
    1a26:	09 2f       	mov	r16, r25
    1a28:	eb 01       	movw	r28, r22
    1a2a:	8b 81       	ldd	r24, Y+3	; 0x03
    1a2c:	81 fd       	sbrc	r24, 1
    1a2e:	03 c0       	rjmp	.+6      	; 0x1a36 <fputc+0x1a>
    1a30:	8f ef       	ldi	r24, 0xFF	; 255
    1a32:	9f ef       	ldi	r25, 0xFF	; 255
    1a34:	20 c0       	rjmp	.+64     	; 0x1a76 <fputc+0x5a>
    1a36:	82 ff       	sbrs	r24, 2
    1a38:	10 c0       	rjmp	.+32     	; 0x1a5a <fputc+0x3e>
    1a3a:	4e 81       	ldd	r20, Y+6	; 0x06
    1a3c:	5f 81       	ldd	r21, Y+7	; 0x07
    1a3e:	2c 81       	ldd	r18, Y+4	; 0x04
    1a40:	3d 81       	ldd	r19, Y+5	; 0x05
    1a42:	42 17       	cp	r20, r18
    1a44:	53 07       	cpc	r21, r19
    1a46:	7c f4       	brge	.+30     	; 0x1a66 <fputc+0x4a>
    1a48:	e8 81       	ld	r30, Y
    1a4a:	f9 81       	ldd	r31, Y+1	; 0x01
    1a4c:	9f 01       	movw	r18, r30
    1a4e:	2f 5f       	subi	r18, 0xFF	; 255
    1a50:	3f 4f       	sbci	r19, 0xFF	; 255
    1a52:	39 83       	std	Y+1, r19	; 0x01
    1a54:	28 83       	st	Y, r18
    1a56:	10 83       	st	Z, r17
    1a58:	06 c0       	rjmp	.+12     	; 0x1a66 <fputc+0x4a>
    1a5a:	e8 85       	ldd	r30, Y+8	; 0x08
    1a5c:	f9 85       	ldd	r31, Y+9	; 0x09
    1a5e:	81 2f       	mov	r24, r17
    1a60:	19 95       	eicall
    1a62:	89 2b       	or	r24, r25
    1a64:	29 f7       	brne	.-54     	; 0x1a30 <fputc+0x14>
    1a66:	2e 81       	ldd	r18, Y+6	; 0x06
    1a68:	3f 81       	ldd	r19, Y+7	; 0x07
    1a6a:	2f 5f       	subi	r18, 0xFF	; 255
    1a6c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a6e:	3f 83       	std	Y+7, r19	; 0x07
    1a70:	2e 83       	std	Y+6, r18	; 0x06
    1a72:	81 2f       	mov	r24, r17
    1a74:	90 2f       	mov	r25, r16
    1a76:	df 91       	pop	r29
    1a78:	cf 91       	pop	r28
    1a7a:	1f 91       	pop	r17
    1a7c:	0f 91       	pop	r16
    1a7e:	08 95       	ret

00001a80 <printf>:
    1a80:	cf 93       	push	r28
    1a82:	df 93       	push	r29
    1a84:	cd b7       	in	r28, 0x3d	; 61
    1a86:	de b7       	in	r29, 0x3e	; 62
    1a88:	fe 01       	movw	r30, r28
    1a8a:	36 96       	adiw	r30, 0x06	; 6
    1a8c:	61 91       	ld	r22, Z+
    1a8e:	71 91       	ld	r23, Z+
    1a90:	af 01       	movw	r20, r30
    1a92:	80 91 c4 02 	lds	r24, 0x02C4
    1a96:	90 91 c5 02 	lds	r25, 0x02C5
    1a9a:	ec da       	rcall	.-2600   	; 0x1074 <vfprintf>
    1a9c:	df 91       	pop	r29
    1a9e:	cf 91       	pop	r28
    1aa0:	08 95       	ret

00001aa2 <puts>:
    1aa2:	0f 93       	push	r16
    1aa4:	1f 93       	push	r17
    1aa6:	cf 93       	push	r28
    1aa8:	df 93       	push	r29
    1aaa:	e0 91 c4 02 	lds	r30, 0x02C4
    1aae:	f0 91 c5 02 	lds	r31, 0x02C5
    1ab2:	23 81       	ldd	r18, Z+3	; 0x03
    1ab4:	21 ff       	sbrs	r18, 1
    1ab6:	1b c0       	rjmp	.+54     	; 0x1aee <puts+0x4c>
    1ab8:	ec 01       	movw	r28, r24
    1aba:	00 e0       	ldi	r16, 0x00	; 0
    1abc:	10 e0       	ldi	r17, 0x00	; 0
    1abe:	89 91       	ld	r24, Y+
    1ac0:	60 91 c4 02 	lds	r22, 0x02C4
    1ac4:	70 91 c5 02 	lds	r23, 0x02C5
    1ac8:	db 01       	movw	r26, r22
    1aca:	18 96       	adiw	r26, 0x08	; 8
    1acc:	ed 91       	ld	r30, X+
    1ace:	fc 91       	ld	r31, X
    1ad0:	19 97       	sbiw	r26, 0x09	; 9
    1ad2:	88 23       	and	r24, r24
    1ad4:	31 f0       	breq	.+12     	; 0x1ae2 <puts+0x40>
    1ad6:	19 95       	eicall
    1ad8:	89 2b       	or	r24, r25
    1ada:	89 f3       	breq	.-30     	; 0x1abe <puts+0x1c>
    1adc:	0f ef       	ldi	r16, 0xFF	; 255
    1ade:	1f ef       	ldi	r17, 0xFF	; 255
    1ae0:	ee cf       	rjmp	.-36     	; 0x1abe <puts+0x1c>
    1ae2:	8a e0       	ldi	r24, 0x0A	; 10
    1ae4:	19 95       	eicall
    1ae6:	89 2b       	or	r24, r25
    1ae8:	11 f4       	brne	.+4      	; 0x1aee <puts+0x4c>
    1aea:	c8 01       	movw	r24, r16
    1aec:	02 c0       	rjmp	.+4      	; 0x1af2 <puts+0x50>
    1aee:	8f ef       	ldi	r24, 0xFF	; 255
    1af0:	9f ef       	ldi	r25, 0xFF	; 255
    1af2:	df 91       	pop	r29
    1af4:	cf 91       	pop	r28
    1af6:	1f 91       	pop	r17
    1af8:	0f 91       	pop	r16
    1afa:	08 95       	ret

00001afc <__ultoa_invert>:
    1afc:	fa 01       	movw	r30, r20
    1afe:	aa 27       	eor	r26, r26
    1b00:	28 30       	cpi	r18, 0x08	; 8
    1b02:	51 f1       	breq	.+84     	; 0x1b58 <__ultoa_invert+0x5c>
    1b04:	20 31       	cpi	r18, 0x10	; 16
    1b06:	81 f1       	breq	.+96     	; 0x1b68 <__ultoa_invert+0x6c>
    1b08:	e8 94       	clt
    1b0a:	6f 93       	push	r22
    1b0c:	6e 7f       	andi	r22, 0xFE	; 254
    1b0e:	6e 5f       	subi	r22, 0xFE	; 254
    1b10:	7f 4f       	sbci	r23, 0xFF	; 255
    1b12:	8f 4f       	sbci	r24, 0xFF	; 255
    1b14:	9f 4f       	sbci	r25, 0xFF	; 255
    1b16:	af 4f       	sbci	r26, 0xFF	; 255
    1b18:	b1 e0       	ldi	r27, 0x01	; 1
    1b1a:	3e d0       	rcall	.+124    	; 0x1b98 <__ultoa_invert+0x9c>
    1b1c:	b4 e0       	ldi	r27, 0x04	; 4
    1b1e:	3c d0       	rcall	.+120    	; 0x1b98 <__ultoa_invert+0x9c>
    1b20:	67 0f       	add	r22, r23
    1b22:	78 1f       	adc	r23, r24
    1b24:	89 1f       	adc	r24, r25
    1b26:	9a 1f       	adc	r25, r26
    1b28:	a1 1d       	adc	r26, r1
    1b2a:	68 0f       	add	r22, r24
    1b2c:	79 1f       	adc	r23, r25
    1b2e:	8a 1f       	adc	r24, r26
    1b30:	91 1d       	adc	r25, r1
    1b32:	a1 1d       	adc	r26, r1
    1b34:	6a 0f       	add	r22, r26
    1b36:	71 1d       	adc	r23, r1
    1b38:	81 1d       	adc	r24, r1
    1b3a:	91 1d       	adc	r25, r1
    1b3c:	a1 1d       	adc	r26, r1
    1b3e:	20 d0       	rcall	.+64     	; 0x1b80 <__ultoa_invert+0x84>
    1b40:	09 f4       	brne	.+2      	; 0x1b44 <__ultoa_invert+0x48>
    1b42:	68 94       	set
    1b44:	3f 91       	pop	r19
    1b46:	2a e0       	ldi	r18, 0x0A	; 10
    1b48:	26 9f       	mul	r18, r22
    1b4a:	11 24       	eor	r1, r1
    1b4c:	30 19       	sub	r19, r0
    1b4e:	30 5d       	subi	r19, 0xD0	; 208
    1b50:	31 93       	st	Z+, r19
    1b52:	de f6       	brtc	.-74     	; 0x1b0a <__ultoa_invert+0xe>
    1b54:	cf 01       	movw	r24, r30
    1b56:	08 95       	ret
    1b58:	46 2f       	mov	r20, r22
    1b5a:	47 70       	andi	r20, 0x07	; 7
    1b5c:	40 5d       	subi	r20, 0xD0	; 208
    1b5e:	41 93       	st	Z+, r20
    1b60:	b3 e0       	ldi	r27, 0x03	; 3
    1b62:	0f d0       	rcall	.+30     	; 0x1b82 <__ultoa_invert+0x86>
    1b64:	c9 f7       	brne	.-14     	; 0x1b58 <__ultoa_invert+0x5c>
    1b66:	f6 cf       	rjmp	.-20     	; 0x1b54 <__ultoa_invert+0x58>
    1b68:	46 2f       	mov	r20, r22
    1b6a:	4f 70       	andi	r20, 0x0F	; 15
    1b6c:	40 5d       	subi	r20, 0xD0	; 208
    1b6e:	4a 33       	cpi	r20, 0x3A	; 58
    1b70:	18 f0       	brcs	.+6      	; 0x1b78 <__ultoa_invert+0x7c>
    1b72:	49 5d       	subi	r20, 0xD9	; 217
    1b74:	31 fd       	sbrc	r19, 1
    1b76:	40 52       	subi	r20, 0x20	; 32
    1b78:	41 93       	st	Z+, r20
    1b7a:	02 d0       	rcall	.+4      	; 0x1b80 <__ultoa_invert+0x84>
    1b7c:	a9 f7       	brne	.-22     	; 0x1b68 <__ultoa_invert+0x6c>
    1b7e:	ea cf       	rjmp	.-44     	; 0x1b54 <__ultoa_invert+0x58>
    1b80:	b4 e0       	ldi	r27, 0x04	; 4
    1b82:	a6 95       	lsr	r26
    1b84:	97 95       	ror	r25
    1b86:	87 95       	ror	r24
    1b88:	77 95       	ror	r23
    1b8a:	67 95       	ror	r22
    1b8c:	ba 95       	dec	r27
    1b8e:	c9 f7       	brne	.-14     	; 0x1b82 <__ultoa_invert+0x86>
    1b90:	00 97       	sbiw	r24, 0x00	; 0
    1b92:	61 05       	cpc	r22, r1
    1b94:	71 05       	cpc	r23, r1
    1b96:	08 95       	ret
    1b98:	9b 01       	movw	r18, r22
    1b9a:	ac 01       	movw	r20, r24
    1b9c:	0a 2e       	mov	r0, r26
    1b9e:	06 94       	lsr	r0
    1ba0:	57 95       	ror	r21
    1ba2:	47 95       	ror	r20
    1ba4:	37 95       	ror	r19
    1ba6:	27 95       	ror	r18
    1ba8:	ba 95       	dec	r27
    1baa:	c9 f7       	brne	.-14     	; 0x1b9e <__ultoa_invert+0xa2>
    1bac:	62 0f       	add	r22, r18
    1bae:	73 1f       	adc	r23, r19
    1bb0:	84 1f       	adc	r24, r20
    1bb2:	95 1f       	adc	r25, r21
    1bb4:	a0 1d       	adc	r26, r0
    1bb6:	08 95       	ret

00001bb8 <calloc>:
    1bb8:	0f 93       	push	r16
    1bba:	1f 93       	push	r17
    1bbc:	cf 93       	push	r28
    1bbe:	df 93       	push	r29
    1bc0:	86 9f       	mul	r24, r22
    1bc2:	80 01       	movw	r16, r0
    1bc4:	87 9f       	mul	r24, r23
    1bc6:	10 0d       	add	r17, r0
    1bc8:	96 9f       	mul	r25, r22
    1bca:	10 0d       	add	r17, r0
    1bcc:	11 24       	eor	r1, r1
    1bce:	c8 01       	movw	r24, r16
    1bd0:	0d d0       	rcall	.+26     	; 0x1bec <malloc>
    1bd2:	ec 01       	movw	r28, r24
    1bd4:	00 97       	sbiw	r24, 0x00	; 0
    1bd6:	21 f0       	breq	.+8      	; 0x1be0 <calloc+0x28>
    1bd8:	a8 01       	movw	r20, r16
    1bda:	60 e0       	ldi	r22, 0x00	; 0
    1bdc:	70 e0       	ldi	r23, 0x00	; 0
    1bde:	2d d1       	rcall	.+602    	; 0x1e3a <memset>
    1be0:	ce 01       	movw	r24, r28
    1be2:	df 91       	pop	r29
    1be4:	cf 91       	pop	r28
    1be6:	1f 91       	pop	r17
    1be8:	0f 91       	pop	r16
    1bea:	08 95       	ret

00001bec <malloc>:
    1bec:	cf 93       	push	r28
    1bee:	df 93       	push	r29
    1bf0:	82 30       	cpi	r24, 0x02	; 2
    1bf2:	91 05       	cpc	r25, r1
    1bf4:	10 f4       	brcc	.+4      	; 0x1bfa <malloc+0xe>
    1bf6:	82 e0       	ldi	r24, 0x02	; 2
    1bf8:	90 e0       	ldi	r25, 0x00	; 0
    1bfa:	e0 91 ca 02 	lds	r30, 0x02CA
    1bfe:	f0 91 cb 02 	lds	r31, 0x02CB
    1c02:	20 e0       	ldi	r18, 0x00	; 0
    1c04:	30 e0       	ldi	r19, 0x00	; 0
    1c06:	a0 e0       	ldi	r26, 0x00	; 0
    1c08:	b0 e0       	ldi	r27, 0x00	; 0
    1c0a:	30 97       	sbiw	r30, 0x00	; 0
    1c0c:	39 f1       	breq	.+78     	; 0x1c5c <malloc+0x70>
    1c0e:	40 81       	ld	r20, Z
    1c10:	51 81       	ldd	r21, Z+1	; 0x01
    1c12:	48 17       	cp	r20, r24
    1c14:	59 07       	cpc	r21, r25
    1c16:	b8 f0       	brcs	.+46     	; 0x1c46 <malloc+0x5a>
    1c18:	48 17       	cp	r20, r24
    1c1a:	59 07       	cpc	r21, r25
    1c1c:	71 f4       	brne	.+28     	; 0x1c3a <malloc+0x4e>
    1c1e:	82 81       	ldd	r24, Z+2	; 0x02
    1c20:	93 81       	ldd	r25, Z+3	; 0x03
    1c22:	10 97       	sbiw	r26, 0x00	; 0
    1c24:	29 f0       	breq	.+10     	; 0x1c30 <malloc+0x44>
    1c26:	13 96       	adiw	r26, 0x03	; 3
    1c28:	9c 93       	st	X, r25
    1c2a:	8e 93       	st	-X, r24
    1c2c:	12 97       	sbiw	r26, 0x02	; 2
    1c2e:	2c c0       	rjmp	.+88     	; 0x1c88 <malloc+0x9c>
    1c30:	90 93 cb 02 	sts	0x02CB, r25
    1c34:	80 93 ca 02 	sts	0x02CA, r24
    1c38:	27 c0       	rjmp	.+78     	; 0x1c88 <malloc+0x9c>
    1c3a:	21 15       	cp	r18, r1
    1c3c:	31 05       	cpc	r19, r1
    1c3e:	31 f0       	breq	.+12     	; 0x1c4c <malloc+0x60>
    1c40:	42 17       	cp	r20, r18
    1c42:	53 07       	cpc	r21, r19
    1c44:	18 f0       	brcs	.+6      	; 0x1c4c <malloc+0x60>
    1c46:	a9 01       	movw	r20, r18
    1c48:	db 01       	movw	r26, r22
    1c4a:	01 c0       	rjmp	.+2      	; 0x1c4e <malloc+0x62>
    1c4c:	ef 01       	movw	r28, r30
    1c4e:	9a 01       	movw	r18, r20
    1c50:	bd 01       	movw	r22, r26
    1c52:	df 01       	movw	r26, r30
    1c54:	02 80       	ldd	r0, Z+2	; 0x02
    1c56:	f3 81       	ldd	r31, Z+3	; 0x03
    1c58:	e0 2d       	mov	r30, r0
    1c5a:	d7 cf       	rjmp	.-82     	; 0x1c0a <malloc+0x1e>
    1c5c:	21 15       	cp	r18, r1
    1c5e:	31 05       	cpc	r19, r1
    1c60:	f9 f0       	breq	.+62     	; 0x1ca0 <malloc+0xb4>
    1c62:	28 1b       	sub	r18, r24
    1c64:	39 0b       	sbc	r19, r25
    1c66:	24 30       	cpi	r18, 0x04	; 4
    1c68:	31 05       	cpc	r19, r1
    1c6a:	80 f4       	brcc	.+32     	; 0x1c8c <malloc+0xa0>
    1c6c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c6e:	9b 81       	ldd	r25, Y+3	; 0x03
    1c70:	61 15       	cp	r22, r1
    1c72:	71 05       	cpc	r23, r1
    1c74:	21 f0       	breq	.+8      	; 0x1c7e <malloc+0x92>
    1c76:	fb 01       	movw	r30, r22
    1c78:	93 83       	std	Z+3, r25	; 0x03
    1c7a:	82 83       	std	Z+2, r24	; 0x02
    1c7c:	04 c0       	rjmp	.+8      	; 0x1c86 <malloc+0x9a>
    1c7e:	90 93 cb 02 	sts	0x02CB, r25
    1c82:	80 93 ca 02 	sts	0x02CA, r24
    1c86:	fe 01       	movw	r30, r28
    1c88:	32 96       	adiw	r30, 0x02	; 2
    1c8a:	44 c0       	rjmp	.+136    	; 0x1d14 <malloc+0x128>
    1c8c:	fe 01       	movw	r30, r28
    1c8e:	e2 0f       	add	r30, r18
    1c90:	f3 1f       	adc	r31, r19
    1c92:	81 93       	st	Z+, r24
    1c94:	91 93       	st	Z+, r25
    1c96:	22 50       	subi	r18, 0x02	; 2
    1c98:	31 09       	sbc	r19, r1
    1c9a:	39 83       	std	Y+1, r19	; 0x01
    1c9c:	28 83       	st	Y, r18
    1c9e:	3a c0       	rjmp	.+116    	; 0x1d14 <malloc+0x128>
    1ca0:	20 91 c8 02 	lds	r18, 0x02C8
    1ca4:	30 91 c9 02 	lds	r19, 0x02C9
    1ca8:	23 2b       	or	r18, r19
    1caa:	41 f4       	brne	.+16     	; 0x1cbc <malloc+0xd0>
    1cac:	20 91 02 02 	lds	r18, 0x0202
    1cb0:	30 91 03 02 	lds	r19, 0x0203
    1cb4:	30 93 c9 02 	sts	0x02C9, r19
    1cb8:	20 93 c8 02 	sts	0x02C8, r18
    1cbc:	20 91 00 02 	lds	r18, 0x0200
    1cc0:	30 91 01 02 	lds	r19, 0x0201
    1cc4:	21 15       	cp	r18, r1
    1cc6:	31 05       	cpc	r19, r1
    1cc8:	41 f4       	brne	.+16     	; 0x1cda <malloc+0xee>
    1cca:	2d b7       	in	r18, 0x3d	; 61
    1ccc:	3e b7       	in	r19, 0x3e	; 62
    1cce:	40 91 04 02 	lds	r20, 0x0204
    1cd2:	50 91 05 02 	lds	r21, 0x0205
    1cd6:	24 1b       	sub	r18, r20
    1cd8:	35 0b       	sbc	r19, r21
    1cda:	e0 91 c8 02 	lds	r30, 0x02C8
    1cde:	f0 91 c9 02 	lds	r31, 0x02C9
    1ce2:	e2 17       	cp	r30, r18
    1ce4:	f3 07       	cpc	r31, r19
    1ce6:	a0 f4       	brcc	.+40     	; 0x1d10 <malloc+0x124>
    1ce8:	2e 1b       	sub	r18, r30
    1cea:	3f 0b       	sbc	r19, r31
    1cec:	28 17       	cp	r18, r24
    1cee:	39 07       	cpc	r19, r25
    1cf0:	78 f0       	brcs	.+30     	; 0x1d10 <malloc+0x124>
    1cf2:	ac 01       	movw	r20, r24
    1cf4:	4e 5f       	subi	r20, 0xFE	; 254
    1cf6:	5f 4f       	sbci	r21, 0xFF	; 255
    1cf8:	24 17       	cp	r18, r20
    1cfa:	35 07       	cpc	r19, r21
    1cfc:	48 f0       	brcs	.+18     	; 0x1d10 <malloc+0x124>
    1cfe:	4e 0f       	add	r20, r30
    1d00:	5f 1f       	adc	r21, r31
    1d02:	50 93 c9 02 	sts	0x02C9, r21
    1d06:	40 93 c8 02 	sts	0x02C8, r20
    1d0a:	81 93       	st	Z+, r24
    1d0c:	91 93       	st	Z+, r25
    1d0e:	02 c0       	rjmp	.+4      	; 0x1d14 <malloc+0x128>
    1d10:	e0 e0       	ldi	r30, 0x00	; 0
    1d12:	f0 e0       	ldi	r31, 0x00	; 0
    1d14:	cf 01       	movw	r24, r30
    1d16:	df 91       	pop	r29
    1d18:	cf 91       	pop	r28
    1d1a:	08 95       	ret

00001d1c <free>:
    1d1c:	cf 93       	push	r28
    1d1e:	df 93       	push	r29
    1d20:	00 97       	sbiw	r24, 0x00	; 0
    1d22:	09 f4       	brne	.+2      	; 0x1d26 <free+0xa>
    1d24:	87 c0       	rjmp	.+270    	; 0x1e34 <free+0x118>
    1d26:	fc 01       	movw	r30, r24
    1d28:	32 97       	sbiw	r30, 0x02	; 2
    1d2a:	13 82       	std	Z+3, r1	; 0x03
    1d2c:	12 82       	std	Z+2, r1	; 0x02
    1d2e:	c0 91 ca 02 	lds	r28, 0x02CA
    1d32:	d0 91 cb 02 	lds	r29, 0x02CB
    1d36:	20 97       	sbiw	r28, 0x00	; 0
    1d38:	81 f4       	brne	.+32     	; 0x1d5a <free+0x3e>
    1d3a:	20 81       	ld	r18, Z
    1d3c:	31 81       	ldd	r19, Z+1	; 0x01
    1d3e:	28 0f       	add	r18, r24
    1d40:	39 1f       	adc	r19, r25
    1d42:	80 91 c8 02 	lds	r24, 0x02C8
    1d46:	90 91 c9 02 	lds	r25, 0x02C9
    1d4a:	82 17       	cp	r24, r18
    1d4c:	93 07       	cpc	r25, r19
    1d4e:	79 f5       	brne	.+94     	; 0x1dae <free+0x92>
    1d50:	f0 93 c9 02 	sts	0x02C9, r31
    1d54:	e0 93 c8 02 	sts	0x02C8, r30
    1d58:	6d c0       	rjmp	.+218    	; 0x1e34 <free+0x118>
    1d5a:	de 01       	movw	r26, r28
    1d5c:	20 e0       	ldi	r18, 0x00	; 0
    1d5e:	30 e0       	ldi	r19, 0x00	; 0
    1d60:	ae 17       	cp	r26, r30
    1d62:	bf 07       	cpc	r27, r31
    1d64:	50 f4       	brcc	.+20     	; 0x1d7a <free+0x5e>
    1d66:	12 96       	adiw	r26, 0x02	; 2
    1d68:	4d 91       	ld	r20, X+
    1d6a:	5c 91       	ld	r21, X
    1d6c:	13 97       	sbiw	r26, 0x03	; 3
    1d6e:	9d 01       	movw	r18, r26
    1d70:	41 15       	cp	r20, r1
    1d72:	51 05       	cpc	r21, r1
    1d74:	09 f1       	breq	.+66     	; 0x1db8 <free+0x9c>
    1d76:	da 01       	movw	r26, r20
    1d78:	f3 cf       	rjmp	.-26     	; 0x1d60 <free+0x44>
    1d7a:	b3 83       	std	Z+3, r27	; 0x03
    1d7c:	a2 83       	std	Z+2, r26	; 0x02
    1d7e:	40 81       	ld	r20, Z
    1d80:	51 81       	ldd	r21, Z+1	; 0x01
    1d82:	84 0f       	add	r24, r20
    1d84:	95 1f       	adc	r25, r21
    1d86:	8a 17       	cp	r24, r26
    1d88:	9b 07       	cpc	r25, r27
    1d8a:	71 f4       	brne	.+28     	; 0x1da8 <free+0x8c>
    1d8c:	8d 91       	ld	r24, X+
    1d8e:	9c 91       	ld	r25, X
    1d90:	11 97       	sbiw	r26, 0x01	; 1
    1d92:	84 0f       	add	r24, r20
    1d94:	95 1f       	adc	r25, r21
    1d96:	02 96       	adiw	r24, 0x02	; 2
    1d98:	91 83       	std	Z+1, r25	; 0x01
    1d9a:	80 83       	st	Z, r24
    1d9c:	12 96       	adiw	r26, 0x02	; 2
    1d9e:	8d 91       	ld	r24, X+
    1da0:	9c 91       	ld	r25, X
    1da2:	13 97       	sbiw	r26, 0x03	; 3
    1da4:	93 83       	std	Z+3, r25	; 0x03
    1da6:	82 83       	std	Z+2, r24	; 0x02
    1da8:	21 15       	cp	r18, r1
    1daa:	31 05       	cpc	r19, r1
    1dac:	29 f4       	brne	.+10     	; 0x1db8 <free+0x9c>
    1dae:	f0 93 cb 02 	sts	0x02CB, r31
    1db2:	e0 93 ca 02 	sts	0x02CA, r30
    1db6:	3e c0       	rjmp	.+124    	; 0x1e34 <free+0x118>
    1db8:	d9 01       	movw	r26, r18
    1dba:	13 96       	adiw	r26, 0x03	; 3
    1dbc:	fc 93       	st	X, r31
    1dbe:	ee 93       	st	-X, r30
    1dc0:	12 97       	sbiw	r26, 0x02	; 2
    1dc2:	4d 91       	ld	r20, X+
    1dc4:	5d 91       	ld	r21, X+
    1dc6:	a4 0f       	add	r26, r20
    1dc8:	b5 1f       	adc	r27, r21
    1dca:	ea 17       	cp	r30, r26
    1dcc:	fb 07       	cpc	r31, r27
    1dce:	79 f4       	brne	.+30     	; 0x1dee <free+0xd2>
    1dd0:	80 81       	ld	r24, Z
    1dd2:	91 81       	ldd	r25, Z+1	; 0x01
    1dd4:	84 0f       	add	r24, r20
    1dd6:	95 1f       	adc	r25, r21
    1dd8:	02 96       	adiw	r24, 0x02	; 2
    1dda:	d9 01       	movw	r26, r18
    1ddc:	11 96       	adiw	r26, 0x01	; 1
    1dde:	9c 93       	st	X, r25
    1de0:	8e 93       	st	-X, r24
    1de2:	82 81       	ldd	r24, Z+2	; 0x02
    1de4:	93 81       	ldd	r25, Z+3	; 0x03
    1de6:	13 96       	adiw	r26, 0x03	; 3
    1de8:	9c 93       	st	X, r25
    1dea:	8e 93       	st	-X, r24
    1dec:	12 97       	sbiw	r26, 0x02	; 2
    1dee:	e0 e0       	ldi	r30, 0x00	; 0
    1df0:	f0 e0       	ldi	r31, 0x00	; 0
    1df2:	8a 81       	ldd	r24, Y+2	; 0x02
    1df4:	9b 81       	ldd	r25, Y+3	; 0x03
    1df6:	00 97       	sbiw	r24, 0x00	; 0
    1df8:	19 f0       	breq	.+6      	; 0x1e00 <free+0xe4>
    1dfa:	fe 01       	movw	r30, r28
    1dfc:	ec 01       	movw	r28, r24
    1dfe:	f9 cf       	rjmp	.-14     	; 0x1df2 <free+0xd6>
    1e00:	ce 01       	movw	r24, r28
    1e02:	02 96       	adiw	r24, 0x02	; 2
    1e04:	28 81       	ld	r18, Y
    1e06:	39 81       	ldd	r19, Y+1	; 0x01
    1e08:	82 0f       	add	r24, r18
    1e0a:	93 1f       	adc	r25, r19
    1e0c:	20 91 c8 02 	lds	r18, 0x02C8
    1e10:	30 91 c9 02 	lds	r19, 0x02C9
    1e14:	28 17       	cp	r18, r24
    1e16:	39 07       	cpc	r19, r25
    1e18:	69 f4       	brne	.+26     	; 0x1e34 <free+0x118>
    1e1a:	30 97       	sbiw	r30, 0x00	; 0
    1e1c:	29 f4       	brne	.+10     	; 0x1e28 <free+0x10c>
    1e1e:	10 92 cb 02 	sts	0x02CB, r1
    1e22:	10 92 ca 02 	sts	0x02CA, r1
    1e26:	02 c0       	rjmp	.+4      	; 0x1e2c <free+0x110>
    1e28:	13 82       	std	Z+3, r1	; 0x03
    1e2a:	12 82       	std	Z+2, r1	; 0x02
    1e2c:	d0 93 c9 02 	sts	0x02C9, r29
    1e30:	c0 93 c8 02 	sts	0x02C8, r28
    1e34:	df 91       	pop	r29
    1e36:	cf 91       	pop	r28
    1e38:	08 95       	ret

00001e3a <memset>:
    1e3a:	dc 01       	movw	r26, r24
    1e3c:	01 c0       	rjmp	.+2      	; 0x1e40 <memset+0x6>
    1e3e:	6d 93       	st	X+, r22
    1e40:	41 50       	subi	r20, 0x01	; 1
    1e42:	50 40       	sbci	r21, 0x00	; 0
    1e44:	e0 f7       	brcc	.-8      	; 0x1e3e <memset+0x4>
    1e46:	08 95       	ret

00001e48 <_exit>:
    1e48:	f8 94       	cli

00001e4a <__stop_program>:
    1e4a:	ff cf       	rjmp	.-2      	; 0x1e4a <__stop_program>
