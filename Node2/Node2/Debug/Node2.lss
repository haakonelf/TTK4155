
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800200  00000d38  00000dcc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d38  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800242  00800242  00000e0e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e0e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000180  00000000  00000000  00000e6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001315  00000000  00000000  00000fea  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008f2  00000000  00000000  000022ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000aeb  00000000  00000000  00002bf1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000368  00000000  00000000  000036dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000477  00000000  00000000  00003a44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000008e1  00000000  00000000  00003ebb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000110  00000000  00000000  0000479c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e3       	ldi	r30, 0x38	; 56
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a2 34       	cpi	r26, 0x42	; 66
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a2 e4       	ldi	r26, 0x42	; 66
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ac 34       	cpi	r26, 0x4C	; 76
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	f2 d0       	rcall	.+484    	; 0x304 <main>
 120:	09 c6       	rjmp	.+3090   	; 0xd34 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <can_init>:
		mcp_write(tx_buffer + MCP_TXB_OFFSET + i, msg->data[i]);
	}
	
	mcp_requestToSend(0x80 + (tx_buffer >> 4) - 0x02); //Convert TXBnCTRL address to RTS-code
	
}
 124:	ec d0       	rcall	.+472    	; 0x2fe <mcp_init>
 126:	4f ef       	ldi	r20, 0xFF	; 255
 128:	60 e6       	ldi	r22, 0x60	; 96
 12a:	80 e6       	ldi	r24, 0x60	; 96
 12c:	d4 d0       	rcall	.+424    	; 0x2d6 <mcp_bitModify>
 12e:	4f ef       	ldi	r20, 0xFF	; 255
 130:	60 e6       	ldi	r22, 0x60	; 96
 132:	80 e7       	ldi	r24, 0x70	; 112
 134:	d0 d0       	rcall	.+416    	; 0x2d6 <mcp_bitModify>
 136:	43 e0       	ldi	r20, 0x03	; 3
 138:	63 e0       	ldi	r22, 0x03	; 3
 13a:	8e e2       	ldi	r24, 0x2E	; 46
 13c:	cc d0       	rcall	.+408    	; 0x2d6 <mcp_bitModify>
 13e:	40 e0       	ldi	r20, 0x00	; 0
 140:	60 ee       	ldi	r22, 0xE0	; 224
 142:	8f e0       	ldi	r24, 0x0F	; 15
 144:	c8 c0       	rjmp	.+400    	; 0x2d6 <mcp_bitModify>
 146:	08 95       	ret

00000148 <can_pollInterrupt>:
uint8_t can_pollInterrupt(void){
 148:	cf 93       	push	r28
	if(PINA | (1 << PA0)){ //Check for interrupts
 14a:	80 b1       	in	r24, 0x00	; 0
		uint8_t interrupt_register = mcp_read(MCP_CANINTF);
 14c:	8c e2       	ldi	r24, 0x2C	; 44
 14e:	b2 d0       	rcall	.+356    	; 0x2b4 <mcp_read>
		//Finds the register that sent an interrupt signal
		if(interrupt_register & MCP_RX0IF){
 150:	80 ff       	sbrs	r24, 0
 152:	06 c0       	rjmp	.+12     	; 0x160 <can_pollInterrupt+0x18>
			mcp_bitModify(MCP_CANINTF, MCP_RX0IF, 0xFF);
 154:	4f ef       	ldi	r20, 0xFF	; 255
 156:	61 e0       	ldi	r22, 0x01	; 1
 158:	8c e2       	ldi	r24, 0x2C	; 44
 15a:	bd d0       	rcall	.+378    	; 0x2d6 <mcp_bitModify>
			return MCP_RXB0CTRL;
 15c:	c0 e6       	ldi	r28, 0x60	; 96
 15e:	11 c0       	rjmp	.+34     	; 0x182 <can_pollInterrupt+0x3a>
		}
		
		else if(interrupt_register & MCP_RX1IF){
 160:	c8 2f       	mov	r28, r24
 162:	c2 70       	andi	r28, 0x02	; 2
 164:	81 ff       	sbrs	r24, 1
 166:	06 c0       	rjmp	.+12     	; 0x174 <can_pollInterrupt+0x2c>
			mcp_bitModify(MCP_CANINTF, MCP_RX1IF, 0xFF);
 168:	4f ef       	ldi	r20, 0xFF	; 255
 16a:	62 e0       	ldi	r22, 0x02	; 2
 16c:	8c e2       	ldi	r24, 0x2C	; 44
 16e:	b3 d0       	rcall	.+358    	; 0x2d6 <mcp_bitModify>
			return MCP_RXB1CTRL;
 170:	c0 e7       	ldi	r28, 0x70	; 112
 172:	07 c0       	rjmp	.+14     	; 0x182 <can_pollInterrupt+0x3a>
		}	
	}
	
	printf("No interrupt detected!");
 174:	26 e0       	ldi	r18, 0x06	; 6
 176:	32 e0       	ldi	r19, 0x02	; 2
 178:	3f 93       	push	r19
 17a:	2f 93       	push	r18
 17c:	c1 d1       	rcall	.+898    	; 0x500 <printf>
	return 0x00;
 17e:	0f 90       	pop	r0
 180:	0f 90       	pop	r0
}
 182:	8c 2f       	mov	r24, r28
 184:	cf 91       	pop	r28
 186:	08 95       	ret

00000188 <can_read>:
	mcp_bitModify(MCP_CANCTRL, MCP_CANCTRL_MASK, MCP_NORMAL_MODE);
	
	
}

can_message can_read(void){
 188:	8f 92       	push	r8
 18a:	9f 92       	push	r9
 18c:	af 92       	push	r10
 18e:	bf 92       	push	r11
 190:	cf 92       	push	r12
 192:	df 92       	push	r13
 194:	ef 92       	push	r14
 196:	ff 92       	push	r15
 198:	0f 93       	push	r16
 19a:	1f 93       	push	r17
 19c:	cf 93       	push	r28
 19e:	df 93       	push	r29
 1a0:	cd b7       	in	r28, 0x3d	; 61
 1a2:	de b7       	in	r29, 0x3e	; 62
 1a4:	2b 97       	sbiw	r28, 0x0b	; 11
 1a6:	0f b6       	in	r0, 0x3f	; 63
 1a8:	f8 94       	cli
 1aa:	de bf       	out	0x3e, r29	; 62
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	cd bf       	out	0x3d, r28	; 61
 1b0:	6c 01       	movw	r12, r24
	can_message msg;
	uint8_t bufferSelect = can_pollInterrupt();
 1b2:	ca df       	rcall	.-108    	; 0x148 <can_pollInterrupt>
 1b4:	18 2f       	mov	r17, r24
	/*
	if(!bufferSelect){
		printf("No interrupt detected!");
	}
	*/
	msg.id = (mcp_read(bufferSelect + MCP_RXSIDH_OFFSET) << 3) | (mcp_read(bufferSelect + MCP_RXSIDL_OFFSET) >> 5);
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	81 0f       	add	r24, r17
 1ba:	7c d0       	rcall	.+248    	; 0x2b4 <mcp_read>
 1bc:	a8 2e       	mov	r10, r24
 1be:	82 e0       	ldi	r24, 0x02	; 2
 1c0:	81 0f       	add	r24, r17
 1c2:	78 d0       	rcall	.+240    	; 0x2b4 <mcp_read>
 1c4:	82 95       	swap	r24
 1c6:	86 95       	lsr	r24
 1c8:	87 70       	andi	r24, 0x07	; 7
 1ca:	b1 2c       	mov	r11, r1
 1cc:	aa 0c       	add	r10, r10
 1ce:	bb 1c       	adc	r11, r11
 1d0:	aa 0c       	add	r10, r10
 1d2:	bb 1c       	adc	r11, r11
 1d4:	aa 0c       	add	r10, r10
 1d6:	bb 1c       	adc	r11, r11
 1d8:	a8 2a       	or	r10, r24
	msg.length = mcp_read(bufferSelect + MCP_RXBDLC_OFFSET) & MCP_RXBDLC_MASK;
 1da:	85 e0       	ldi	r24, 0x05	; 5
 1dc:	81 0f       	add	r24, r17
 1de:	6a d0       	rcall	.+212    	; 0x2b4 <mcp_read>
 1e0:	8f 70       	andi	r24, 0x0F	; 15
 1e2:	88 2e       	mov	r8, r24
	
	for(int i = 0; i < msg.length; i++){
 1e4:	a1 f0       	breq	.+40     	; 0x20e <can_read+0x86>
 1e6:	0f 2e       	mov	r0, r31
 1e8:	f6 e0       	ldi	r31, 0x06	; 6
 1ea:	9f 2e       	mov	r9, r31
 1ec:	f0 2d       	mov	r31, r0
 1ee:	91 0e       	add	r9, r17
 1f0:	8e 01       	movw	r16, r28
 1f2:	0c 5f       	subi	r16, 0xFC	; 252
 1f4:	1f 4f       	sbci	r17, 0xFF	; 255
 1f6:	78 01       	movw	r14, r16
 1f8:	e8 0e       	add	r14, r24
 1fa:	f1 1c       	adc	r15, r1
		msg.data[i] = mcp_read(bufferSelect + MCP_RXB_OFFSET + i);
 1fc:	89 2d       	mov	r24, r9
 1fe:	5a d0       	rcall	.+180    	; 0x2b4 <mcp_read>
 200:	f8 01       	movw	r30, r16
 202:	81 93       	st	Z+, r24
 204:	8f 01       	movw	r16, r30
 206:	93 94       	inc	r9
	}
	*/
	msg.id = (mcp_read(bufferSelect + MCP_RXSIDH_OFFSET) << 3) | (mcp_read(bufferSelect + MCP_RXSIDL_OFFSET) >> 5);
	msg.length = mcp_read(bufferSelect + MCP_RXBDLC_OFFSET) & MCP_RXBDLC_MASK;
	
	for(int i = 0; i < msg.length; i++){
 208:	ee 15       	cp	r30, r14
 20a:	ff 05       	cpc	r31, r15
 20c:	b9 f7       	brne	.-18     	; 0x1fc <can_read+0x74>
		msg.data[i] = mcp_read(bufferSelect + MCP_RXB_OFFSET + i);
	}
	
	mcp_bitModify(MCP_CANINTF, MCP_RX0IF, 0);
 20e:	40 e0       	ldi	r20, 0x00	; 0
 210:	61 e0       	ldi	r22, 0x01	; 1
 212:	8c e2       	ldi	r24, 0x2C	; 44
 214:	60 d0       	rcall	.+192    	; 0x2d6 <mcp_bitModify>
	return msg;
 216:	ba 82       	std	Y+2, r11	; 0x02
 218:	a9 82       	std	Y+1, r10	; 0x01
 21a:	8b 82       	std	Y+3, r8	; 0x03
 21c:	8b e0       	ldi	r24, 0x0B	; 11
 21e:	fe 01       	movw	r30, r28
 220:	31 96       	adiw	r30, 0x01	; 1
 222:	d6 01       	movw	r26, r12
 224:	01 90       	ld	r0, Z+
 226:	0d 92       	st	X+, r0
 228:	8a 95       	dec	r24
 22a:	e1 f7       	brne	.-8      	; 0x224 <can_read+0x9c>
}
 22c:	c6 01       	movw	r24, r12
 22e:	2b 96       	adiw	r28, 0x0b	; 11
 230:	0f b6       	in	r0, 0x3f	; 63
 232:	f8 94       	cli
 234:	de bf       	out	0x3e, r29	; 62
 236:	0f be       	out	0x3f, r0	; 63
 238:	cd bf       	out	0x3d, r28	; 61
 23a:	df 91       	pop	r29
 23c:	cf 91       	pop	r28
 23e:	1f 91       	pop	r17
 240:	0f 91       	pop	r16
 242:	ff 90       	pop	r15
 244:	ef 90       	pop	r14
 246:	df 90       	pop	r13
 248:	cf 90       	pop	r12
 24a:	bf 90       	pop	r11
 24c:	af 90       	pop	r10
 24e:	9f 90       	pop	r9
 250:	8f 90       	pop	r8
 252:	08 95       	ret

00000254 <JOY_new_joystick>:
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	cd b7       	in	r28, 0x3d	; 61
 25a:	de b7       	in	r29, 0x3e	; 62
 25c:	60 97       	sbiw	r28, 0x10	; 16
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	f8 94       	cli
 262:	de bf       	out	0x3e, r29	; 62
 264:	0f be       	out	0x3f, r0	; 63
 266:	cd bf       	out	0x3d, r28	; 61
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	9a 87       	std	Y+10, r25	; 0x0a
 26c:	89 87       	std	Y+9, r24	; 0x09
 26e:	70 e0       	ldi	r23, 0x00	; 0
 270:	7c 87       	std	Y+12, r23	; 0x0c
 272:	6b 87       	std	Y+11, r22	; 0x0b
 274:	50 e0       	ldi	r21, 0x00	; 0
 276:	5e 87       	std	Y+14, r21	; 0x0e
 278:	4d 87       	std	Y+13, r20	; 0x0d
 27a:	30 e0       	ldi	r19, 0x00	; 0
 27c:	38 8b       	std	Y+16, r19	; 0x10
 27e:	2f 87       	std	Y+15, r18	; 0x0f
 280:	88 e0       	ldi	r24, 0x08	; 8
 282:	fe 01       	movw	r30, r28
 284:	39 96       	adiw	r30, 0x09	; 9
 286:	de 01       	movw	r26, r28
 288:	11 96       	adiw	r26, 0x01	; 1
 28a:	01 90       	ld	r0, Z+
 28c:	0d 92       	st	X+, r0
 28e:	8a 95       	dec	r24
 290:	e1 f7       	brne	.-8      	; 0x28a <JOY_new_joystick+0x36>
 292:	29 81       	ldd	r18, Y+1	; 0x01
 294:	3a 81       	ldd	r19, Y+2	; 0x02
 296:	4b 81       	ldd	r20, Y+3	; 0x03
 298:	5c 81       	ldd	r21, Y+4	; 0x04
 29a:	6d 81       	ldd	r22, Y+5	; 0x05
 29c:	7e 81       	ldd	r23, Y+6	; 0x06
 29e:	8f 81       	ldd	r24, Y+7	; 0x07
 2a0:	98 85       	ldd	r25, Y+8	; 0x08
 2a2:	60 96       	adiw	r28, 0x10	; 16
 2a4:	0f b6       	in	r0, 0x3f	; 63
 2a6:	f8 94       	cli
 2a8:	de bf       	out	0x3e, r29	; 62
 2aa:	0f be       	out	0x3f, r0	; 63
 2ac:	cd bf       	out	0x3d, r28	; 61
 2ae:	df 91       	pop	r29
 2b0:	cf 91       	pop	r28
 2b2:	08 95       	ret

000002b4 <mcp_read>:
	SPI_transmit(MCP_READ_STATUS);
	uint8_t status = SPI_transmit(0x00);
	PORTB |= (1<< MCP_CS);
	
	return status;
}
 2b4:	cf 93       	push	r28
 2b6:	c8 2f       	mov	r28, r24
 2b8:	28 98       	cbi	0x05, 0	; 5
 2ba:	83 e0       	ldi	r24, 0x03	; 3
 2bc:	a3 d0       	rcall	.+326    	; 0x404 <SPI_transmit>
 2be:	8c 2f       	mov	r24, r28
 2c0:	a1 d0       	rcall	.+322    	; 0x404 <SPI_transmit>
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	9f d0       	rcall	.+318    	; 0x404 <SPI_transmit>
 2c6:	28 9a       	sbi	0x05, 0	; 5
 2c8:	cf 91       	pop	r28
 2ca:	08 95       	ret

000002cc <mcp_reset>:
 2cc:	28 98       	cbi	0x05, 0	; 5
 2ce:	80 ec       	ldi	r24, 0xC0	; 192
 2d0:	99 d0       	rcall	.+306    	; 0x404 <SPI_transmit>
 2d2:	28 9a       	sbi	0x05, 0	; 5
 2d4:	08 95       	ret

000002d6 <mcp_bitModify>:
 2d6:	1f 93       	push	r17
 2d8:	cf 93       	push	r28
 2da:	df 93       	push	r29
 2dc:	18 2f       	mov	r17, r24
 2de:	d6 2f       	mov	r29, r22
 2e0:	c4 2f       	mov	r28, r20
 2e2:	28 98       	cbi	0x05, 0	; 5
 2e4:	85 e0       	ldi	r24, 0x05	; 5
 2e6:	8e d0       	rcall	.+284    	; 0x404 <SPI_transmit>
 2e8:	81 2f       	mov	r24, r17
 2ea:	8c d0       	rcall	.+280    	; 0x404 <SPI_transmit>
 2ec:	8d 2f       	mov	r24, r29
 2ee:	8a d0       	rcall	.+276    	; 0x404 <SPI_transmit>
 2f0:	8c 2f       	mov	r24, r28
 2f2:	88 d0       	rcall	.+272    	; 0x404 <SPI_transmit>
 2f4:	28 9a       	sbi	0x05, 0	; 5
 2f6:	df 91       	pop	r29
 2f8:	cf 91       	pop	r28
 2fa:	1f 91       	pop	r17
 2fc:	08 95       	ret

000002fe <mcp_init>:

void mcp_init(void){
	SPI_masterInit();
 2fe:	7c d0       	rcall	.+248    	; 0x3f8 <SPI_masterInit>
	mcp_reset();
 300:	e5 cf       	rjmp	.-54     	; 0x2cc <mcp_reset>
 302:	08 95       	ret

00000304 <main>:
#include "mcp.h"
#include "mcp_defines.h"
#include "can.h"

int main(void)
{
 304:	cf 93       	push	r28
 306:	df 93       	push	r29
 308:	cd b7       	in	r28, 0x3d	; 61
 30a:	de b7       	in	r29, 0x3e	; 62
 30c:	63 97       	sbiw	r28, 0x13	; 19
 30e:	0f b6       	in	r0, 0x3f	; 63
 310:	f8 94       	cli
 312:	de bf       	out	0x3e, r29	; 62
 314:	0f be       	out	0x3f, r0	; 63
 316:	cd bf       	out	0x3d, r28	; 61
	sei();
 318:	78 94       	sei
	USART_Init(MYUBRR);
 31a:	87 e6       	ldi	r24, 0x67	; 103
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	78 d0       	rcall	.+240    	; 0x410 <USART_Init>
	fdevopen((int (*)(char,  struct __file *))USART_Transmit, (int (*)(struct __file *))USART_Receive);
 320:	6f e1       	ldi	r22, 0x1F	; 31
 322:	72 e0       	ldi	r23, 0x02	; 2
 324:	87 e1       	ldi	r24, 0x17	; 23
 326:	92 e0       	ldi	r25, 0x02	; 2
 328:	a1 d0       	rcall	.+322    	; 0x46c <fdevopen>
	printf("UART setup done\n");
 32a:	8d e1       	ldi	r24, 0x1D	; 29
 32c:	92 e0       	ldi	r25, 0x02	; 2
 32e:	f9 d0       	rcall	.+498    	; 0x522 <puts>
	can_init();
 330:	f9 de       	rcall	.-526    	; 0x124 <can_init>
	printf("Initialization done\n");
 332:	8d e2       	ldi	r24, 0x2D	; 45
 334:	92 e0       	ldi	r25, 0x02	; 2
 336:	f5 d0       	rcall	.+490    	; 0x522 <puts>
	pwm_init();
 338:	1c d0       	rcall	.+56     	; 0x372 <pwm_init>
	{
		//pwm_test();
		
		
		
		if(can_pollInterrupt()){
 33a:	06 df       	rcall	.-500    	; 0x148 <can_pollInterrupt>
 33c:	88 23       	and	r24, r24
 33e:	19 f0       	breq	.+6      	; 0x346 <main+0x42>
			msg = can_read();
 340:	ce 01       	movw	r24, r28
 342:	09 96       	adiw	r24, 0x09	; 9
 344:	21 df       	rcall	.-446    	; 0x188 <can_read>
			
		}
		if(msg.id == MCP_JOYSTICK_MESSAGE){
 346:	89 85       	ldd	r24, Y+9	; 0x09
 348:	9a 85       	ldd	r25, Y+10	; 0x0a
 34a:	85 35       	cpi	r24, 0x55	; 85
 34c:	91 05       	cpc	r25, r1
 34e:	a9 f7       	brne	.-22     	; 0x33a <main+0x36>
			joy = JOY_new_joystick(msg.data[0], msg.data[1], msg.data[2], msg.data[3]);
 350:	2f 85       	ldd	r18, Y+15	; 0x0f
 352:	4e 85       	ldd	r20, Y+14	; 0x0e
 354:	6d 85       	ldd	r22, Y+13	; 0x0d
 356:	8c 85       	ldd	r24, Y+12	; 0x0c
 358:	7d df       	rcall	.-262    	; 0x254 <JOY_new_joystick>
 35a:	29 83       	std	Y+1, r18	; 0x01
 35c:	3a 83       	std	Y+2, r19	; 0x02
 35e:	4b 83       	std	Y+3, r20	; 0x03
 360:	5c 83       	std	Y+4, r21	; 0x04
 362:	6d 83       	std	Y+5, r22	; 0x05
 364:	7e 83       	std	Y+6, r23	; 0x06
 366:	8f 83       	std	Y+7, r24	; 0x07
 368:	98 87       	std	Y+8, r25	; 0x08
			pwm_set_servo(joy.x);
 36a:	89 81       	ldd	r24, Y+1	; 0x01
 36c:	9a 81       	ldd	r25, Y+2	; 0x02
 36e:	19 d0       	rcall	.+50     	; 0x3a2 <pwm_set_servo>
 370:	e4 cf       	rjmp	.-56     	; 0x33a <main+0x36>

00000372 <pwm_init>:
	OCR4A = 2/1000*F_CPU/prescaler;
	*/
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
 372:	6b 9a       	sbi	0x0d, 3	; 13
 374:	e0 e9       	ldi	r30, 0x90	; 144
 376:	f0 e0       	ldi	r31, 0x00	; 0
 378:	80 81       	ld	r24, Z
 37a:	8e 7b       	andi	r24, 0xBE	; 190
 37c:	80 83       	st	Z, r24
 37e:	80 81       	ld	r24, Z
 380:	82 68       	ori	r24, 0x82	; 130
 382:	80 83       	st	Z, r24
 384:	e1 e9       	ldi	r30, 0x91	; 145
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	80 81       	ld	r24, Z
 38a:	8d 61       	ori	r24, 0x1D	; 29
 38c:	80 83       	st	Z, r24
 38e:	80 81       	ld	r24, Z
 390:	8d 7f       	andi	r24, 0xFD	; 253
 392:	80 83       	st	Z, r24
 394:	88 e3       	ldi	r24, 0x38	; 56
 396:	91 e0       	ldi	r25, 0x01	; 1
 398:	90 93 97 00 	sts	0x0097, r25
 39c:	80 93 96 00 	sts	0x0096, r24
 3a0:	08 95       	ret

000003a2 <pwm_set_servo>:
}

void pwm_set_servo(unsigned int val){
	//printf("Val: %d\n", val);
	val = (val*19)/255 + servo_min;
 3a2:	43 e1       	ldi	r20, 0x13	; 19
 3a4:	48 9f       	mul	r20, r24
 3a6:	90 01       	movw	r18, r0
 3a8:	49 9f       	mul	r20, r25
 3aa:	30 0d       	add	r19, r0
 3ac:	11 24       	eor	r1, r1
 3ae:	a1 e8       	ldi	r26, 0x81	; 129
 3b0:	b0 e8       	ldi	r27, 0x80	; 128
 3b2:	4d d0       	rcall	.+154    	; 0x44e <__umulhisi3>
 3b4:	88 0f       	add	r24, r24
 3b6:	89 2f       	mov	r24, r25
 3b8:	88 1f       	adc	r24, r24
 3ba:	99 0b       	sbc	r25, r25
 3bc:	91 95       	neg	r25
	//printf("Val: %d\n", val);
	if((val <= (servo_mid + 1)) && (val >= (servo_mid - 1))){
 3be:	9c 01       	movw	r18, r24
 3c0:	2b 50       	subi	r18, 0x0B	; 11
 3c2:	31 09       	sbc	r19, r1
 3c4:	23 30       	cpi	r18, 0x03	; 3
 3c6:	31 05       	cpc	r19, r1
 3c8:	38 f4       	brcc	.+14     	; 0x3d8 <pwm_set_servo+0x36>
	OCR4A = 2/1000*F_CPU/prescaler;
	*/
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
 3ca:	89 e1       	ldi	r24, 0x19	; 25
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	90 93 99 00 	sts	0x0099, r25
 3d2:	80 93 98 00 	sts	0x0098, r24
 3d6:	08 95       	ret
	if((val <= (servo_mid + 1)) && (val >= (servo_mid - 1))){
		//printf("first");
		pwm_set_value(servo_mid);
	}
	
	else if((val >= servo_min) && (val <= servo_max)){
 3d8:	89 31       	cpi	r24, 0x19	; 25
 3da:	91 05       	cpc	r25, r1
 3dc:	30 f4       	brcc	.+12     	; 0x3ea <pwm_set_servo+0x48>
	OCR3A = val;
}

void pwm_set_servo(unsigned int val){
	//printf("Val: %d\n", val);
	val = (val*19)/255 + servo_min;
 3de:	0d 96       	adiw	r24, 0x0d	; 13
	OCR4A = 2/1000*F_CPU/prescaler;
	*/
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
 3e0:	90 93 99 00 	sts	0x0099, r25
 3e4:	80 93 98 00 	sts	0x0098, r24
 3e8:	08 95       	ret
 3ea:	89 e1       	ldi	r24, 0x19	; 25
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	90 93 99 00 	sts	0x0099, r25
 3f2:	80 93 98 00 	sts	0x0098, r24
 3f6:	08 95       	ret

000003f8 <SPI_masterInit>:
 3f8:	87 e0       	ldi	r24, 0x07	; 7
 3fa:	84 b9       	out	0x04, r24	; 4
 3fc:	23 98       	cbi	0x04, 3	; 4
 3fe:	81 e5       	ldi	r24, 0x51	; 81
 400:	8c bd       	out	0x2c, r24	; 44
 402:	08 95       	ret

00000404 <SPI_transmit>:
 404:	8e bd       	out	0x2e, r24	; 46
 406:	0d b4       	in	r0, 0x2d	; 45
 408:	07 fe       	sbrs	r0, 7
 40a:	fd cf       	rjmp	.-6      	; 0x406 <SPI_transmit+0x2>
 40c:	8e b5       	in	r24, 0x2e	; 46
 40e:	08 95       	ret

00000410 <USART_Init>:
 410:	90 93 c5 00 	sts	0x00C5, r25
 414:	80 93 c4 00 	sts	0x00C4, r24
 418:	e1 ec       	ldi	r30, 0xC1	; 193
 41a:	f0 e0       	ldi	r31, 0x00	; 0
 41c:	80 81       	ld	r24, Z
 41e:	88 61       	ori	r24, 0x18	; 24
 420:	80 83       	st	Z, r24
 422:	e2 ec       	ldi	r30, 0xC2	; 194
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	80 81       	ld	r24, Z
 428:	86 60       	ori	r24, 0x06	; 6
 42a:	80 83       	st	Z, r24
 42c:	08 95       	ret

0000042e <USART_Transmit>:
 42e:	e0 ec       	ldi	r30, 0xC0	; 192
 430:	f0 e0       	ldi	r31, 0x00	; 0
 432:	90 81       	ld	r25, Z
 434:	95 ff       	sbrs	r25, 5
 436:	fd cf       	rjmp	.-6      	; 0x432 <USART_Transmit+0x4>
 438:	80 93 c6 00 	sts	0x00C6, r24
 43c:	08 95       	ret

0000043e <USART_Receive>:
 43e:	e0 ec       	ldi	r30, 0xC0	; 192
 440:	f0 e0       	ldi	r31, 0x00	; 0
 442:	80 81       	ld	r24, Z
 444:	88 23       	and	r24, r24
 446:	ec f7       	brge	.-6      	; 0x442 <USART_Receive+0x4>
 448:	80 91 c6 00 	lds	r24, 0x00C6
 44c:	08 95       	ret

0000044e <__umulhisi3>:
 44e:	a2 9f       	mul	r26, r18
 450:	b0 01       	movw	r22, r0
 452:	b3 9f       	mul	r27, r19
 454:	c0 01       	movw	r24, r0
 456:	a3 9f       	mul	r26, r19
 458:	70 0d       	add	r23, r0
 45a:	81 1d       	adc	r24, r1
 45c:	11 24       	eor	r1, r1
 45e:	91 1d       	adc	r25, r1
 460:	b2 9f       	mul	r27, r18
 462:	70 0d       	add	r23, r0
 464:	81 1d       	adc	r24, r1
 466:	11 24       	eor	r1, r1
 468:	91 1d       	adc	r25, r1
 46a:	08 95       	ret

0000046c <fdevopen>:
 46c:	0f 93       	push	r16
 46e:	1f 93       	push	r17
 470:	cf 93       	push	r28
 472:	df 93       	push	r29
 474:	ec 01       	movw	r28, r24
 476:	8b 01       	movw	r16, r22
 478:	00 97       	sbiw	r24, 0x00	; 0
 47a:	31 f4       	brne	.+12     	; 0x488 <fdevopen+0x1c>
 47c:	61 15       	cp	r22, r1
 47e:	71 05       	cpc	r23, r1
 480:	19 f4       	brne	.+6      	; 0x488 <fdevopen+0x1c>
 482:	80 e0       	ldi	r24, 0x00	; 0
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	37 c0       	rjmp	.+110    	; 0x4f6 <fdevopen+0x8a>
 488:	6e e0       	ldi	r22, 0x0E	; 14
 48a:	70 e0       	ldi	r23, 0x00	; 0
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	63 d2       	rcall	.+1222   	; 0x958 <calloc>
 492:	fc 01       	movw	r30, r24
 494:	00 97       	sbiw	r24, 0x00	; 0
 496:	a9 f3       	breq	.-22     	; 0x482 <fdevopen+0x16>
 498:	80 e8       	ldi	r24, 0x80	; 128
 49a:	83 83       	std	Z+3, r24	; 0x03
 49c:	01 15       	cp	r16, r1
 49e:	11 05       	cpc	r17, r1
 4a0:	71 f0       	breq	.+28     	; 0x4be <fdevopen+0x52>
 4a2:	13 87       	std	Z+11, r17	; 0x0b
 4a4:	02 87       	std	Z+10, r16	; 0x0a
 4a6:	81 e8       	ldi	r24, 0x81	; 129
 4a8:	83 83       	std	Z+3, r24	; 0x03
 4aa:	80 91 42 02 	lds	r24, 0x0242
 4ae:	90 91 43 02 	lds	r25, 0x0243
 4b2:	89 2b       	or	r24, r25
 4b4:	21 f4       	brne	.+8      	; 0x4be <fdevopen+0x52>
 4b6:	f0 93 43 02 	sts	0x0243, r31
 4ba:	e0 93 42 02 	sts	0x0242, r30
 4be:	20 97       	sbiw	r28, 0x00	; 0
 4c0:	c9 f0       	breq	.+50     	; 0x4f4 <fdevopen+0x88>
 4c2:	d1 87       	std	Z+9, r29	; 0x09
 4c4:	c0 87       	std	Z+8, r28	; 0x08
 4c6:	83 81       	ldd	r24, Z+3	; 0x03
 4c8:	82 60       	ori	r24, 0x02	; 2
 4ca:	83 83       	std	Z+3, r24	; 0x03
 4cc:	80 91 44 02 	lds	r24, 0x0244
 4d0:	90 91 45 02 	lds	r25, 0x0245
 4d4:	89 2b       	or	r24, r25
 4d6:	71 f4       	brne	.+28     	; 0x4f4 <fdevopen+0x88>
 4d8:	f0 93 45 02 	sts	0x0245, r31
 4dc:	e0 93 44 02 	sts	0x0244, r30
 4e0:	80 91 46 02 	lds	r24, 0x0246
 4e4:	90 91 47 02 	lds	r25, 0x0247
 4e8:	89 2b       	or	r24, r25
 4ea:	21 f4       	brne	.+8      	; 0x4f4 <fdevopen+0x88>
 4ec:	f0 93 47 02 	sts	0x0247, r31
 4f0:	e0 93 46 02 	sts	0x0246, r30
 4f4:	cf 01       	movw	r24, r30
 4f6:	df 91       	pop	r29
 4f8:	cf 91       	pop	r28
 4fa:	1f 91       	pop	r17
 4fc:	0f 91       	pop	r16
 4fe:	08 95       	ret

00000500 <printf>:
 500:	cf 93       	push	r28
 502:	df 93       	push	r29
 504:	cd b7       	in	r28, 0x3d	; 61
 506:	de b7       	in	r29, 0x3e	; 62
 508:	fe 01       	movw	r30, r28
 50a:	36 96       	adiw	r30, 0x06	; 6
 50c:	61 91       	ld	r22, Z+
 50e:	71 91       	ld	r23, Z+
 510:	af 01       	movw	r20, r30
 512:	80 91 44 02 	lds	r24, 0x0244
 516:	90 91 45 02 	lds	r25, 0x0245
 51a:	30 d0       	rcall	.+96     	; 0x57c <vfprintf>
 51c:	df 91       	pop	r29
 51e:	cf 91       	pop	r28
 520:	08 95       	ret

00000522 <puts>:
 522:	0f 93       	push	r16
 524:	1f 93       	push	r17
 526:	cf 93       	push	r28
 528:	df 93       	push	r29
 52a:	e0 91 44 02 	lds	r30, 0x0244
 52e:	f0 91 45 02 	lds	r31, 0x0245
 532:	23 81       	ldd	r18, Z+3	; 0x03
 534:	21 ff       	sbrs	r18, 1
 536:	1b c0       	rjmp	.+54     	; 0x56e <puts+0x4c>
 538:	ec 01       	movw	r28, r24
 53a:	00 e0       	ldi	r16, 0x00	; 0
 53c:	10 e0       	ldi	r17, 0x00	; 0
 53e:	89 91       	ld	r24, Y+
 540:	60 91 44 02 	lds	r22, 0x0244
 544:	70 91 45 02 	lds	r23, 0x0245
 548:	db 01       	movw	r26, r22
 54a:	18 96       	adiw	r26, 0x08	; 8
 54c:	ed 91       	ld	r30, X+
 54e:	fc 91       	ld	r31, X
 550:	19 97       	sbiw	r26, 0x09	; 9
 552:	88 23       	and	r24, r24
 554:	31 f0       	breq	.+12     	; 0x562 <puts+0x40>
 556:	19 95       	eicall
 558:	89 2b       	or	r24, r25
 55a:	89 f3       	breq	.-30     	; 0x53e <puts+0x1c>
 55c:	0f ef       	ldi	r16, 0xFF	; 255
 55e:	1f ef       	ldi	r17, 0xFF	; 255
 560:	ee cf       	rjmp	.-36     	; 0x53e <puts+0x1c>
 562:	8a e0       	ldi	r24, 0x0A	; 10
 564:	19 95       	eicall
 566:	89 2b       	or	r24, r25
 568:	11 f4       	brne	.+4      	; 0x56e <puts+0x4c>
 56a:	c8 01       	movw	r24, r16
 56c:	02 c0       	rjmp	.+4      	; 0x572 <puts+0x50>
 56e:	8f ef       	ldi	r24, 0xFF	; 255
 570:	9f ef       	ldi	r25, 0xFF	; 255
 572:	df 91       	pop	r29
 574:	cf 91       	pop	r28
 576:	1f 91       	pop	r17
 578:	0f 91       	pop	r16
 57a:	08 95       	ret

0000057c <vfprintf>:
 57c:	2f 92       	push	r2
 57e:	3f 92       	push	r3
 580:	4f 92       	push	r4
 582:	5f 92       	push	r5
 584:	6f 92       	push	r6
 586:	7f 92       	push	r7
 588:	8f 92       	push	r8
 58a:	9f 92       	push	r9
 58c:	af 92       	push	r10
 58e:	bf 92       	push	r11
 590:	cf 92       	push	r12
 592:	df 92       	push	r13
 594:	ef 92       	push	r14
 596:	ff 92       	push	r15
 598:	0f 93       	push	r16
 59a:	1f 93       	push	r17
 59c:	cf 93       	push	r28
 59e:	df 93       	push	r29
 5a0:	cd b7       	in	r28, 0x3d	; 61
 5a2:	de b7       	in	r29, 0x3e	; 62
 5a4:	2c 97       	sbiw	r28, 0x0c	; 12
 5a6:	0f b6       	in	r0, 0x3f	; 63
 5a8:	f8 94       	cli
 5aa:	de bf       	out	0x3e, r29	; 62
 5ac:	0f be       	out	0x3f, r0	; 63
 5ae:	cd bf       	out	0x3d, r28	; 61
 5b0:	7c 01       	movw	r14, r24
 5b2:	6b 01       	movw	r12, r22
 5b4:	8a 01       	movw	r16, r20
 5b6:	fc 01       	movw	r30, r24
 5b8:	17 82       	std	Z+7, r1	; 0x07
 5ba:	16 82       	std	Z+6, r1	; 0x06
 5bc:	83 81       	ldd	r24, Z+3	; 0x03
 5be:	81 ff       	sbrs	r24, 1
 5c0:	b0 c1       	rjmp	.+864    	; 0x922 <vfprintf+0x3a6>
 5c2:	ce 01       	movw	r24, r28
 5c4:	01 96       	adiw	r24, 0x01	; 1
 5c6:	4c 01       	movw	r8, r24
 5c8:	f7 01       	movw	r30, r14
 5ca:	93 81       	ldd	r25, Z+3	; 0x03
 5cc:	f6 01       	movw	r30, r12
 5ce:	93 fd       	sbrc	r25, 3
 5d0:	85 91       	lpm	r24, Z+
 5d2:	93 ff       	sbrs	r25, 3
 5d4:	81 91       	ld	r24, Z+
 5d6:	6f 01       	movw	r12, r30
 5d8:	88 23       	and	r24, r24
 5da:	09 f4       	brne	.+2      	; 0x5de <vfprintf+0x62>
 5dc:	9e c1       	rjmp	.+828    	; 0x91a <vfprintf+0x39e>
 5de:	85 32       	cpi	r24, 0x25	; 37
 5e0:	39 f4       	brne	.+14     	; 0x5f0 <vfprintf+0x74>
 5e2:	93 fd       	sbrc	r25, 3
 5e4:	85 91       	lpm	r24, Z+
 5e6:	93 ff       	sbrs	r25, 3
 5e8:	81 91       	ld	r24, Z+
 5ea:	6f 01       	movw	r12, r30
 5ec:	85 32       	cpi	r24, 0x25	; 37
 5ee:	21 f4       	brne	.+8      	; 0x5f8 <vfprintf+0x7c>
 5f0:	b7 01       	movw	r22, r14
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0f d3       	rcall	.+1566   	; 0xc14 <fputc>
 5f6:	e8 cf       	rjmp	.-48     	; 0x5c8 <vfprintf+0x4c>
 5f8:	51 2c       	mov	r5, r1
 5fa:	31 2c       	mov	r3, r1
 5fc:	20 e0       	ldi	r18, 0x00	; 0
 5fe:	20 32       	cpi	r18, 0x20	; 32
 600:	a0 f4       	brcc	.+40     	; 0x62a <vfprintf+0xae>
 602:	8b 32       	cpi	r24, 0x2B	; 43
 604:	69 f0       	breq	.+26     	; 0x620 <vfprintf+0xa4>
 606:	30 f4       	brcc	.+12     	; 0x614 <vfprintf+0x98>
 608:	80 32       	cpi	r24, 0x20	; 32
 60a:	59 f0       	breq	.+22     	; 0x622 <vfprintf+0xa6>
 60c:	83 32       	cpi	r24, 0x23	; 35
 60e:	69 f4       	brne	.+26     	; 0x62a <vfprintf+0xae>
 610:	20 61       	ori	r18, 0x10	; 16
 612:	2c c0       	rjmp	.+88     	; 0x66c <vfprintf+0xf0>
 614:	8d 32       	cpi	r24, 0x2D	; 45
 616:	39 f0       	breq	.+14     	; 0x626 <vfprintf+0xaa>
 618:	80 33       	cpi	r24, 0x30	; 48
 61a:	39 f4       	brne	.+14     	; 0x62a <vfprintf+0xae>
 61c:	21 60       	ori	r18, 0x01	; 1
 61e:	26 c0       	rjmp	.+76     	; 0x66c <vfprintf+0xf0>
 620:	22 60       	ori	r18, 0x02	; 2
 622:	24 60       	ori	r18, 0x04	; 4
 624:	23 c0       	rjmp	.+70     	; 0x66c <vfprintf+0xf0>
 626:	28 60       	ori	r18, 0x08	; 8
 628:	21 c0       	rjmp	.+66     	; 0x66c <vfprintf+0xf0>
 62a:	27 fd       	sbrc	r18, 7
 62c:	27 c0       	rjmp	.+78     	; 0x67c <vfprintf+0x100>
 62e:	30 ed       	ldi	r19, 0xD0	; 208
 630:	38 0f       	add	r19, r24
 632:	3a 30       	cpi	r19, 0x0A	; 10
 634:	78 f4       	brcc	.+30     	; 0x654 <vfprintf+0xd8>
 636:	26 ff       	sbrs	r18, 6
 638:	06 c0       	rjmp	.+12     	; 0x646 <vfprintf+0xca>
 63a:	fa e0       	ldi	r31, 0x0A	; 10
 63c:	5f 9e       	mul	r5, r31
 63e:	30 0d       	add	r19, r0
 640:	11 24       	eor	r1, r1
 642:	53 2e       	mov	r5, r19
 644:	13 c0       	rjmp	.+38     	; 0x66c <vfprintf+0xf0>
 646:	8a e0       	ldi	r24, 0x0A	; 10
 648:	38 9e       	mul	r3, r24
 64a:	30 0d       	add	r19, r0
 64c:	11 24       	eor	r1, r1
 64e:	33 2e       	mov	r3, r19
 650:	20 62       	ori	r18, 0x20	; 32
 652:	0c c0       	rjmp	.+24     	; 0x66c <vfprintf+0xf0>
 654:	8e 32       	cpi	r24, 0x2E	; 46
 656:	21 f4       	brne	.+8      	; 0x660 <vfprintf+0xe4>
 658:	26 fd       	sbrc	r18, 6
 65a:	5f c1       	rjmp	.+702    	; 0x91a <vfprintf+0x39e>
 65c:	20 64       	ori	r18, 0x40	; 64
 65e:	06 c0       	rjmp	.+12     	; 0x66c <vfprintf+0xf0>
 660:	8c 36       	cpi	r24, 0x6C	; 108
 662:	11 f4       	brne	.+4      	; 0x668 <vfprintf+0xec>
 664:	20 68       	ori	r18, 0x80	; 128
 666:	02 c0       	rjmp	.+4      	; 0x66c <vfprintf+0xf0>
 668:	88 36       	cpi	r24, 0x68	; 104
 66a:	41 f4       	brne	.+16     	; 0x67c <vfprintf+0x100>
 66c:	f6 01       	movw	r30, r12
 66e:	93 fd       	sbrc	r25, 3
 670:	85 91       	lpm	r24, Z+
 672:	93 ff       	sbrs	r25, 3
 674:	81 91       	ld	r24, Z+
 676:	6f 01       	movw	r12, r30
 678:	81 11       	cpse	r24, r1
 67a:	c1 cf       	rjmp	.-126    	; 0x5fe <vfprintf+0x82>
 67c:	98 2f       	mov	r25, r24
 67e:	9f 7d       	andi	r25, 0xDF	; 223
 680:	95 54       	subi	r25, 0x45	; 69
 682:	93 30       	cpi	r25, 0x03	; 3
 684:	28 f4       	brcc	.+10     	; 0x690 <vfprintf+0x114>
 686:	0c 5f       	subi	r16, 0xFC	; 252
 688:	1f 4f       	sbci	r17, 0xFF	; 255
 68a:	ff e3       	ldi	r31, 0x3F	; 63
 68c:	f9 83       	std	Y+1, r31	; 0x01
 68e:	0d c0       	rjmp	.+26     	; 0x6aa <vfprintf+0x12e>
 690:	83 36       	cpi	r24, 0x63	; 99
 692:	31 f0       	breq	.+12     	; 0x6a0 <vfprintf+0x124>
 694:	83 37       	cpi	r24, 0x73	; 115
 696:	71 f0       	breq	.+28     	; 0x6b4 <vfprintf+0x138>
 698:	83 35       	cpi	r24, 0x53	; 83
 69a:	09 f0       	breq	.+2      	; 0x69e <vfprintf+0x122>
 69c:	57 c0       	rjmp	.+174    	; 0x74c <vfprintf+0x1d0>
 69e:	21 c0       	rjmp	.+66     	; 0x6e2 <vfprintf+0x166>
 6a0:	f8 01       	movw	r30, r16
 6a2:	80 81       	ld	r24, Z
 6a4:	89 83       	std	Y+1, r24	; 0x01
 6a6:	0e 5f       	subi	r16, 0xFE	; 254
 6a8:	1f 4f       	sbci	r17, 0xFF	; 255
 6aa:	44 24       	eor	r4, r4
 6ac:	43 94       	inc	r4
 6ae:	51 2c       	mov	r5, r1
 6b0:	54 01       	movw	r10, r8
 6b2:	14 c0       	rjmp	.+40     	; 0x6dc <vfprintf+0x160>
 6b4:	38 01       	movw	r6, r16
 6b6:	f2 e0       	ldi	r31, 0x02	; 2
 6b8:	6f 0e       	add	r6, r31
 6ba:	71 1c       	adc	r7, r1
 6bc:	f8 01       	movw	r30, r16
 6be:	a0 80       	ld	r10, Z
 6c0:	b1 80       	ldd	r11, Z+1	; 0x01
 6c2:	26 ff       	sbrs	r18, 6
 6c4:	03 c0       	rjmp	.+6      	; 0x6cc <vfprintf+0x150>
 6c6:	65 2d       	mov	r22, r5
 6c8:	70 e0       	ldi	r23, 0x00	; 0
 6ca:	02 c0       	rjmp	.+4      	; 0x6d0 <vfprintf+0x154>
 6cc:	6f ef       	ldi	r22, 0xFF	; 255
 6ce:	7f ef       	ldi	r23, 0xFF	; 255
 6d0:	c5 01       	movw	r24, r10
 6d2:	2c 87       	std	Y+12, r18	; 0x0c
 6d4:	94 d2       	rcall	.+1320   	; 0xbfe <strnlen>
 6d6:	2c 01       	movw	r4, r24
 6d8:	83 01       	movw	r16, r6
 6da:	2c 85       	ldd	r18, Y+12	; 0x0c
 6dc:	2f 77       	andi	r18, 0x7F	; 127
 6de:	22 2e       	mov	r2, r18
 6e0:	16 c0       	rjmp	.+44     	; 0x70e <vfprintf+0x192>
 6e2:	38 01       	movw	r6, r16
 6e4:	f2 e0       	ldi	r31, 0x02	; 2
 6e6:	6f 0e       	add	r6, r31
 6e8:	71 1c       	adc	r7, r1
 6ea:	f8 01       	movw	r30, r16
 6ec:	a0 80       	ld	r10, Z
 6ee:	b1 80       	ldd	r11, Z+1	; 0x01
 6f0:	26 ff       	sbrs	r18, 6
 6f2:	03 c0       	rjmp	.+6      	; 0x6fa <vfprintf+0x17e>
 6f4:	65 2d       	mov	r22, r5
 6f6:	70 e0       	ldi	r23, 0x00	; 0
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <vfprintf+0x182>
 6fa:	6f ef       	ldi	r22, 0xFF	; 255
 6fc:	7f ef       	ldi	r23, 0xFF	; 255
 6fe:	c5 01       	movw	r24, r10
 700:	2c 87       	std	Y+12, r18	; 0x0c
 702:	6b d2       	rcall	.+1238   	; 0xbda <strnlen_P>
 704:	2c 01       	movw	r4, r24
 706:	2c 85       	ldd	r18, Y+12	; 0x0c
 708:	20 68       	ori	r18, 0x80	; 128
 70a:	22 2e       	mov	r2, r18
 70c:	83 01       	movw	r16, r6
 70e:	23 fc       	sbrc	r2, 3
 710:	19 c0       	rjmp	.+50     	; 0x744 <vfprintf+0x1c8>
 712:	83 2d       	mov	r24, r3
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	48 16       	cp	r4, r24
 718:	59 06       	cpc	r5, r25
 71a:	a0 f4       	brcc	.+40     	; 0x744 <vfprintf+0x1c8>
 71c:	b7 01       	movw	r22, r14
 71e:	80 e2       	ldi	r24, 0x20	; 32
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	78 d2       	rcall	.+1264   	; 0xc14 <fputc>
 724:	3a 94       	dec	r3
 726:	f5 cf       	rjmp	.-22     	; 0x712 <vfprintf+0x196>
 728:	f5 01       	movw	r30, r10
 72a:	27 fc       	sbrc	r2, 7
 72c:	85 91       	lpm	r24, Z+
 72e:	27 fe       	sbrs	r2, 7
 730:	81 91       	ld	r24, Z+
 732:	5f 01       	movw	r10, r30
 734:	b7 01       	movw	r22, r14
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	6d d2       	rcall	.+1242   	; 0xc14 <fputc>
 73a:	31 10       	cpse	r3, r1
 73c:	3a 94       	dec	r3
 73e:	f1 e0       	ldi	r31, 0x01	; 1
 740:	4f 1a       	sub	r4, r31
 742:	51 08       	sbc	r5, r1
 744:	41 14       	cp	r4, r1
 746:	51 04       	cpc	r5, r1
 748:	79 f7       	brne	.-34     	; 0x728 <vfprintf+0x1ac>
 74a:	de c0       	rjmp	.+444    	; 0x908 <vfprintf+0x38c>
 74c:	84 36       	cpi	r24, 0x64	; 100
 74e:	11 f0       	breq	.+4      	; 0x754 <vfprintf+0x1d8>
 750:	89 36       	cpi	r24, 0x69	; 105
 752:	31 f5       	brne	.+76     	; 0x7a0 <vfprintf+0x224>
 754:	f8 01       	movw	r30, r16
 756:	27 ff       	sbrs	r18, 7
 758:	07 c0       	rjmp	.+14     	; 0x768 <vfprintf+0x1ec>
 75a:	60 81       	ld	r22, Z
 75c:	71 81       	ldd	r23, Z+1	; 0x01
 75e:	82 81       	ldd	r24, Z+2	; 0x02
 760:	93 81       	ldd	r25, Z+3	; 0x03
 762:	0c 5f       	subi	r16, 0xFC	; 252
 764:	1f 4f       	sbci	r17, 0xFF	; 255
 766:	08 c0       	rjmp	.+16     	; 0x778 <vfprintf+0x1fc>
 768:	60 81       	ld	r22, Z
 76a:	71 81       	ldd	r23, Z+1	; 0x01
 76c:	88 27       	eor	r24, r24
 76e:	77 fd       	sbrc	r23, 7
 770:	80 95       	com	r24
 772:	98 2f       	mov	r25, r24
 774:	0e 5f       	subi	r16, 0xFE	; 254
 776:	1f 4f       	sbci	r17, 0xFF	; 255
 778:	2f 76       	andi	r18, 0x6F	; 111
 77a:	b2 2e       	mov	r11, r18
 77c:	97 ff       	sbrs	r25, 7
 77e:	09 c0       	rjmp	.+18     	; 0x792 <vfprintf+0x216>
 780:	90 95       	com	r25
 782:	80 95       	com	r24
 784:	70 95       	com	r23
 786:	61 95       	neg	r22
 788:	7f 4f       	sbci	r23, 0xFF	; 255
 78a:	8f 4f       	sbci	r24, 0xFF	; 255
 78c:	9f 4f       	sbci	r25, 0xFF	; 255
 78e:	20 68       	ori	r18, 0x80	; 128
 790:	b2 2e       	mov	r11, r18
 792:	2a e0       	ldi	r18, 0x0A	; 10
 794:	30 e0       	ldi	r19, 0x00	; 0
 796:	a4 01       	movw	r20, r8
 798:	6f d2       	rcall	.+1246   	; 0xc78 <__ultoa_invert>
 79a:	a8 2e       	mov	r10, r24
 79c:	a8 18       	sub	r10, r8
 79e:	43 c0       	rjmp	.+134    	; 0x826 <vfprintf+0x2aa>
 7a0:	85 37       	cpi	r24, 0x75	; 117
 7a2:	29 f4       	brne	.+10     	; 0x7ae <vfprintf+0x232>
 7a4:	2f 7e       	andi	r18, 0xEF	; 239
 7a6:	b2 2e       	mov	r11, r18
 7a8:	2a e0       	ldi	r18, 0x0A	; 10
 7aa:	30 e0       	ldi	r19, 0x00	; 0
 7ac:	25 c0       	rjmp	.+74     	; 0x7f8 <vfprintf+0x27c>
 7ae:	f2 2f       	mov	r31, r18
 7b0:	f9 7f       	andi	r31, 0xF9	; 249
 7b2:	bf 2e       	mov	r11, r31
 7b4:	8f 36       	cpi	r24, 0x6F	; 111
 7b6:	c1 f0       	breq	.+48     	; 0x7e8 <vfprintf+0x26c>
 7b8:	18 f4       	brcc	.+6      	; 0x7c0 <vfprintf+0x244>
 7ba:	88 35       	cpi	r24, 0x58	; 88
 7bc:	79 f0       	breq	.+30     	; 0x7dc <vfprintf+0x260>
 7be:	ad c0       	rjmp	.+346    	; 0x91a <vfprintf+0x39e>
 7c0:	80 37       	cpi	r24, 0x70	; 112
 7c2:	19 f0       	breq	.+6      	; 0x7ca <vfprintf+0x24e>
 7c4:	88 37       	cpi	r24, 0x78	; 120
 7c6:	21 f0       	breq	.+8      	; 0x7d0 <vfprintf+0x254>
 7c8:	a8 c0       	rjmp	.+336    	; 0x91a <vfprintf+0x39e>
 7ca:	2f 2f       	mov	r18, r31
 7cc:	20 61       	ori	r18, 0x10	; 16
 7ce:	b2 2e       	mov	r11, r18
 7d0:	b4 fe       	sbrs	r11, 4
 7d2:	0d c0       	rjmp	.+26     	; 0x7ee <vfprintf+0x272>
 7d4:	8b 2d       	mov	r24, r11
 7d6:	84 60       	ori	r24, 0x04	; 4
 7d8:	b8 2e       	mov	r11, r24
 7da:	09 c0       	rjmp	.+18     	; 0x7ee <vfprintf+0x272>
 7dc:	24 ff       	sbrs	r18, 4
 7de:	0a c0       	rjmp	.+20     	; 0x7f4 <vfprintf+0x278>
 7e0:	9f 2f       	mov	r25, r31
 7e2:	96 60       	ori	r25, 0x06	; 6
 7e4:	b9 2e       	mov	r11, r25
 7e6:	06 c0       	rjmp	.+12     	; 0x7f4 <vfprintf+0x278>
 7e8:	28 e0       	ldi	r18, 0x08	; 8
 7ea:	30 e0       	ldi	r19, 0x00	; 0
 7ec:	05 c0       	rjmp	.+10     	; 0x7f8 <vfprintf+0x27c>
 7ee:	20 e1       	ldi	r18, 0x10	; 16
 7f0:	30 e0       	ldi	r19, 0x00	; 0
 7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <vfprintf+0x27c>
 7f4:	20 e1       	ldi	r18, 0x10	; 16
 7f6:	32 e0       	ldi	r19, 0x02	; 2
 7f8:	f8 01       	movw	r30, r16
 7fa:	b7 fe       	sbrs	r11, 7
 7fc:	07 c0       	rjmp	.+14     	; 0x80c <vfprintf+0x290>
 7fe:	60 81       	ld	r22, Z
 800:	71 81       	ldd	r23, Z+1	; 0x01
 802:	82 81       	ldd	r24, Z+2	; 0x02
 804:	93 81       	ldd	r25, Z+3	; 0x03
 806:	0c 5f       	subi	r16, 0xFC	; 252
 808:	1f 4f       	sbci	r17, 0xFF	; 255
 80a:	06 c0       	rjmp	.+12     	; 0x818 <vfprintf+0x29c>
 80c:	60 81       	ld	r22, Z
 80e:	71 81       	ldd	r23, Z+1	; 0x01
 810:	80 e0       	ldi	r24, 0x00	; 0
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	0e 5f       	subi	r16, 0xFE	; 254
 816:	1f 4f       	sbci	r17, 0xFF	; 255
 818:	a4 01       	movw	r20, r8
 81a:	2e d2       	rcall	.+1116   	; 0xc78 <__ultoa_invert>
 81c:	a8 2e       	mov	r10, r24
 81e:	a8 18       	sub	r10, r8
 820:	fb 2d       	mov	r31, r11
 822:	ff 77       	andi	r31, 0x7F	; 127
 824:	bf 2e       	mov	r11, r31
 826:	b6 fe       	sbrs	r11, 6
 828:	0b c0       	rjmp	.+22     	; 0x840 <vfprintf+0x2c4>
 82a:	2b 2d       	mov	r18, r11
 82c:	2e 7f       	andi	r18, 0xFE	; 254
 82e:	a5 14       	cp	r10, r5
 830:	50 f4       	brcc	.+20     	; 0x846 <vfprintf+0x2ca>
 832:	b4 fe       	sbrs	r11, 4
 834:	0a c0       	rjmp	.+20     	; 0x84a <vfprintf+0x2ce>
 836:	b2 fc       	sbrc	r11, 2
 838:	08 c0       	rjmp	.+16     	; 0x84a <vfprintf+0x2ce>
 83a:	2b 2d       	mov	r18, r11
 83c:	2e 7e       	andi	r18, 0xEE	; 238
 83e:	05 c0       	rjmp	.+10     	; 0x84a <vfprintf+0x2ce>
 840:	7a 2c       	mov	r7, r10
 842:	2b 2d       	mov	r18, r11
 844:	03 c0       	rjmp	.+6      	; 0x84c <vfprintf+0x2d0>
 846:	7a 2c       	mov	r7, r10
 848:	01 c0       	rjmp	.+2      	; 0x84c <vfprintf+0x2d0>
 84a:	75 2c       	mov	r7, r5
 84c:	24 ff       	sbrs	r18, 4
 84e:	0d c0       	rjmp	.+26     	; 0x86a <vfprintf+0x2ee>
 850:	fe 01       	movw	r30, r28
 852:	ea 0d       	add	r30, r10
 854:	f1 1d       	adc	r31, r1
 856:	80 81       	ld	r24, Z
 858:	80 33       	cpi	r24, 0x30	; 48
 85a:	11 f4       	brne	.+4      	; 0x860 <vfprintf+0x2e4>
 85c:	29 7e       	andi	r18, 0xE9	; 233
 85e:	09 c0       	rjmp	.+18     	; 0x872 <vfprintf+0x2f6>
 860:	22 ff       	sbrs	r18, 2
 862:	06 c0       	rjmp	.+12     	; 0x870 <vfprintf+0x2f4>
 864:	73 94       	inc	r7
 866:	73 94       	inc	r7
 868:	04 c0       	rjmp	.+8      	; 0x872 <vfprintf+0x2f6>
 86a:	82 2f       	mov	r24, r18
 86c:	86 78       	andi	r24, 0x86	; 134
 86e:	09 f0       	breq	.+2      	; 0x872 <vfprintf+0x2f6>
 870:	73 94       	inc	r7
 872:	23 fd       	sbrc	r18, 3
 874:	12 c0       	rjmp	.+36     	; 0x89a <vfprintf+0x31e>
 876:	20 ff       	sbrs	r18, 0
 878:	06 c0       	rjmp	.+12     	; 0x886 <vfprintf+0x30a>
 87a:	5a 2c       	mov	r5, r10
 87c:	73 14       	cp	r7, r3
 87e:	18 f4       	brcc	.+6      	; 0x886 <vfprintf+0x30a>
 880:	53 0c       	add	r5, r3
 882:	57 18       	sub	r5, r7
 884:	73 2c       	mov	r7, r3
 886:	73 14       	cp	r7, r3
 888:	60 f4       	brcc	.+24     	; 0x8a2 <vfprintf+0x326>
 88a:	b7 01       	movw	r22, r14
 88c:	80 e2       	ldi	r24, 0x20	; 32
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	2c 87       	std	Y+12, r18	; 0x0c
 892:	c0 d1       	rcall	.+896    	; 0xc14 <fputc>
 894:	73 94       	inc	r7
 896:	2c 85       	ldd	r18, Y+12	; 0x0c
 898:	f6 cf       	rjmp	.-20     	; 0x886 <vfprintf+0x30a>
 89a:	73 14       	cp	r7, r3
 89c:	10 f4       	brcc	.+4      	; 0x8a2 <vfprintf+0x326>
 89e:	37 18       	sub	r3, r7
 8a0:	01 c0       	rjmp	.+2      	; 0x8a4 <vfprintf+0x328>
 8a2:	31 2c       	mov	r3, r1
 8a4:	24 ff       	sbrs	r18, 4
 8a6:	11 c0       	rjmp	.+34     	; 0x8ca <vfprintf+0x34e>
 8a8:	b7 01       	movw	r22, r14
 8aa:	80 e3       	ldi	r24, 0x30	; 48
 8ac:	90 e0       	ldi	r25, 0x00	; 0
 8ae:	2c 87       	std	Y+12, r18	; 0x0c
 8b0:	b1 d1       	rcall	.+866    	; 0xc14 <fputc>
 8b2:	2c 85       	ldd	r18, Y+12	; 0x0c
 8b4:	22 ff       	sbrs	r18, 2
 8b6:	16 c0       	rjmp	.+44     	; 0x8e4 <vfprintf+0x368>
 8b8:	21 ff       	sbrs	r18, 1
 8ba:	03 c0       	rjmp	.+6      	; 0x8c2 <vfprintf+0x346>
 8bc:	88 e5       	ldi	r24, 0x58	; 88
 8be:	90 e0       	ldi	r25, 0x00	; 0
 8c0:	02 c0       	rjmp	.+4      	; 0x8c6 <vfprintf+0x34a>
 8c2:	88 e7       	ldi	r24, 0x78	; 120
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	b7 01       	movw	r22, r14
 8c8:	0c c0       	rjmp	.+24     	; 0x8e2 <vfprintf+0x366>
 8ca:	82 2f       	mov	r24, r18
 8cc:	86 78       	andi	r24, 0x86	; 134
 8ce:	51 f0       	breq	.+20     	; 0x8e4 <vfprintf+0x368>
 8d0:	21 fd       	sbrc	r18, 1
 8d2:	02 c0       	rjmp	.+4      	; 0x8d8 <vfprintf+0x35c>
 8d4:	80 e2       	ldi	r24, 0x20	; 32
 8d6:	01 c0       	rjmp	.+2      	; 0x8da <vfprintf+0x35e>
 8d8:	8b e2       	ldi	r24, 0x2B	; 43
 8da:	27 fd       	sbrc	r18, 7
 8dc:	8d e2       	ldi	r24, 0x2D	; 45
 8de:	b7 01       	movw	r22, r14
 8e0:	90 e0       	ldi	r25, 0x00	; 0
 8e2:	98 d1       	rcall	.+816    	; 0xc14 <fputc>
 8e4:	a5 14       	cp	r10, r5
 8e6:	30 f4       	brcc	.+12     	; 0x8f4 <vfprintf+0x378>
 8e8:	b7 01       	movw	r22, r14
 8ea:	80 e3       	ldi	r24, 0x30	; 48
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	92 d1       	rcall	.+804    	; 0xc14 <fputc>
 8f0:	5a 94       	dec	r5
 8f2:	f8 cf       	rjmp	.-16     	; 0x8e4 <vfprintf+0x368>
 8f4:	aa 94       	dec	r10
 8f6:	f4 01       	movw	r30, r8
 8f8:	ea 0d       	add	r30, r10
 8fa:	f1 1d       	adc	r31, r1
 8fc:	80 81       	ld	r24, Z
 8fe:	b7 01       	movw	r22, r14
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	88 d1       	rcall	.+784    	; 0xc14 <fputc>
 904:	a1 10       	cpse	r10, r1
 906:	f6 cf       	rjmp	.-20     	; 0x8f4 <vfprintf+0x378>
 908:	33 20       	and	r3, r3
 90a:	09 f4       	brne	.+2      	; 0x90e <vfprintf+0x392>
 90c:	5d ce       	rjmp	.-838    	; 0x5c8 <vfprintf+0x4c>
 90e:	b7 01       	movw	r22, r14
 910:	80 e2       	ldi	r24, 0x20	; 32
 912:	90 e0       	ldi	r25, 0x00	; 0
 914:	7f d1       	rcall	.+766    	; 0xc14 <fputc>
 916:	3a 94       	dec	r3
 918:	f7 cf       	rjmp	.-18     	; 0x908 <vfprintf+0x38c>
 91a:	f7 01       	movw	r30, r14
 91c:	86 81       	ldd	r24, Z+6	; 0x06
 91e:	97 81       	ldd	r25, Z+7	; 0x07
 920:	02 c0       	rjmp	.+4      	; 0x926 <vfprintf+0x3aa>
 922:	8f ef       	ldi	r24, 0xFF	; 255
 924:	9f ef       	ldi	r25, 0xFF	; 255
 926:	2c 96       	adiw	r28, 0x0c	; 12
 928:	0f b6       	in	r0, 0x3f	; 63
 92a:	f8 94       	cli
 92c:	de bf       	out	0x3e, r29	; 62
 92e:	0f be       	out	0x3f, r0	; 63
 930:	cd bf       	out	0x3d, r28	; 61
 932:	df 91       	pop	r29
 934:	cf 91       	pop	r28
 936:	1f 91       	pop	r17
 938:	0f 91       	pop	r16
 93a:	ff 90       	pop	r15
 93c:	ef 90       	pop	r14
 93e:	df 90       	pop	r13
 940:	cf 90       	pop	r12
 942:	bf 90       	pop	r11
 944:	af 90       	pop	r10
 946:	9f 90       	pop	r9
 948:	8f 90       	pop	r8
 94a:	7f 90       	pop	r7
 94c:	6f 90       	pop	r6
 94e:	5f 90       	pop	r5
 950:	4f 90       	pop	r4
 952:	3f 90       	pop	r3
 954:	2f 90       	pop	r2
 956:	08 95       	ret

00000958 <calloc>:
 958:	0f 93       	push	r16
 95a:	1f 93       	push	r17
 95c:	cf 93       	push	r28
 95e:	df 93       	push	r29
 960:	86 9f       	mul	r24, r22
 962:	80 01       	movw	r16, r0
 964:	87 9f       	mul	r24, r23
 966:	10 0d       	add	r17, r0
 968:	96 9f       	mul	r25, r22
 96a:	10 0d       	add	r17, r0
 96c:	11 24       	eor	r1, r1
 96e:	c8 01       	movw	r24, r16
 970:	0d d0       	rcall	.+26     	; 0x98c <malloc>
 972:	ec 01       	movw	r28, r24
 974:	00 97       	sbiw	r24, 0x00	; 0
 976:	21 f0       	breq	.+8      	; 0x980 <calloc+0x28>
 978:	a8 01       	movw	r20, r16
 97a:	60 e0       	ldi	r22, 0x00	; 0
 97c:	70 e0       	ldi	r23, 0x00	; 0
 97e:	38 d1       	rcall	.+624    	; 0xbf0 <memset>
 980:	ce 01       	movw	r24, r28
 982:	df 91       	pop	r29
 984:	cf 91       	pop	r28
 986:	1f 91       	pop	r17
 988:	0f 91       	pop	r16
 98a:	08 95       	ret

0000098c <malloc>:
 98c:	cf 93       	push	r28
 98e:	df 93       	push	r29
 990:	82 30       	cpi	r24, 0x02	; 2
 992:	91 05       	cpc	r25, r1
 994:	10 f4       	brcc	.+4      	; 0x99a <malloc+0xe>
 996:	82 e0       	ldi	r24, 0x02	; 2
 998:	90 e0       	ldi	r25, 0x00	; 0
 99a:	e0 91 4a 02 	lds	r30, 0x024A
 99e:	f0 91 4b 02 	lds	r31, 0x024B
 9a2:	20 e0       	ldi	r18, 0x00	; 0
 9a4:	30 e0       	ldi	r19, 0x00	; 0
 9a6:	a0 e0       	ldi	r26, 0x00	; 0
 9a8:	b0 e0       	ldi	r27, 0x00	; 0
 9aa:	30 97       	sbiw	r30, 0x00	; 0
 9ac:	39 f1       	breq	.+78     	; 0x9fc <malloc+0x70>
 9ae:	40 81       	ld	r20, Z
 9b0:	51 81       	ldd	r21, Z+1	; 0x01
 9b2:	48 17       	cp	r20, r24
 9b4:	59 07       	cpc	r21, r25
 9b6:	b8 f0       	brcs	.+46     	; 0x9e6 <malloc+0x5a>
 9b8:	48 17       	cp	r20, r24
 9ba:	59 07       	cpc	r21, r25
 9bc:	71 f4       	brne	.+28     	; 0x9da <malloc+0x4e>
 9be:	82 81       	ldd	r24, Z+2	; 0x02
 9c0:	93 81       	ldd	r25, Z+3	; 0x03
 9c2:	10 97       	sbiw	r26, 0x00	; 0
 9c4:	29 f0       	breq	.+10     	; 0x9d0 <malloc+0x44>
 9c6:	13 96       	adiw	r26, 0x03	; 3
 9c8:	9c 93       	st	X, r25
 9ca:	8e 93       	st	-X, r24
 9cc:	12 97       	sbiw	r26, 0x02	; 2
 9ce:	2c c0       	rjmp	.+88     	; 0xa28 <malloc+0x9c>
 9d0:	90 93 4b 02 	sts	0x024B, r25
 9d4:	80 93 4a 02 	sts	0x024A, r24
 9d8:	27 c0       	rjmp	.+78     	; 0xa28 <malloc+0x9c>
 9da:	21 15       	cp	r18, r1
 9dc:	31 05       	cpc	r19, r1
 9de:	31 f0       	breq	.+12     	; 0x9ec <malloc+0x60>
 9e0:	42 17       	cp	r20, r18
 9e2:	53 07       	cpc	r21, r19
 9e4:	18 f0       	brcs	.+6      	; 0x9ec <malloc+0x60>
 9e6:	a9 01       	movw	r20, r18
 9e8:	db 01       	movw	r26, r22
 9ea:	01 c0       	rjmp	.+2      	; 0x9ee <malloc+0x62>
 9ec:	ef 01       	movw	r28, r30
 9ee:	9a 01       	movw	r18, r20
 9f0:	bd 01       	movw	r22, r26
 9f2:	df 01       	movw	r26, r30
 9f4:	02 80       	ldd	r0, Z+2	; 0x02
 9f6:	f3 81       	ldd	r31, Z+3	; 0x03
 9f8:	e0 2d       	mov	r30, r0
 9fa:	d7 cf       	rjmp	.-82     	; 0x9aa <malloc+0x1e>
 9fc:	21 15       	cp	r18, r1
 9fe:	31 05       	cpc	r19, r1
 a00:	f9 f0       	breq	.+62     	; 0xa40 <malloc+0xb4>
 a02:	28 1b       	sub	r18, r24
 a04:	39 0b       	sbc	r19, r25
 a06:	24 30       	cpi	r18, 0x04	; 4
 a08:	31 05       	cpc	r19, r1
 a0a:	80 f4       	brcc	.+32     	; 0xa2c <malloc+0xa0>
 a0c:	8a 81       	ldd	r24, Y+2	; 0x02
 a0e:	9b 81       	ldd	r25, Y+3	; 0x03
 a10:	61 15       	cp	r22, r1
 a12:	71 05       	cpc	r23, r1
 a14:	21 f0       	breq	.+8      	; 0xa1e <malloc+0x92>
 a16:	fb 01       	movw	r30, r22
 a18:	93 83       	std	Z+3, r25	; 0x03
 a1a:	82 83       	std	Z+2, r24	; 0x02
 a1c:	04 c0       	rjmp	.+8      	; 0xa26 <malloc+0x9a>
 a1e:	90 93 4b 02 	sts	0x024B, r25
 a22:	80 93 4a 02 	sts	0x024A, r24
 a26:	fe 01       	movw	r30, r28
 a28:	32 96       	adiw	r30, 0x02	; 2
 a2a:	44 c0       	rjmp	.+136    	; 0xab4 <malloc+0x128>
 a2c:	fe 01       	movw	r30, r28
 a2e:	e2 0f       	add	r30, r18
 a30:	f3 1f       	adc	r31, r19
 a32:	81 93       	st	Z+, r24
 a34:	91 93       	st	Z+, r25
 a36:	22 50       	subi	r18, 0x02	; 2
 a38:	31 09       	sbc	r19, r1
 a3a:	39 83       	std	Y+1, r19	; 0x01
 a3c:	28 83       	st	Y, r18
 a3e:	3a c0       	rjmp	.+116    	; 0xab4 <malloc+0x128>
 a40:	20 91 48 02 	lds	r18, 0x0248
 a44:	30 91 49 02 	lds	r19, 0x0249
 a48:	23 2b       	or	r18, r19
 a4a:	41 f4       	brne	.+16     	; 0xa5c <malloc+0xd0>
 a4c:	20 91 02 02 	lds	r18, 0x0202
 a50:	30 91 03 02 	lds	r19, 0x0203
 a54:	30 93 49 02 	sts	0x0249, r19
 a58:	20 93 48 02 	sts	0x0248, r18
 a5c:	20 91 00 02 	lds	r18, 0x0200
 a60:	30 91 01 02 	lds	r19, 0x0201
 a64:	21 15       	cp	r18, r1
 a66:	31 05       	cpc	r19, r1
 a68:	41 f4       	brne	.+16     	; 0xa7a <malloc+0xee>
 a6a:	2d b7       	in	r18, 0x3d	; 61
 a6c:	3e b7       	in	r19, 0x3e	; 62
 a6e:	40 91 04 02 	lds	r20, 0x0204
 a72:	50 91 05 02 	lds	r21, 0x0205
 a76:	24 1b       	sub	r18, r20
 a78:	35 0b       	sbc	r19, r21
 a7a:	e0 91 48 02 	lds	r30, 0x0248
 a7e:	f0 91 49 02 	lds	r31, 0x0249
 a82:	e2 17       	cp	r30, r18
 a84:	f3 07       	cpc	r31, r19
 a86:	a0 f4       	brcc	.+40     	; 0xab0 <malloc+0x124>
 a88:	2e 1b       	sub	r18, r30
 a8a:	3f 0b       	sbc	r19, r31
 a8c:	28 17       	cp	r18, r24
 a8e:	39 07       	cpc	r19, r25
 a90:	78 f0       	brcs	.+30     	; 0xab0 <malloc+0x124>
 a92:	ac 01       	movw	r20, r24
 a94:	4e 5f       	subi	r20, 0xFE	; 254
 a96:	5f 4f       	sbci	r21, 0xFF	; 255
 a98:	24 17       	cp	r18, r20
 a9a:	35 07       	cpc	r19, r21
 a9c:	48 f0       	brcs	.+18     	; 0xab0 <malloc+0x124>
 a9e:	4e 0f       	add	r20, r30
 aa0:	5f 1f       	adc	r21, r31
 aa2:	50 93 49 02 	sts	0x0249, r21
 aa6:	40 93 48 02 	sts	0x0248, r20
 aaa:	81 93       	st	Z+, r24
 aac:	91 93       	st	Z+, r25
 aae:	02 c0       	rjmp	.+4      	; 0xab4 <malloc+0x128>
 ab0:	e0 e0       	ldi	r30, 0x00	; 0
 ab2:	f0 e0       	ldi	r31, 0x00	; 0
 ab4:	cf 01       	movw	r24, r30
 ab6:	df 91       	pop	r29
 ab8:	cf 91       	pop	r28
 aba:	08 95       	ret

00000abc <free>:
 abc:	cf 93       	push	r28
 abe:	df 93       	push	r29
 ac0:	00 97       	sbiw	r24, 0x00	; 0
 ac2:	09 f4       	brne	.+2      	; 0xac6 <free+0xa>
 ac4:	87 c0       	rjmp	.+270    	; 0xbd4 <free+0x118>
 ac6:	fc 01       	movw	r30, r24
 ac8:	32 97       	sbiw	r30, 0x02	; 2
 aca:	13 82       	std	Z+3, r1	; 0x03
 acc:	12 82       	std	Z+2, r1	; 0x02
 ace:	c0 91 4a 02 	lds	r28, 0x024A
 ad2:	d0 91 4b 02 	lds	r29, 0x024B
 ad6:	20 97       	sbiw	r28, 0x00	; 0
 ad8:	81 f4       	brne	.+32     	; 0xafa <free+0x3e>
 ada:	20 81       	ld	r18, Z
 adc:	31 81       	ldd	r19, Z+1	; 0x01
 ade:	28 0f       	add	r18, r24
 ae0:	39 1f       	adc	r19, r25
 ae2:	80 91 48 02 	lds	r24, 0x0248
 ae6:	90 91 49 02 	lds	r25, 0x0249
 aea:	82 17       	cp	r24, r18
 aec:	93 07       	cpc	r25, r19
 aee:	79 f5       	brne	.+94     	; 0xb4e <free+0x92>
 af0:	f0 93 49 02 	sts	0x0249, r31
 af4:	e0 93 48 02 	sts	0x0248, r30
 af8:	6d c0       	rjmp	.+218    	; 0xbd4 <free+0x118>
 afa:	de 01       	movw	r26, r28
 afc:	20 e0       	ldi	r18, 0x00	; 0
 afe:	30 e0       	ldi	r19, 0x00	; 0
 b00:	ae 17       	cp	r26, r30
 b02:	bf 07       	cpc	r27, r31
 b04:	50 f4       	brcc	.+20     	; 0xb1a <free+0x5e>
 b06:	12 96       	adiw	r26, 0x02	; 2
 b08:	4d 91       	ld	r20, X+
 b0a:	5c 91       	ld	r21, X
 b0c:	13 97       	sbiw	r26, 0x03	; 3
 b0e:	9d 01       	movw	r18, r26
 b10:	41 15       	cp	r20, r1
 b12:	51 05       	cpc	r21, r1
 b14:	09 f1       	breq	.+66     	; 0xb58 <free+0x9c>
 b16:	da 01       	movw	r26, r20
 b18:	f3 cf       	rjmp	.-26     	; 0xb00 <free+0x44>
 b1a:	b3 83       	std	Z+3, r27	; 0x03
 b1c:	a2 83       	std	Z+2, r26	; 0x02
 b1e:	40 81       	ld	r20, Z
 b20:	51 81       	ldd	r21, Z+1	; 0x01
 b22:	84 0f       	add	r24, r20
 b24:	95 1f       	adc	r25, r21
 b26:	8a 17       	cp	r24, r26
 b28:	9b 07       	cpc	r25, r27
 b2a:	71 f4       	brne	.+28     	; 0xb48 <free+0x8c>
 b2c:	8d 91       	ld	r24, X+
 b2e:	9c 91       	ld	r25, X
 b30:	11 97       	sbiw	r26, 0x01	; 1
 b32:	84 0f       	add	r24, r20
 b34:	95 1f       	adc	r25, r21
 b36:	02 96       	adiw	r24, 0x02	; 2
 b38:	91 83       	std	Z+1, r25	; 0x01
 b3a:	80 83       	st	Z, r24
 b3c:	12 96       	adiw	r26, 0x02	; 2
 b3e:	8d 91       	ld	r24, X+
 b40:	9c 91       	ld	r25, X
 b42:	13 97       	sbiw	r26, 0x03	; 3
 b44:	93 83       	std	Z+3, r25	; 0x03
 b46:	82 83       	std	Z+2, r24	; 0x02
 b48:	21 15       	cp	r18, r1
 b4a:	31 05       	cpc	r19, r1
 b4c:	29 f4       	brne	.+10     	; 0xb58 <free+0x9c>
 b4e:	f0 93 4b 02 	sts	0x024B, r31
 b52:	e0 93 4a 02 	sts	0x024A, r30
 b56:	3e c0       	rjmp	.+124    	; 0xbd4 <free+0x118>
 b58:	d9 01       	movw	r26, r18
 b5a:	13 96       	adiw	r26, 0x03	; 3
 b5c:	fc 93       	st	X, r31
 b5e:	ee 93       	st	-X, r30
 b60:	12 97       	sbiw	r26, 0x02	; 2
 b62:	4d 91       	ld	r20, X+
 b64:	5d 91       	ld	r21, X+
 b66:	a4 0f       	add	r26, r20
 b68:	b5 1f       	adc	r27, r21
 b6a:	ea 17       	cp	r30, r26
 b6c:	fb 07       	cpc	r31, r27
 b6e:	79 f4       	brne	.+30     	; 0xb8e <free+0xd2>
 b70:	80 81       	ld	r24, Z
 b72:	91 81       	ldd	r25, Z+1	; 0x01
 b74:	84 0f       	add	r24, r20
 b76:	95 1f       	adc	r25, r21
 b78:	02 96       	adiw	r24, 0x02	; 2
 b7a:	d9 01       	movw	r26, r18
 b7c:	11 96       	adiw	r26, 0x01	; 1
 b7e:	9c 93       	st	X, r25
 b80:	8e 93       	st	-X, r24
 b82:	82 81       	ldd	r24, Z+2	; 0x02
 b84:	93 81       	ldd	r25, Z+3	; 0x03
 b86:	13 96       	adiw	r26, 0x03	; 3
 b88:	9c 93       	st	X, r25
 b8a:	8e 93       	st	-X, r24
 b8c:	12 97       	sbiw	r26, 0x02	; 2
 b8e:	e0 e0       	ldi	r30, 0x00	; 0
 b90:	f0 e0       	ldi	r31, 0x00	; 0
 b92:	8a 81       	ldd	r24, Y+2	; 0x02
 b94:	9b 81       	ldd	r25, Y+3	; 0x03
 b96:	00 97       	sbiw	r24, 0x00	; 0
 b98:	19 f0       	breq	.+6      	; 0xba0 <free+0xe4>
 b9a:	fe 01       	movw	r30, r28
 b9c:	ec 01       	movw	r28, r24
 b9e:	f9 cf       	rjmp	.-14     	; 0xb92 <free+0xd6>
 ba0:	ce 01       	movw	r24, r28
 ba2:	02 96       	adiw	r24, 0x02	; 2
 ba4:	28 81       	ld	r18, Y
 ba6:	39 81       	ldd	r19, Y+1	; 0x01
 ba8:	82 0f       	add	r24, r18
 baa:	93 1f       	adc	r25, r19
 bac:	20 91 48 02 	lds	r18, 0x0248
 bb0:	30 91 49 02 	lds	r19, 0x0249
 bb4:	28 17       	cp	r18, r24
 bb6:	39 07       	cpc	r19, r25
 bb8:	69 f4       	brne	.+26     	; 0xbd4 <free+0x118>
 bba:	30 97       	sbiw	r30, 0x00	; 0
 bbc:	29 f4       	brne	.+10     	; 0xbc8 <free+0x10c>
 bbe:	10 92 4b 02 	sts	0x024B, r1
 bc2:	10 92 4a 02 	sts	0x024A, r1
 bc6:	02 c0       	rjmp	.+4      	; 0xbcc <free+0x110>
 bc8:	13 82       	std	Z+3, r1	; 0x03
 bca:	12 82       	std	Z+2, r1	; 0x02
 bcc:	d0 93 49 02 	sts	0x0249, r29
 bd0:	c0 93 48 02 	sts	0x0248, r28
 bd4:	df 91       	pop	r29
 bd6:	cf 91       	pop	r28
 bd8:	08 95       	ret

00000bda <strnlen_P>:
 bda:	fc 01       	movw	r30, r24
 bdc:	05 90       	lpm	r0, Z+
 bde:	61 50       	subi	r22, 0x01	; 1
 be0:	70 40       	sbci	r23, 0x00	; 0
 be2:	01 10       	cpse	r0, r1
 be4:	d8 f7       	brcc	.-10     	; 0xbdc <strnlen_P+0x2>
 be6:	80 95       	com	r24
 be8:	90 95       	com	r25
 bea:	8e 0f       	add	r24, r30
 bec:	9f 1f       	adc	r25, r31
 bee:	08 95       	ret

00000bf0 <memset>:
 bf0:	dc 01       	movw	r26, r24
 bf2:	01 c0       	rjmp	.+2      	; 0xbf6 <memset+0x6>
 bf4:	6d 93       	st	X+, r22
 bf6:	41 50       	subi	r20, 0x01	; 1
 bf8:	50 40       	sbci	r21, 0x00	; 0
 bfa:	e0 f7       	brcc	.-8      	; 0xbf4 <memset+0x4>
 bfc:	08 95       	ret

00000bfe <strnlen>:
 bfe:	fc 01       	movw	r30, r24
 c00:	61 50       	subi	r22, 0x01	; 1
 c02:	70 40       	sbci	r23, 0x00	; 0
 c04:	01 90       	ld	r0, Z+
 c06:	01 10       	cpse	r0, r1
 c08:	d8 f7       	brcc	.-10     	; 0xc00 <strnlen+0x2>
 c0a:	80 95       	com	r24
 c0c:	90 95       	com	r25
 c0e:	8e 0f       	add	r24, r30
 c10:	9f 1f       	adc	r25, r31
 c12:	08 95       	ret

00000c14 <fputc>:
 c14:	0f 93       	push	r16
 c16:	1f 93       	push	r17
 c18:	cf 93       	push	r28
 c1a:	df 93       	push	r29
 c1c:	18 2f       	mov	r17, r24
 c1e:	09 2f       	mov	r16, r25
 c20:	eb 01       	movw	r28, r22
 c22:	8b 81       	ldd	r24, Y+3	; 0x03
 c24:	81 fd       	sbrc	r24, 1
 c26:	03 c0       	rjmp	.+6      	; 0xc2e <fputc+0x1a>
 c28:	8f ef       	ldi	r24, 0xFF	; 255
 c2a:	9f ef       	ldi	r25, 0xFF	; 255
 c2c:	20 c0       	rjmp	.+64     	; 0xc6e <fputc+0x5a>
 c2e:	82 ff       	sbrs	r24, 2
 c30:	10 c0       	rjmp	.+32     	; 0xc52 <fputc+0x3e>
 c32:	4e 81       	ldd	r20, Y+6	; 0x06
 c34:	5f 81       	ldd	r21, Y+7	; 0x07
 c36:	2c 81       	ldd	r18, Y+4	; 0x04
 c38:	3d 81       	ldd	r19, Y+5	; 0x05
 c3a:	42 17       	cp	r20, r18
 c3c:	53 07       	cpc	r21, r19
 c3e:	7c f4       	brge	.+30     	; 0xc5e <fputc+0x4a>
 c40:	e8 81       	ld	r30, Y
 c42:	f9 81       	ldd	r31, Y+1	; 0x01
 c44:	9f 01       	movw	r18, r30
 c46:	2f 5f       	subi	r18, 0xFF	; 255
 c48:	3f 4f       	sbci	r19, 0xFF	; 255
 c4a:	39 83       	std	Y+1, r19	; 0x01
 c4c:	28 83       	st	Y, r18
 c4e:	10 83       	st	Z, r17
 c50:	06 c0       	rjmp	.+12     	; 0xc5e <fputc+0x4a>
 c52:	e8 85       	ldd	r30, Y+8	; 0x08
 c54:	f9 85       	ldd	r31, Y+9	; 0x09
 c56:	81 2f       	mov	r24, r17
 c58:	19 95       	eicall
 c5a:	89 2b       	or	r24, r25
 c5c:	29 f7       	brne	.-54     	; 0xc28 <fputc+0x14>
 c5e:	2e 81       	ldd	r18, Y+6	; 0x06
 c60:	3f 81       	ldd	r19, Y+7	; 0x07
 c62:	2f 5f       	subi	r18, 0xFF	; 255
 c64:	3f 4f       	sbci	r19, 0xFF	; 255
 c66:	3f 83       	std	Y+7, r19	; 0x07
 c68:	2e 83       	std	Y+6, r18	; 0x06
 c6a:	81 2f       	mov	r24, r17
 c6c:	90 2f       	mov	r25, r16
 c6e:	df 91       	pop	r29
 c70:	cf 91       	pop	r28
 c72:	1f 91       	pop	r17
 c74:	0f 91       	pop	r16
 c76:	08 95       	ret

00000c78 <__ultoa_invert>:
 c78:	fa 01       	movw	r30, r20
 c7a:	aa 27       	eor	r26, r26
 c7c:	28 30       	cpi	r18, 0x08	; 8
 c7e:	51 f1       	breq	.+84     	; 0xcd4 <__ultoa_invert+0x5c>
 c80:	20 31       	cpi	r18, 0x10	; 16
 c82:	81 f1       	breq	.+96     	; 0xce4 <__ultoa_invert+0x6c>
 c84:	e8 94       	clt
 c86:	6f 93       	push	r22
 c88:	6e 7f       	andi	r22, 0xFE	; 254
 c8a:	6e 5f       	subi	r22, 0xFE	; 254
 c8c:	7f 4f       	sbci	r23, 0xFF	; 255
 c8e:	8f 4f       	sbci	r24, 0xFF	; 255
 c90:	9f 4f       	sbci	r25, 0xFF	; 255
 c92:	af 4f       	sbci	r26, 0xFF	; 255
 c94:	b1 e0       	ldi	r27, 0x01	; 1
 c96:	3e d0       	rcall	.+124    	; 0xd14 <__ultoa_invert+0x9c>
 c98:	b4 e0       	ldi	r27, 0x04	; 4
 c9a:	3c d0       	rcall	.+120    	; 0xd14 <__ultoa_invert+0x9c>
 c9c:	67 0f       	add	r22, r23
 c9e:	78 1f       	adc	r23, r24
 ca0:	89 1f       	adc	r24, r25
 ca2:	9a 1f       	adc	r25, r26
 ca4:	a1 1d       	adc	r26, r1
 ca6:	68 0f       	add	r22, r24
 ca8:	79 1f       	adc	r23, r25
 caa:	8a 1f       	adc	r24, r26
 cac:	91 1d       	adc	r25, r1
 cae:	a1 1d       	adc	r26, r1
 cb0:	6a 0f       	add	r22, r26
 cb2:	71 1d       	adc	r23, r1
 cb4:	81 1d       	adc	r24, r1
 cb6:	91 1d       	adc	r25, r1
 cb8:	a1 1d       	adc	r26, r1
 cba:	20 d0       	rcall	.+64     	; 0xcfc <__ultoa_invert+0x84>
 cbc:	09 f4       	brne	.+2      	; 0xcc0 <__ultoa_invert+0x48>
 cbe:	68 94       	set
 cc0:	3f 91       	pop	r19
 cc2:	2a e0       	ldi	r18, 0x0A	; 10
 cc4:	26 9f       	mul	r18, r22
 cc6:	11 24       	eor	r1, r1
 cc8:	30 19       	sub	r19, r0
 cca:	30 5d       	subi	r19, 0xD0	; 208
 ccc:	31 93       	st	Z+, r19
 cce:	de f6       	brtc	.-74     	; 0xc86 <__ultoa_invert+0xe>
 cd0:	cf 01       	movw	r24, r30
 cd2:	08 95       	ret
 cd4:	46 2f       	mov	r20, r22
 cd6:	47 70       	andi	r20, 0x07	; 7
 cd8:	40 5d       	subi	r20, 0xD0	; 208
 cda:	41 93       	st	Z+, r20
 cdc:	b3 e0       	ldi	r27, 0x03	; 3
 cde:	0f d0       	rcall	.+30     	; 0xcfe <__ultoa_invert+0x86>
 ce0:	c9 f7       	brne	.-14     	; 0xcd4 <__ultoa_invert+0x5c>
 ce2:	f6 cf       	rjmp	.-20     	; 0xcd0 <__ultoa_invert+0x58>
 ce4:	46 2f       	mov	r20, r22
 ce6:	4f 70       	andi	r20, 0x0F	; 15
 ce8:	40 5d       	subi	r20, 0xD0	; 208
 cea:	4a 33       	cpi	r20, 0x3A	; 58
 cec:	18 f0       	brcs	.+6      	; 0xcf4 <__ultoa_invert+0x7c>
 cee:	49 5d       	subi	r20, 0xD9	; 217
 cf0:	31 fd       	sbrc	r19, 1
 cf2:	40 52       	subi	r20, 0x20	; 32
 cf4:	41 93       	st	Z+, r20
 cf6:	02 d0       	rcall	.+4      	; 0xcfc <__ultoa_invert+0x84>
 cf8:	a9 f7       	brne	.-22     	; 0xce4 <__ultoa_invert+0x6c>
 cfa:	ea cf       	rjmp	.-44     	; 0xcd0 <__ultoa_invert+0x58>
 cfc:	b4 e0       	ldi	r27, 0x04	; 4
 cfe:	a6 95       	lsr	r26
 d00:	97 95       	ror	r25
 d02:	87 95       	ror	r24
 d04:	77 95       	ror	r23
 d06:	67 95       	ror	r22
 d08:	ba 95       	dec	r27
 d0a:	c9 f7       	brne	.-14     	; 0xcfe <__ultoa_invert+0x86>
 d0c:	00 97       	sbiw	r24, 0x00	; 0
 d0e:	61 05       	cpc	r22, r1
 d10:	71 05       	cpc	r23, r1
 d12:	08 95       	ret
 d14:	9b 01       	movw	r18, r22
 d16:	ac 01       	movw	r20, r24
 d18:	0a 2e       	mov	r0, r26
 d1a:	06 94       	lsr	r0
 d1c:	57 95       	ror	r21
 d1e:	47 95       	ror	r20
 d20:	37 95       	ror	r19
 d22:	27 95       	ror	r18
 d24:	ba 95       	dec	r27
 d26:	c9 f7       	brne	.-14     	; 0xd1a <__ultoa_invert+0xa2>
 d28:	62 0f       	add	r22, r18
 d2a:	73 1f       	adc	r23, r19
 d2c:	84 1f       	adc	r24, r20
 d2e:	95 1f       	adc	r25, r21
 d30:	a0 1d       	adc	r26, r0
 d32:	08 95       	ret

00000d34 <_exit>:
 d34:	f8 94       	cli

00000d36 <__stop_program>:
 d36:	ff cf       	rjmp	.-2      	; 0xd36 <__stop_program>
